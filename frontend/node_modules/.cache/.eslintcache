[{"/home/leesohyang/WebstormProjects/fronted_react_final/src/index.js":"1","/home/leesohyang/WebstormProjects/fronted_react_final/src/client/Root.js":"2","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/index.js":"3","/home/leesohyang/WebstormProjects/fronted_react_final/src/shared/App.js":"4","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/fetchAPI.js":"5","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/slidePop.js":"6","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/MainAppBar.js":"7","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/MainContents.js":"8","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/Navigator.js":"9","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/index.js":"10","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/BreadcrumbNameMap.js":"11","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRule.js":"12","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/Relation.js":"13","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/Asset.js":"14","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Device/LiveDetectRule.js":"15","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/RelsForm.js":"16","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/RelForm.js":"17","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/slidemine.js":"18","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Provider.js":"19","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetSlide.js":"20","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableH.js":"21","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js":"22","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SavePopup.js":"23","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectFieldPopup.js":"24","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectKeyFieldPopup.js":"25","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTable.js":"26","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/ReleasePopup.js":"27","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/NodeSelect.js":"28","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/actions/index.js":"29","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Input.js":"30","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/slideTable.js":"31","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/DetailRel.js":"32","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/Pagination.js":"33","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/GridFilters.js":"34","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/HighlightCell.js":"35","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/ActionsCell.js":"36","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/AvatarCell.js":"37","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/FormProvider.js":"38","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/util/utils.js":"39","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/dataFactory.js":"40","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/MultiSelect.js":"41","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Select.js":"42","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/useForm.js":"43","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectConfirmsPopup.js":"44","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/tmpmine.js":"45","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/graph.js":"46","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetAddForm.js":"47","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/forceGraph.js":"48","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Controls.js":"49","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/tmpmineTable.js":"50","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/ForceGraphGenerator.js":"51","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/ActionButton.js":"52","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Button.js":"53","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Checkbox.js":"54","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/RadioGroup.js":"55","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRuleDetailTable.js":"56","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableNormal.js":"57","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/editOperator.js":"58","/home/leesohyang/WebstormProjects/tmp/src/index.js":"59","/home/leesohyang/WebstormProjects/tmp/src/client/Root.js":"60","/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/index.js":"61","/home/leesohyang/WebstormProjects/tmp/src/shared/App.js":"62","/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/slidePop.js":"63","/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/editOperator.js":"64","/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/fetchAPI.js":"65","/home/leesohyang/WebstormProjects/tmp/src/components/main/Navigator.js":"66","/home/leesohyang/WebstormProjects/tmp/src/components/main/MainAppBar.js":"67","/home/leesohyang/WebstormProjects/tmp/src/components/main/MainContents.js":"68","/home/leesohyang/WebstormProjects/tmp/src/pages/index.js":"69","/home/leesohyang/WebstormProjects/tmp/src/components/controls/BreadcrumbNameMap.js":"70","/home/leesohyang/WebstormProjects/tmp/src/pages/Device/LiveDetectRule.js":"71","/home/leesohyang/WebstormProjects/tmp/src/services/Provider.js":"72","/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectFieldPopup.js":"73","/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectConfirmsPopup.js":"74","/home/leesohyang/WebstormProjects/tmp/src/components/table/FormProvider.js":"75","/home/leesohyang/WebstormProjects/tmp/src/components/table/gridTableH.js":"76","/home/leesohyang/WebstormProjects/tmp/src/components/popup/ReleasePopup.js":"77","/home/leesohyang/WebstormProjects/tmp/src/services/Redux/actions/index.js":"78","/home/leesohyang/WebstormProjects/tmp/src/components/controls/Input.js":"79","/home/leesohyang/WebstormProjects/tmp/src/components/table/HighlightCell.js":"80","/home/leesohyang/WebstormProjects/tmp/src/components/table/GridFilters.js":"81","/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectKeyFieldPopup.js":"82","/home/leesohyang/WebstormProjects/tmp/src/components/table/Pagination.js":"83","/home/leesohyang/WebstormProjects/tmp/src/components/table/ActionsCell.js":"84","/home/leesohyang/WebstormProjects/tmp/src/components/controls/Select.js":"85","/home/leesohyang/WebstormProjects/tmp/src/components/controls/Controls.js":"86","/home/leesohyang/WebstormProjects/tmp/src/components/util/utils.js":"87","/home/leesohyang/WebstormProjects/tmp/src/components/controls/MultiSelect.js":"88","/home/leesohyang/WebstormProjects/tmp/src/components/table/AvatarCell.js":"89","/home/leesohyang/WebstormProjects/tmp/src/components/table/dataFactory.js":"90","/home/leesohyang/WebstormProjects/tmp/src/components/popup/SavePopup.js":"91","/home/leesohyang/WebstormProjects/tmp/src/components/table/gridTableLDR.js":"92","/home/leesohyang/WebstormProjects/tmp/src/components/controls/ActionButton.js":"93","/home/leesohyang/WebstormProjects/tmp/src/components/controls/Button.js":"94","/home/leesohyang/WebstormProjects/tmp/src/components/controls/Checkbox.js":"95","/home/leesohyang/WebstormProjects/tmp/src/components/controls/RadioGroup.js":"96"},{"size":765,"mtime":1637554701187,"results":"97","hashOfConfig":"98"},{"size":213,"mtime":1637554701179,"results":"99","hashOfConfig":"98"},{"size":332,"mtime":1640829845890,"results":"100","hashOfConfig":"98"},{"size":1555,"mtime":1637554701191,"results":"101","hashOfConfig":"98"},{"size":4850,"mtime":1641275512086,"results":"102","hashOfConfig":"98"},{"size":1443,"mtime":1637554701191,"results":"103","hashOfConfig":"98"},{"size":3666,"mtime":1637554701183,"results":"104","hashOfConfig":"98"},{"size":1338,"mtime":1637554701183,"results":"105","hashOfConfig":"98"},{"size":3799,"mtime":1637554701183,"results":"106","hashOfConfig":"98"},{"size":238,"mtime":1637554701187,"results":"107","hashOfConfig":"98"},{"size":317,"mtime":1637554701179,"results":"108","hashOfConfig":"98"},{"size":4561,"mtime":1640852447976,"results":"109","hashOfConfig":"98"},{"size":2367,"mtime":1637554701187,"results":"110","hashOfConfig":"98"},{"size":5755,"mtime":1637554701187,"results":"111","hashOfConfig":"98"},{"size":5397,"mtime":1641371148564,"results":"112","hashOfConfig":"98"},{"size":3116,"mtime":1637554701187,"results":"113","hashOfConfig":"98"},{"size":7917,"mtime":1637554701187,"results":"114","hashOfConfig":"98"},{"size":8746,"mtime":1637554701183,"results":"115","hashOfConfig":"98"},{"size":16338,"mtime":1641456970883,"results":"116","hashOfConfig":"98"},{"size":5165,"mtime":1637554701187,"results":"117","hashOfConfig":"98"},{"size":6463,"mtime":1641465305468,"results":"118","hashOfConfig":"98"},{"size":25972,"mtime":1641478456541,"results":"119","hashOfConfig":"98"},{"size":2368,"mtime":1639464199152,"results":"120","hashOfConfig":"98"},{"size":2989,"mtime":1637554701183,"results":"121","hashOfConfig":"98"},{"size":4566,"mtime":1641450730353,"results":"122","hashOfConfig":"98"},{"size":13305,"mtime":1640824887042,"results":"123","hashOfConfig":"98"},{"size":12347,"mtime":1641457117107,"results":"124","hashOfConfig":"98"},{"size":7466,"mtime":1637554701179,"results":"125","hashOfConfig":"98"},{"size":4381,"mtime":1641458687698,"results":"126","hashOfConfig":"98"},{"size":589,"mtime":1637554701179,"results":"127","hashOfConfig":"98"},{"size":9668,"mtime":1637554701183,"results":"128","hashOfConfig":"98"},{"size":4202,"mtime":1637554701187,"results":"129","hashOfConfig":"98"},{"size":9446,"mtime":1637554701187,"results":"130","hashOfConfig":"98"},{"size":571,"mtime":1637554701187,"results":"131","hashOfConfig":"98"},{"size":899,"mtime":1637554701187,"results":"132","hashOfConfig":"98"},{"size":1026,"mtime":1637554701187,"results":"133","hashOfConfig":"98"},{"size":235,"mtime":1637554701187,"results":"134","hashOfConfig":"98"},{"size":145,"mtime":1637554701187,"results":"135","hashOfConfig":"98"},{"size":2692,"mtime":1637554701187,"results":"136","hashOfConfig":"98"},{"size":176,"mtime":1637554701187,"results":"137","hashOfConfig":"98"},{"size":4033,"mtime":1637554701179,"results":"138","hashOfConfig":"98"},{"size":841,"mtime":1637554701183,"results":"139","hashOfConfig":"98"},{"size":1167,"mtime":1637554701187,"results":"140","hashOfConfig":"98"},{"size":5681,"mtime":1641450650393,"results":"141","hashOfConfig":"98"},{"size":8826,"mtime":1637554701187,"results":"142","hashOfConfig":"98"},{"size":8903,"mtime":1637554701183,"results":"143","hashOfConfig":"98"},{"size":7291,"mtime":1639464199152,"results":"144","hashOfConfig":"98"},{"size":1621,"mtime":1637554701183,"results":"145","hashOfConfig":"98"},{"size":398,"mtime":1637554701179,"results":"146","hashOfConfig":"98"},{"size":9445,"mtime":1637554701187,"results":"147","hashOfConfig":"98"},{"size":4613,"mtime":1637554701179,"results":"148","hashOfConfig":"98"},{"size":839,"mtime":1637554701179,"results":"149","hashOfConfig":"98"},{"size":709,"mtime":1637554701179,"results":"150","hashOfConfig":"98"},{"size":725,"mtime":1637554701179,"results":"151","hashOfConfig":"98"},{"size":777,"mtime":1637554701183,"results":"152","hashOfConfig":"98"},{"size":26446,"mtime":1639464199152,"results":"153","hashOfConfig":"98"},{"size":18140,"mtime":1641365926641,"results":"154","hashOfConfig":"98"},{"size":785,"mtime":1641458687718,"results":"155","hashOfConfig":"98"},{"size":765,"mtime":1641616968454,"results":"156","hashOfConfig":"157"},{"size":213,"mtime":1641616968454,"results":"158","hashOfConfig":"157"},{"size":332,"mtime":1641616968458,"results":"159","hashOfConfig":"157"},{"size":1555,"mtime":1641616968458,"results":"160","hashOfConfig":"157"},{"size":1443,"mtime":1641616968458,"results":"161","hashOfConfig":"157"},{"size":785,"mtime":1641616968458,"results":"162","hashOfConfig":"157"},{"size":4826,"mtime":1641620133250,"results":"163","hashOfConfig":"157"},{"size":2082,"mtime":1641623423095,"results":"164","hashOfConfig":"157"},{"size":3666,"mtime":1641616968454,"results":"165","hashOfConfig":"157"},{"size":921,"mtime":1641623369303,"results":"166","hashOfConfig":"157"},{"size":59,"mtime":1641623342139,"results":"167","hashOfConfig":"157"},{"size":99,"mtime":1641623423071,"results":"168","hashOfConfig":"157"},{"size":4461,"mtime":1641623888841,"results":"169","hashOfConfig":"157"},{"size":16576,"mtime":1641782588644,"results":"170","hashOfConfig":"157"},{"size":2989,"mtime":1641616968454,"results":"171","hashOfConfig":"157"},{"size":5681,"mtime":1641616968454,"results":"172","hashOfConfig":"157"},{"size":145,"mtime":1641616968454,"results":"173","hashOfConfig":"157"},{"size":6595,"mtime":1641624720409,"results":"174","hashOfConfig":"157"},{"size":10994,"mtime":1641625282037,"results":"175","hashOfConfig":"157"},{"size":4381,"mtime":1641616968458,"results":"176","hashOfConfig":"157"},{"size":589,"mtime":1641616968454,"results":"177","hashOfConfig":"157"},{"size":899,"mtime":1641616968454,"results":"178","hashOfConfig":"157"},{"size":571,"mtime":1641616968454,"results":"179","hashOfConfig":"157"},{"size":4566,"mtime":1641616968454,"results":"180","hashOfConfig":"157"},{"size":9446,"mtime":1641616968454,"results":"181","hashOfConfig":"157"},{"size":1026,"mtime":1641616968454,"results":"182","hashOfConfig":"157"},{"size":841,"mtime":1641616968454,"results":"183","hashOfConfig":"157"},{"size":398,"mtime":1641616968454,"results":"184","hashOfConfig":"157"},{"size":2692,"mtime":1641616968454,"results":"185","hashOfConfig":"157"},{"size":4033,"mtime":1641616968454,"results":"186","hashOfConfig":"157"},{"size":235,"mtime":1641616968454,"results":"187","hashOfConfig":"157"},{"size":176,"mtime":1641616968454,"results":"188","hashOfConfig":"157"},{"size":2293,"mtime":1641618369476,"results":"189","hashOfConfig":"157"},{"size":21391,"mtime":1641625458009,"results":"190","hashOfConfig":"157"},{"size":839,"mtime":1641616968454,"results":"191","hashOfConfig":"157"},{"size":709,"mtime":1641616968454,"results":"192","hashOfConfig":"157"},{"size":725,"mtime":1641616968454,"results":"193","hashOfConfig":"157"},{"size":777,"mtime":1641616968454,"results":"194","hashOfConfig":"157"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},"1u1eewf",{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"197"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"197"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"197"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"197"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"197"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"197"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"197"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"197"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"197"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"197"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"197"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"197"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"197"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"197"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"197"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"197"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"197"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"197"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"197"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"197"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"197"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"197"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"197"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"197"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"197"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"197"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"197"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"197"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"197"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"197"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"197"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"197"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17rmt8h",{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leesohyang/WebstormProjects/fronted_react_final/src/index.js",[],["420","421"],"/home/leesohyang/WebstormProjects/fronted_react_final/src/client/Root.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/index.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/shared/App.js",["422","423","424","425","426","427"],"import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport { Home, About } from '../pages';\nimport {CssBaseline} from \"@material-ui/core\";\nimport MainAppBar from \"../components/main/MainAppBar\";\nimport Navigator from \"../components/main/Navigator\";\nimport {makeStyles} from \"@material-ui/core\";\nimport MainContents from \"../components/main/MainContents\";\nimport '../components/styles/styles.scss'\n\n//TODO::Navigator 따로 빼야함.\n\nfunction App() {\n    return (\n        // <div className={classes.root}>\n        <React.Fragment>\n\n            <BrowserRouter initialEntries={['/']} initialIndex={0}>\n                <div className=\"navbar\">\n                    <div className=\"navbar__logo\">\n                        <div className=\"logo\" />\n                    </div>\n                    <MainAppBar />\n                </div>\n\n\n                <div className=\"wrapper correlation-rule\">\n\n                    <nav className=\"left-menu-wrapper\">\n                        <div className=\"left-menu\">\n                            <div className=\"left-menu__title\">Admin</div>\n                            <ul className=\"left-menu__list\">\n                                <Navigator/>\n                            </ul>\n\n                            <div className=\"left-menu__title\">Rules</div>\n                        </div>\n                    </nav>\n\n                    <MainContents />\n\n                </div>\n            </BrowserRouter>\n        </React.Fragment>\n\n        // </div>\n\n\n    );\n}\nexport default App;","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/fetchAPI.js",["428"],"\nconst initialState = {\n    open: false,\n    openSelect: false,\n    currType: '',\n    data: [{}],\n    history: [],\n    historyLive: [], //[{}]=>[]\n    historyNormal:[],\n    linkData: [{}],\n    temp: [{}],\n    refre: false,\n    headerRestore: false,\n    ad: false,\n    link: [{}],\n    node: [{}],\n    dataTmp: {\n        nodes:[\n        ],\n        links:[\n        ]\n    },\n    //for history\n    edited: 0,\n    editedOrigin:{},\n    hflag: false,\n    addedField: \"\",\n    header: [],\n    keyField: {},\n    openKeyField: false,\n    openConField: false,\n    openSave: false,\n    headVersion: \"\",\n    headVersionTmp: \"\",\n    startHistory: false\n\n}\n\nexport default function fetchAPI(state = initialState, action) {\n    switch (action.type) {\n        case \"HIS_FLAG\":\n            return {\n                ...state,\n                hflag: action.payload\n            }\n        case \"START_HIS\":\n            return {\n                ...state,\n                startHistory: action.payload\n            }\n        case \"CURR_ED\":\n            return {\n                ...state,\n                edited: action.viewIn,\n                editedOrigin: action.In\n            }\n        case \"KEY_FIELD\":\n            return {\n                ...state,\n                keyField:action.payload\n            }\n        case \"HEAD_LIST\":\n            return {\n                ...state,\n                header: action.payload\n            }\n        case \"RESTORE_VER\":\n            return {\n                ...state,\n                headVersionTmp: action.payload\n            }\n        case \"SAVE_VER\":\n            return {\n                ...state,\n                headVersion: action.payload\n            }\n        case \"OPEN_POP\":\n            return {\n                ...state,\n                open: action.payload\n            }\n        case \"ADD_FIELD\":\n            return {\n                ...state,\n                addedField: action.payload\n            }\n        case \"OPEN_SAVE_POP\":\n            return {\n                ...state,\n                openSave: action.payload\n            }\n\n        case \"OPEN_CON_POP\":\n            return {\n                ...state,\n                openConField: action.payload\n            }\n        case \"OPEN_KEY_POP\":\n            return {\n                ...state,\n                openKeyField: action.payload\n            }\n        case \"OPEN_SELECT_POP\":\n            return {\n                ...state,\n                openSelect: action.payload\n            }\n        case \"CURR_TYPE\":\n            return {\n                ...state,\n                currType: action.payload\n            }\n        case \"EDIT_ZERO\":\n            return {\n                ...state,\n                edited: 0\n            }\n        case \"GET_ALLH_NORMAL\":\n            return {\n                ...state,\n                historyNormal: action.payload,\n                editedOrigin: action.init,\n                edited: 0\n            }\n        case \"GET_ALLH_LIVE\":\n            return {\n                ...state,\n                historyLive: action.payload,\n                editedOrigin: action.init,\n                edited: 0\n            }\n        case \"GET_ALLH\":\n            return {\n                ...state,\n                history:action.payload,\n                editedOrigin: action.init, //배포용\n                edited: 0\n            }\n        case \"GET_ALL\":\n            return {\n                ...state,\n                refre: false,\n                ad: false,\n                data: action.payload\n                // data:\n            }\n        case \"ADD_TMP\":\n            return {\n                ...state,\n                data: action.payload\n            }\n        case \"DEL_TMP\":\n            return {\n                ...state,\n                data: state.data.filter((data, i)=>\n                    // data.id !== state.data.length\n                    data.id != action.payload\n        )\n            }\n        case \"GET_TMP\":\n            return {\n                ...state,\n                temp: action.payload\n            }\n        case \"REV_RE\":\n            return {\n                ...state,\n                refre: action.payload\n            }\n        case \"HEAD_RESTORE\":\n            return {\n                ...state,\n                headRestore: action.payload\n            }\n        case \"REV_AD\":\n            return {\n                ...state,\n                ad: action.payload\n            }\n\n        case \"GET_GRAPH\":\n            return {\n                ...state,\n                ad: false,\n                linkData: action.link,\n            }\n        case \"GET_GRAPH2\":\n            return {\n                ...state,\n                linkData: action.link,\n                dataTmp: {\n                    nodes: action.node,\n                    links: action.link\n                }\n            }\n        default:\n            return state;\n    }\n}","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/slidePop.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/MainAppBar.js",["429","430","431","432"],"import React from \"react\";\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport {Route} from \"react-router\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport {breadcrumbNameMap} from \"../controls/BreadcrumbNameMap\";\nimport './style.scss'\nconst LinkRouter = (props) => <Link {...props} component={RouterLink}/>;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // display: 'flex',\n        flexDirection:'column',\n    },\n    appBar: {\n        // display: \"flex\",\n        flexDirection: 'row',\n        position: \"static\"\n    },\n    path: {\n        flexGrow: 1\n    },\n}))\n\nexport default function MainAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n             <Route>\n                 {({ location }) => {\n                     const pathnames = location.pathname.split('/').filter((x) => x);\n\n                     return (\n                         <Breadcrumbs color=\"inherit\">\n                             {pathnames.map((value, index) => {\n                                 const last = index === pathnames.length - 1;\n                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                                 return last ? (\n                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </Typography>\n                                 ) : (\n                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </LinkRouter>\n                                 );\n                             })}\n                         </Breadcrumbs>\n                     );\n                 }}\n             </Route>\n        </React.Fragment>\n\n        // <div className={classes.root}>\n        //     <AppBar className={classes.appBar} >\n        //         <Toolbar className={classes.path}>\n        //             <Route>\n        //                 {({ location }) => {\n        //                     const pathnames = location.pathname.split('/').filter((x) => x);\n        //\n        //                     return (\n        //                         <Breadcrumbs color=\"inherit\">\n        //                             {pathnames.map((value, index) => {\n        //                                 const last = index === pathnames.length - 1;\n        //                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n        //\n        //                                 return last ? (\n        //                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </Typography>\n        //                                 ) : (\n        //                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </LinkRouter>\n        //                                 );\n        //                             })}\n        //                         </Breadcrumbs>\n        //                     );\n        //                 }}\n        //             </Route>\n        //         </Toolbar>\n        //         <Button color=\"inherit\">Login</Button>\n        //     </AppBar>\n        // </div>\n    );\n\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/MainContents.js",["433","434"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Asset, Device, Relation, NormalizeRule} from \"../../pages\";\nimport {Repeat} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 10,\n    },\n}));\n\nexport default function MainContents() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n            <Switch>\n                {/*<Route path={'/home'} exact={true}>*/}\n                {/*</Route>*/}\n                <Route path={'/asset'} exact={true} component={Asset}>\n                </Route>\n                {/*<Route path={'/assetgroup/asset'} exact={true}>*/}\n                {/*</Route>*/}\n                <Route path={'/livedetectrule'} exact={true} component={Device}>\n                    {/*    <ContentsTable title={'Device Group'} headCells={headCells} rows={rows}/>*/}\n                </Route>\n                <Route path={'/normalizerule'} exact={true} component={NormalizeRule}>\n\n                </Route>\n                <Route path={'/relation'} exact={true} component={Relation}>\n                    {/*    <ContentsTable title={'Device Profile'} headCells={headCells} rows={rows}/>*/}\n                </Route>\n            </Switch>\n        </React.Fragment>\n    );\n\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/main/Navigator.js",["435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import React, {useState} from \"react\";\nimport {Divider, makeStyles, Typography} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {breadcrumbNameMap} from \"../controls/BreadcrumbNameMap\";\nimport {Link} from \"react-router-dom\";\nimport './style.scss'\nimport { NavLink } from 'react-router-dom';\n\n//TODO:: 또 여길 고쳐야겠ㄴ네\nfunction ListItemLink(props) {\n    const { to, open, ...other } = props;\n    const primary = breadcrumbNameMap[to];\n\n    return (\n        <React.Fragment>\n            <li>\n\n                <NavLink to=\"/asset\" activeClassName=\"active\" {...other}>\n                    {primary}\n                </NavLink>\n                {/*<ListItem button component={Link} to={to} {...other}>*/}\n                {/*    <ListItemText primary={primary} />*/}\n                {/*    {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}*/}\n                {/*</ListItem>*/}\n            </li>\n            <li>\n\n                <NavLink to=\"/livedetectrule\" activeClassName=\"active\" {...other}>\n                    {primary}\n                </NavLink>\n            </li>\n        </React.Fragment>\n    );\n}\n\n// ListItemLink.propTypes = {\n//     open: PropTypes.bool,\n//     to: PropTypes.string.isRequired,\n// };\n\n\nexport default function Navigator() {\n    const [open, setOpen] = useState(true);\n    const primary = (to) => {\n        return breadcrumbNameMap[to]\n    }\n    const handleClick = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <li>\n\n                <NavLink to=\"/asset\" activeClassName=\"active\">\n                    {primary(\"/asset\")}\n                </NavLink>\n                {/*<ListItem button component={Link} to={to} {...other}>*/}\n                {/*    <ListItemText primary={primary} />*/}\n                {/*    {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}*/}\n                {/*</ListItem>*/}\n            </li>\n            <li>\n                <NavLink to=\"/livedetectrule\" activeClassName=\"active\">\n                    {primary(\"/livedetectrule\")}\n                </NavLink>\n            </li>\n\n            <li>\n                <NavLink to=\"/normalizerule\" activeClassName=\"active\">\n                    {primary(\"/normalizerule\")}\n                </NavLink>\n            </li>\n                    {/*<ListItemLink to=\"/home\" />*/}\n                    {/*<Divider/>*/}\n                    {/*<ListItemLink to=\"/asset\" open={open} onClick={handleClick} />*/}\n                    {/*<Divider/>*/}\n                    {/*/!*<Collapse component=\"li\" in={open} timeout=\"auto\" unmountOnExit>*!/*/}\n                    {/*/!*    <List disablePadding>*!/*/}\n                    {/*/!*        <ListItemLink to=\"/assetgroup/asset\" className={classes.nested} />*!/*/}\n                    {/*/!*    </List>*!/*/}\n                    {/*/!*</Collapse>*!/*/}\n                    {/*<Divider/>*/}\n                    {/*<ListItemLink to=\"/livedetectrule\" open={open} onClick={handleClick}/>*/}\n                    {/*<Divider/>*/}\n                    {/*<ListItemLink to=\"/deviceprofile\" />*/}\n                    {/*<Divider/>*/}\n                    {/*<ListItemLink to=\"/relation\" open={open} onClick={handleClick}/>*/}\n                    {/*<Divider/>*/}\n\n                {/*<Route exact path=\"/home\" component={Home} />*/}\n                {/*<Route path=\"/assetgroup\" component={AssetGroup} />*/}\n\n        </React.Fragment>\n        // </div>\n    );\n\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/index.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/BreadcrumbNameMap.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRule.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"import React, {useState, useRef, useEffect} from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    revAd,\n    revRe,\n    revOp,\n    clickedOp,\n    currType,\n    getAllR,\n    openSelectPop,\n    openSelectKeyFieldPop, openSelectConFieldPop, openSavePop, clearClicked\n} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport \"./style.scss\"\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport GridTableNormal from \"../../components/table/gridTableNormal\";\nimport SlidingPane from \"react-sliding-pane\";\nimport FormProvider from \"../../components/table/FormProvider\";\nimport Table from \"react-table\";\nimport SelectConfirmsPopup from \"../../components/popup/SelectConfirmsPopup\";\nimport NormalizeRuleDetail from \"./NormalizeRuleDetailTable\";\n\n\nconst NormalizeRule = () => {\n\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const data = useSelector(state=>state.fetchAPI.data)\n    const cData = useSelector(state=>state.SlidePop.clickedData)\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n\n        dispatch(revOp(false))\n        // dispatch(revRe(true))\n        // dispatch(clearClicked(''))\n\n        // props.onChangeClose();\n    }\n\n    const columns = [\n\n        { Header: \"ID\", accessor: \"id\" },\n        { Header: \"Use\", accessor: \"use\" },\n        { Header: \"Classifier\", accessor: \"classifier\" },\n        { Header: \"Vendors\", accessor: \"vendors\" },\n    ]\n\n    useEffect(()=>{\n        // handleData()\n    }, [])\n\n    const handleData = () => {\n        // dispatch(apiProvider.getAllRedux(\"normalizerule\"))\n        dispatch(apiProvider.getNormalizeRule(0, 2))\n    }\n\n    const handleCellClicked = (row) => {\n        // const arr = [{data:1, not: false}, {data:2, not: false}, {data:3, not:false}];\n        // const copied = arr.slice()\n        // copied[0].data = 5\n        //\n        // console.log(arr) //바뀌어있음.\n        (!data.slice().filter(i=>i.id === row.id).shift().hasOwnProperty(\"rules\")) ? (\n        apiProvider.getRow(\"normalizerule\", row.id)\n            .then((data)=>{\n                dispatch(clickedOp(data, true))\n            })\n        ) : dispatch(clickedOp(data.slice().filter(i=>i.id ===row.id).shift(), true)) //왜 굳이 이렇게 넣는거지?\n\n    }\n    const handleAddTotal = (ob) => {\n        apiProvider.insertNormalTotal(ob) //뭐 따로 리프레시 안하니?\n    }\n    const handleAdd = (ob) =>{\n        apiProvider.insertNormal(ob)\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history/normalizerule\"))\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Normalize Rule </span>\n                    <div className=\"binder\" />\n                </div>\n                <GridTableNormal\n                    columns={columns}\n                    handleData={handleData}\n                    handleRow={handleCellClicked}\n                    handleAddTotal={handleAddTotal}\n                    handleAdd={handleAdd}\n                >\n\n                </GridTableNormal>\n\n                <GridTableH\n                    name=\"normalizerule\"\n                    handleData={handleDataH}\n                ></GridTableH>\n\n                <SlidingPane\n                    className=\"slide-pane__content\"\n                    overlayClassName=\"some-custom-overlay-class\"\n                    isOpen = {isOpen}\n                    title= {\"Rules\"}\n                    onRequestClose= {handleChange}\n                >\n                    <NormalizeRuleDetail></NormalizeRuleDetail>\n                </SlidingPane>\n                {/*{ openPop && <ReleasePopup addf={addOrEdit}> </ReleasePopup>}*/}\n\n            </div>\n\n\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(NormalizeRule);","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/Relation.js",["472","473","474","475","476","477","478","479","480","481","482","483","484"],"import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType} from \"../../services/Redux/actions\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport RelForm from \"../Asset/RelForm\";\nimport RelFormP from \"./RelsForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst Relation = () => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        clickedTab: '',\n        title: 'Relation'\n    });\n\n\n    useEffect(()=>{\n        dispatch(currType(\"relation\"))\n        dispatch(apiProvider.getTemp(\"relation\"))\n    }, [])\n\n    const classes = useStyles();\n\n//여기서부터 relation crud로 바꾸고\n    const addOrEdit = (equip, resetForm) => {\n        // dispatch(revRe(false))\n        apiProvider.insert(\"asset\", equip).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"link\", id).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const handleData = () => {\n        dispatch(apiProvider.getNodes())\n    }\n\n    const handleCellClicked = (e, row) => {\n        apiProvider.getRow(\"link\", row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n\n    }\n\n    return (\n        <div>\n            <main className={classes.menuButton}>\n                <TabletoolbarRel title={state.title} adde={addOrEdit} delete={editOrDelete} handleData={handleData} handleCell={handleCellClicked}>\n                    <RelFormP></RelFormP>\n                </TabletoolbarRel>\n            </main>\n\n        </div>\n    );\n};\n\n\nexport default React.memo(Relation);","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/Asset.js",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"./AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"./AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType, getAllR, openSelectPop} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport MainContents from \"../../components/main/MainContents\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst Asset = () => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const openPop = useSelector(state=>state.fetchAPI.open)\n    const selectPop = useSelector(state=>state.fetchAPI.openSelect)\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n    //TODO::popup을 따로 빼야하나?\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose1 = () => {\n        setAnchorEl(null);\n        // setOpen(true)\n    };\n    const handleClickOpen = () => {\n        setAnchorEl(null);\n        setOpen(true);\n        console.log(\"popup open\")\n\n    };\n    const handleClose = () => {\n        setOpen(false);\n        // props.onaddChange();\n        //\n        dispatch(revAd(true))\n    };\n\n\n    const dispatch = useDispatch();\n\n\n    useEffect(()=>{\n        dispatch(currType(\"field\")) //이거 지금 안써서.. 요 useEffect 지워야할듯.\n        dispatch(apiProvider.getTemp(\"field\"))\n\n        handleData()\n    }, [])\n\n    const classes = useStyles();\n\n\n    const handleUpdate = (data) => {\n        apiProvider.update(\"field\", data).then(()=>dispatch(revRe(true)))\n    }\n    const addOrEdit = (data) => {\n        // dispatch(revRe(false))\n        apiProvider.insert(\"field\", data).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"field\", id).then(()=>{dispatch(revRe(true))})\n    }\n    const deleteAll = () => {\n        apiProvider.delAll(\"field\")\n    }\n\n    const handleData = () => {\n        dispatch(apiProvider.getAllRedux(\"field\"))\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history\"))\n    }\n    const handleCellClicked = (row) => {\n        // apiProvider.getRow(\"field\", row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n\n    }\n    const openSelectPopup = () => {\n        dispatch(openSelectPop(true))\n    }\n    //TODO:: Field field table 맹글기\n    return (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Field </span>\n                    <div className=\"binder\" />\n                </div>\n                {/*<MainContents />*/}\n\n                <GridTable\n                    handleRow={handleCellClicked}\n                    handleData={handleData}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    update={handleUpdate}\n                    columns = {\n                        [\n                        { Header: \"ID\", accessor: \"fieldId\" },\n                        { Header: \"Name\", accessor: \"name\" },\n                        { Header: \"Type\", accessor: \"type\" },\n                        { Header: \"Group\", accessor: \"group\" },\n                        { Header: \"Desc\", accessor: \"desc\" },\n                        ]\n                    }\n                    // openSelectPopup={openSelectPopup}\n                ></GridTable>\n\n\n\n                <SlideTmp\n                    tablist = {[\"Details\", \"Relations\"]}\n                    handleUpdate={handleUpdate}\n                >\n                </SlideTmp>\n\n\n            </div>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> History </span>\n                    <div className=\"binder\" />\n                </div>\n\n                <GridTableH\n                    name=\"field\"\n                    handleRow={handleCellClicked}\n                    handleData={handleDataH}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    update={handleUpdate}\n                ></GridTableH>\n\n\n\n                <SlideTmp\n                    tablist = {[\"Details\", \"Relations\"]}\n                    handleUpdate={handleUpdate}\n                >\n                </SlideTmp>\n\n                { openPop && <ReleasePopup addf={addOrEdit} deleteAll={deleteAll} name=\"history\"> </ReleasePopup>}\n                {/*{ selectPop && <SelectFieldPopup> </SelectFieldPopup>}*/}\n\n            </div>\n\n\n\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(Asset);","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Device/LiveDetectRule.js",["510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React, {useState, useRef, useEffect} from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    revAd,\n    revRe,\n    revOp,\n    clickedOp,\n    currType,\n    getAllR,\n    openSelectPop,\n    openSelectKeyFieldPop, openSelectConFieldPop, openSavePop, saveVersion\n} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SlideTmp from \"../Asset/AssetSlide\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst LiveDetectRule = () => {\n\n    const openPop = useSelector(state=>state.fetchAPI.open)\n    const selectPop = useSelector(state=>state.fetchAPI.openSelect)\n    const selectKPop = useSelector(state=>state.fetchAPI.openKeyField)\n    const [change, setChange] = useState(false)\n    const savePop = useSelector(state=>state.fetchAPI.openSave)\n    const version = useSelector(state=>state.fetchAPI.headVersion)\n    const headers = useSelector(state=>state.fetchAPI.header)\n    const ob = useSelector(state=>state.fetchAPI.keyField)\n    const dispatch = useDispatch();\n\n\n    useEffect(()=>{\n        // dispatch(apiProvider.getHead()) //최신 header 가져오고.안돼. 데이터먼저 가져와야돼.\n        apiProvider.getHead().then((ver)=>{\n            dispatch(saveVersion(ver)) //여기서 save 하기 전에 version을 dispatch 해버려서 그랫음.\n            dispatch(apiProvider.getHeadVer(ver))})\n        // handleData()\n    }, [])\n\n    const handleUpdate = (data) => {\n        apiProvider.update(\"rules\", data).then(()=>dispatch(revRe(true)))\n    }\n    // const addOrEdit = (data) => {\n    //     apiProvider.getHead().then((ver)=>\n    //         apiProvider.insertLiveDetect(data, ver)\n    //     )\n    // }\n    const addOrEdit = (data, ver) => {\n        apiProvider.insertLiveDetect(data, ver)\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"field\", id).then(()=>{dispatch(revRe(true))})\n\n    }\n    // const handleHead = ()=>{\n    //     dispatch(apiProvider.getHead())\n    // }\n    const handleHeadVer = (ver) =>{\n        dispatch(apiProvider.getHeadVer(ver))\n    }\n    const handleData = () => {\n        // dispatch(apiProvider.getAllRedux(\"field\"))\n        // dispatch(apiProvider.getLiveRules())\n        apiProvider.getLiveRules(0, 2).then((res)=>{\n\n        })\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history/livedetectrule\"))\n    }\n\n    const openConSelectPopup = () =>{\n        dispatch(openSelectConFieldPop(true))\n    }\n    const openKeySelectPopup = () => {\n        dispatch(openSelectKeyFieldPop(true))\n    }\n    const openSelectPopup = () => {\n        console.log(ob)\n        dispatch(openSelectPop(true))\n    }\n    const openSavePopup = () => {\n        dispatch(openSavePop(true))\n    }\n    const insertHead = (header) => {\n        apiProvider.insertHead(header).then(()=>{dispatch(revRe(true))})\n    }\n    const activeHead = (version) => {\n        apiProvider.activeHead(version).then(()=>{dispatch(revRe(true))})\n    }\n    const deleteAll = () => {\n        apiProvider.delAll(\"rules\")\n    }\n    return headers.length > 0 && (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Live Detect Rule </span>\n                    <div className=\"binder\" />\n                </div>\n\n                <GridTableLDR\n                    handleData={handleData}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    insertHead={insertHead}\n                    activeHead={activeHead}\n                    // handleHead={handleHead}\n                    handleHeadVer={handleHeadVer}\n                    update={handleUpdate}\n                    columns = {\n                        headers\n                    }\n                    openSelectPopup={openSelectPopup}\n                    openKeySelectPopup={openKeySelectPopup}\n                    openConSelectPopup={openConSelectPopup}\n                    openSave={openSavePopup}\n                ></GridTableLDR>\n\n                <GridTableH\n                    name=\"livedetectrule\"\n                    handleData={handleDataH}\n                ></GridTableH>\n\n                { openPop && <ReleasePopup addf={addOrEdit} deleteAll={deleteAll} name=\"history/livedetectrule\"> </ReleasePopup>}\n                { selectPop && <SelectFieldPopup> </SelectFieldPopup>}\n                { savePop && <SavePopup></SavePopup>}\n\n            </div>\n\n\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(LiveDetectRule);","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/RelsForm.js",["525","526","527","528","529","530","531","532","533","534","535","536","537"],"import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"../../components/useForm\"\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {apiProvider} from \"../../services/Provider\";\nimport MultiSelect from \"../../components/controls/MultiSelect\";\nimport {revRe, selectedOp} from \"../../services/Redux/actions\";\nimport RelForm from \"../Asset/RelForm\";\nimport NodeSelect from \"../../components/NodeSelect\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n//RelForm 컴포넌트를 두개 넣으면 되잖아?\nfunction RelFormP(props) {\n    //clickedData가 있으면 그 데이터로 from node 고정. 없으면 ㄴㄴ\n\n    const data = useSelector(state => state.SlidePop.clickedData)\n    const classes = useStyles();\n    // const [cat, setCat] = React.useState('');\n\n    const entities = useSelector(state=>state.SlidePop.entities)\n    const entityFrom = useSelector(state=>state.SlidePop.entityFrom)\n    const selectedFrom = useSelector(state=>state.SlidePop.selectedDataF)\n    const selected = useSelector(state=>state.SlidePop.selectedData)\n\n    const [state, setState] = useState({\n        relation:'',\n        fromNodeID:'',\n        toNodeID:''\n    })\n    const dispatch = useDispatch();\n\n    const validate = {} //todo::validation만들기\n\n    // todo:: 새 줄 추가.. 도 만들어야함.\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffectSkipFirst(()=>{\n        //DetailRel.js 에 add function 가져다써야함.\n        console.log(state)\n        apiProvider.insertLink(state).then(()=>{dispatch(revRe(true));dispatch(selectedOp([]))})\n    }, [state])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        //name 중복체크 하기\n        const fromNode = entityFrom.filter((item)=>selectedFrom.indexOf(item.name) >= 0)[0].id\n        const ob = entities.filter((item)=>selected.indexOf(item.name) >= 0).map((i)=>(i.id)).map((item)=>(\n            {relation:\"Contain\", fromNodeID:fromNode, toNodeID:item}\n        ))\n        setState(ob)\n\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <NodeSelect></NodeSelect>\n            <NodeSelect type=\"Multi\"></NodeSelect>\n            <div>\n                <Controls.Button\n                    type=\"submit\"\n                    text=\"Submit\"\n                />\n            </div>\n\n        </Form>\n        )\n}\n\nexport default React.memo(RelFormP)","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/RelForm.js",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557"],"import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"../../components/useForm\"\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {apiProvider} from \"../../services/Provider\";\nimport MultiSelect from \"../../components/controls/MultiSelect\";\nimport {getGraphs, revAd, revRe, selectedOp} from \"../../services/Redux/actions\";\nimport NodeSelect from \"../../components/NodeSelect\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n//clicked data 있으면 from node 설정 안하게 만들어놔야함.\nfunction RelForm(props) {\n    const data = useSelector(state => state.SlidePop.clickedData)\n    const classes = useStyles();\n    const mounted = React.useRef(false);\n    // const [cat, setCat] = React.useState('');\n    const [entityTypes, setEntityTypes] = React.useState([]);\n    const [vendors, setVendors] = React.useState([]);\n    const [models, setModels] = React.useState([]);\n\n    // const [entities, setEntities] = React.useState(\"\");\n    const entities = useSelector(state=>state.SlidePop.entities)\n\n    const selected = useSelector(state=>state.SlidePop.selectedData)\n\n    const [state, setState] = useState([{\n        relation:'',\n        fromNodeID:'',\n        toNodeID:''\n    }])\n    const dispatch = useDispatch();\n\n    const validate = {} //todo::validation만들기\n    const initialFValues = {\n        cat:'',\n        model: '',\n        vendor: '',\n        entityType: '',\n        relation: 'contain',\n        // from_node_id: data.id,\n        // to_node_id: '',\n        createdAt: '1',\n        updatedAt: '1'\n    }\n\n    // const {\n    //     values,\n    //     setValues,\n    //     errors,\n    //     setErrors,\n    //     handleInputChange,\n    //     resetForm\n    // } = useForm(initialFValues, false, validate, )\n\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    // useEffectSkipFirst(()=>{\n    //     apiProvider.getTypes(values.cat).then((res) =>\n    //         setEntityTypes(res.data))\n    // }, [values.cat])\n    //\n    // useEffectSkipFirst(()=>{\n    //     if(values.cat === \"asset\"){\n    //         //entity list call api (asset\n    //         //setEntities -> multi select\n    //         apiProvider.getEna(values.entityType).then((res)=>\n    //         {\n    //             setEntities(res.data)\n    //         })\n    //     }\n    //     else {\n    //         apiProvider.getVendors(values.entityType).then((res) =>\n    //         {\n    //             setVendors(res.data);\n    //             setModels([]);\n    //         })\n    //     }\n    // }, [values.entityType])\n    //\n    // useEffectSkipFirst(()=>{\n    //     console.log(entities)\n    // }, [entities])\n    //\n    // useEffectSkipFirst(()=>{\n    //     apiProvider.getModels(values.entityType, values.vendor).then((res)=>\n    //     {\n    //         setModels(res.data.map((item)=> item.model))\n    //     })\n    // }, [values.vendor])\n    //\n    // useEffectSkipFirst(()=>{\n    //     if(values.cat === \"device\"){\n    //         //entity list call api (device)\n    //         apiProvider.getEnd(values.entityType, values.vendor, values.model).then((res)=>\n    //         {\n    //             setEntities(res.data)\n    //         })\n    //     }\n    //\n    // }, [values.model])\n\n    useEffectSkipFirst(()=>{\n        //DetailRel.js 에 add function 가져다써야함.\n        dispatch(getGraphs([], []))\n        apiProvider.insertLink(state)\n            .then(()=>{dispatch(revRe(true));dispatch(selectedOp([]))})\n            .then(()=>{props.onclose(false)}) //popup 끄고\n\n    }, [state])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        //name 중복체크 하기\n\n        const ob = entities.filter((item)=>selected.indexOf(item.name) >= 0).map((i)=>(i.id)).map((item)=>(\n            {relation:\"Contain\", fromNodeID:data.id, toNodeID:item}\n        ))\n        setState(ob)\n\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <NodeSelect type=\"Multi\"></NodeSelect>\n\n            <div>\n                <Controls.Button\n                    type=\"submit\"\n                    text=\"Submit\"\n                />\n            </div>\n            {/*<Grid container>*/}\n            {/*    <Grid item xs={6}>*/}\n\n            {/*        <Input*/}\n            {/*            readonly={true}*/}\n            {/*            name=\"relation\"*/}\n            {/*            label=\"relation\"*/}\n            {/*            value={values.relation}*/}\n            {/*        />*/}\n            {/*        <Controls.Select*/}\n            {/*            name=\"cat\"*/}\n            {/*            label=\"Category\"*/}\n            {/*            value={values.cat}*/}\n            {/*            {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}*/}\n            {/*            options={[\"asset\", \"device\"]}*/}\n            {/*            // error={errors.departmentId}*/}\n            {/*        />*/}\n\n            {/*        <Controls.Select*/}\n            {/*            name=\"entityType\"*/}\n            {/*            label=\"Entity Type\"*/}\n            {/*            value={values.entityType}*/}\n            {/*            {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}*/}\n            {/*            options={entityTypes}*/}\n            {/*            // error={errors.departmentId}*/}\n            {/*        />*/}\n\n            {/*    </Grid>*/}\n            {/*    {values.cat === \"device\" && (*/}\n            {/*        <Grid item xs={6}>*/}\n\n            {/*            <Controls.Select*/}\n            {/*                name=\"vendor\"*/}\n            {/*                label=\"Vendor\"*/}\n            {/*                value={values.vendor || ''}*/}\n            {/*                {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}*/}\n            {/*                options={vendors}*/}\n            {/*                error={errors.vendor}*/}\n            {/*            />*/}\n            {/*            <Controls.Select*/}\n            {/*                name=\"model\"*/}\n            {/*                label=\"Model\"*/}\n            {/*                value={values.model || ''}*/}\n            {/*                {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}*/}\n            {/*                options={models}*/}\n            {/*                error={errors.model}*/}\n            {/*            />*/}\n            {/*        </Grid>)*/}\n            {/*    }*/}\n            {/*    {entities !== \"\" && (*/}\n\n            {/*        <MultiSelect*/}\n            {/*            options={*/}\n            {/*                entities.map((item)=>(*/}\n            {/*                    item.name*/}\n            {/*                ))*/}\n            {/*            }*/}\n            {/*        >*/}\n            {/*        </MultiSelect>*/}\n            {/*    )}*/}\n            {/*    <div>*/}\n            {/*        <Controls.Button*/}\n            {/*            type=\"submit\"*/}\n            {/*            text=\"Submit\"*/}\n            {/*        />*/}\n            {/*    </div>*/}\n\n            {/*</Grid>*/}\n        </Form>\n\n    )\n}\n\nexport default React.memo(RelForm)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/slidemine.js",["558","559","560","561","562","563","564","565","566","567","568"],"import React, {useState, useEffect, memo} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReleasePopup from \"./popup/ReleasePopup\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BasicTableR from \"./slideTable\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport classNames from \"classnames\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Grid, } from '@material-ui/core';\nimport Input from \"../components/controls/Input\";\nimport {clearClicked, clickedOp, getGraphs, revAd, revRe} from \"../services/Redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport ReactTable from \"react-table\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        // width: '100vw',\n        // height: '100vh',\n        // spacing: 0,\n        // justify: 'space-around'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        // flexGrow: 1,\n        marginRight: theme.spacing(4),\n        marginLight: theme.spacing(5),\n\n\n    },\n\n}));\n\nconst toolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingRight: theme.spacing(1)\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n            },\n    spacer: {\n        flex: 1\n    },\n    actions: {\n        color: theme.palette.text.secondary,\n        display: \"flex\",\n        flexDirection: 'row'\n    },\n    title: {\n        flex: \"0 0 auto\"\n    }\n}));\n\n\nfunction TabletoolbarRel(props) {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selected, setSelected] = React.useState([])\n    const [search, setSearch] = React.useState(false)\n    const [val, setVal] = React.useState('')\n    const classes2 = toolbarStyles();\n    const classes = useStyles();\n    const [title, setTitle] = React.useState(props.title);\n    const isOpen = useSelector(state=>state.SlidePop.isOpen)\n    const dispatch = useDispatch();\n\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setVal(value)\n    }\n\n    const handleClose1 = () => {\n        setAnchorEl(null);\n        // setOpen(true)\n    };\n\n    const {children, value, index, ...other} = props;\n\n    const [open, setOpen] = React.useState(false);\n    const [del, setDel] = React.useState(false);\n\n\n    useEffect(() => {\n        if (del) {\n            props.delete(selected);\n            setSelected([])\n            // props.onRefreshChange();\n            setDel(false);\n            setVal('')\n            setSearch(false)\n\n        }\n    }, [del, search, props])\n    // }, [del, search])\n\n    const handleDelete = () => {\n        setDel(true)\n\n    }\n    const handleClickOpen = () => {\n        setAnchorEl(null);\n        setOpen(true);\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        // dispatch(revRe(true))\n        // dispatch(getGraphs([], []))\n        dispatch(revAd(true))\n    };\n\n    const handleRefresh = () => {\n        dispatch(revRe(true))\n    }\n    const handleSelected = (id) => {\n        setSelected(id)\n    }\n    const handleSearch = (e) => {\n        search ? setSearch(false) : setSearch(true)\n        setVal('')\n    }\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar className={classNames(classes2.root, {[classes2.highlight]:selected.length > 0})}>\n                    <div className={classes2.title}>\n                        {selected.length > 0 ? (\n                            <Typography color=\"inherit\" variant=\"h6\">\n                                {selected.length} selected\n                            </Typography>\n                        ) : (\n                            search ? (\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        <Input\n                                            onChange={handleInputChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            ) : (\n                                <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n                                    {/*{props.title}*/}\n                                    {title}\n                                </Typography>\n                            )\n                        )}\n                    </div>\n\n                    <div className={classes2.spacer}/>\n                    <div className={classes2.actions}>\n                        {selected.length > 0 ? (\n                            <Button onClick={handleDelete}>\n                                <DeleteIcon></DeleteIcon>\n                            </Button>\n                        ) : (\n                            search ? (\n                                <Button onClick={handleSearch}>\n                                    <CloseIcon></CloseIcon>\n                                </Button>\n\n                            ) : (\n                                <div>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                                        <AddIcon>\n                                        </AddIcon>\n                                    </Button>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleRefresh}>\n                                        <RefreshIcon>\n                                        </RefreshIcon>\n                                    </Button>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={event => handleSearch(event)}>\n                                        <SearchIcon>\n                                        </SearchIcon>\n                                    </Button>\n\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose1}\n                                    >\n                                        <MenuItem onClick={handleClickOpen}>{props.title} 추가</MenuItem>\n                                        <MenuItem onClick={handleClickOpen}>{props.title} 불러오기</MenuItem>\n                                    </Menu>\n\n                                    <ReleasePopup\n                                        title=\"Relation 추가\"\n                                        openPopup={open}\n                                        setOpenPopup={setOpen}\n                                    >\n                                        {\n                                            React.cloneElement(children,{\n                                                onclose:handleClose,\n                                                add:props.adde,\n                                                // ref:props.refresh\n                                            })\n                                        }\n                                    </ReleasePopup>\n                                </div>\n\n                            )\n                        )}\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n            {/*<span key={[del, val]}>*/}\n            <BasicTableR\n                // clickedName={props.handleSlide}\n                // clickedName={props.clickedData}\n                // data={props.data}\n                handleData={props.handleData}\n                handleCell={props.handleCell}\n                selectedUp = {handleSelected}\n                delete={del}\n                val = {val}\n            />\n            {/*</span>*/}\n        </div>\n    );\n}\n\nexport default React.memo(TabletoolbarRel)","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Provider.js",["569","570","571","572","573","574","575","576","577","578","579","580"],"import axios from 'axios';\nimport {\n    getAllR,\n    getGraphs,\n    getLinks,\n    getTmp,\n    getVens,\n    getAllH,\n    selectHead,\n    revRe,\n    saveVersion,\n    getAllHL, getAllHN\n} from \"./Redux/actions\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst BASE_URL = 'http://10.250.238.177:8096/api/v1'\n\nfunction getAllRedux(type) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.177:8096/api/v1/' + type + '/selectall')\n            .then(response => {\n                switch (type) {\n                    case \"normalizerule\":\n                        return dispatch(getAllR(response.data.map(\n                            ({vendors, ...other}) => {\n                                return {vendors: vendors.join(',').toString(), ...other}\n                            }\n                        )))\n                    default:\n                        return dispatch(getAllR(response.data))\n                }\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nfunction getNormalizeRuleFilter(obj) {\n    return async (dispatch) => {\n        await axios\n            .post('http://10.250.238.177:8096/api/v1/normalizerule/selectAllFilters', obj)\n            .then(response => {\n                console.log(response.data)\n                return dispatch(getAllR(response.data.slice().map(\n                    ({vendors, ...other}) => {\n                        return {vendors: vendors.join(',').toString(), ...other}\n                    }\n                )))\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nfunction getNormalizeRule(offset, limit) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.177:8096/api/v1/normalizerule/selectall?offset=' + offset + '&limit=' + limit)\n            .then(response => {\n                console.log(response.data)\n                return dispatch(getAllR(response.data.slice().map(\n                    ({vendors, ...other}) => {\n                        return {vendors: vendors.join(',').toString(), ...other}\n                    }\n                )))\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nasync function getRowCounts(type) {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/' + type + '/getrowcount')\n        .then((res) => res.data)\n}\n\nasync function getFiltersCounts(type, obj) {\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/' + type + '/getFiltersCount', obj)\n        .then((res) => res.data)\n}\n\n\n//for history\nfunction getAll(type) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.177:8096/api/v1/' + type + '/selectall')\n            .then(response => {\n\n                switch (type) {\n                    case \"history\":\n                        return response.data.length && dispatch(getAllH(response.data))\n                    case \"history/livedetectrule\":\n                        return response.data.length && dispatch(getAllHL(response.data))\n                    case \"history/normalizerule\":\n                        return response.data.length && dispatch(getAllHN(response.data))\n                    default:\n                        return\n                }\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\n\nasync function deActiveHead() {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/header/deActive')\n        .catch(error => {\n            throw(error);\n        })\n}\n\nasync function insertHead(ob) {\n\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/header/insert', ob)\n}\n\nasync function activeHead(version) {\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/header/active', version)\n}\n\n// function insertHead (ob) {\n//     return async (dispatch) => {\n//         await axios\n//             .post('http://10.250.238.177:8096/api/v1/header/insert', ob)\n//             .then(response => {\n//                 dispatch(getHead)\n//             })\n//     }\n// }\nfunction getHeadVer(version) {\n    console.log(version)\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.177:8096/api/v1/header/selectHeaderVersion?ver=' + version)\n            .then(response => {\n                console.log(response.data.ver); //안가네\n                const res = response.data.header.map((it) =>\n                    Object.assign({}, {Header: it, accessor: it})\n                );\n                dispatch(selectHead(res));\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\n//live 되어있는 헤드 가져오기\nasync function getHead() {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/header/selectheader')\n        .then(response => {\n            const res = response.data.header.map((it) =>\n                Object.assign({}, {Header: it, accessor: it})\n            )\n            // dispatch(saveVersion(response.data.ver)) //버전 세팅\n            // dispatch(selectHead(res))\n            console.log(response.data.ver)\n            return response.data.ver\n        })\n        .catch(error => {\n            throw(error);\n        })\n\n}\n\nasync function getLiveRulesFilter(obj) {\n        return await axios\n            .post('http://10.250.238.177:8096/api/v1/rules/selectAllFilters', obj)\n            .then(response => {\n                const res = response.data.map(({conditions, ...other}) => {\n                    const tp = {};\n                    conditions.forEach(\n                        ({field, value}) => {\n                            tp[field] = value\n                        }\n                    )\n                    return Object.assign({}, other, tp)\n                })\n                return res\n            })\n            .catch(error => {\n                throw(error);\n            })\n}\n\n//conditional field 땜에 떨어져있음.\nasync function getLiveRules(offset, limit) {\n\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/rules/selectall?offset=' + offset + '&limit=' + limit)\n        .then(response => {\n            const res = response.data.map(({conditions, ...other}) => {\n                const tp = {};\n                conditions.forEach(\n                    ({field, value}) => {\n                        tp[field] = value\n                    }\n                )\n                return Object.assign({}, other, tp)\n            })\n            return res\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\nasync function upsertAndHistory(release, rules){\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/rules/upsertAndHistory2?released?' + release, rules)\n        .catch((error)=>{\n            console.error(error)\n        })\n}\nasync function restore(rules, release){\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/rules/restore?released='+ release , rules)\n        .catch((error)=>{\n            console.error(error)\n        })\n}\nasync function updateRelease(){\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/history/livedetectrule/updateRelease')\n        .catch((error)=>{\n            console.error(error)\n        })\n}\n\nasync function getReleaseForm(type) {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/' + 'releaseForm' + '/select?type=' + type)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function signalZk(signals) {\n    console.log(signals)\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/' + 'field' + '/signal', signals)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function parse(parseStr) {\n    console.log({parseStr})\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/normalizerule/parse', {parseStr})\n        .then(response => {\n            console.log(response)\n            return JSON.parse(decodeURIComponent(response.data.replace(/\\+/g, \"%20\")))\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n\n}\n\nasync function releaseZk(options) {\n    console.log(options)\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/' + 'field' + '/zookeeper', options)\n        .then(response => {\n            console.log(response.data)\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\n\nfunction getNodes() { //select all => table 조회 용\n    return async (dispatch) => {\n        await axios.all([\n            axios.get(\"http://10.250.238.177:8096/api/v1/node/selectall\"),\n            axios.get(\"http://10.250.238.177:8096/api/v1/link/selectall\")\n        ])\n            .then(axios.spread(function (node, link) {\n                const m = {}\n                node.data.forEach((i) => {\n                    m[i.id] = i.name\n                })\n                console.log(link.data)\n                dispatch(getLinks(\n                    link.data.map((i) => ({idx: i.id, ...i}))\n                ))\n            }))\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n}\n\nfunction getAds(nodeId) { // select 인접 노드\n    return async (dispatch) => {\n        await axios.get(\"http://10.250.238.177:8096/api/v1/node/selectadjacent/\" + nodeId)\n            .then(response => {\n                dispatch(getGraphs(\n                    response.data.nodes,\n                    response.data.links\n                ))\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n\n    }\n}\n\nasync function getAds2(nodeId) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/node/selectadjacent/\" + nodeId)\n        .then(response => {\n            return response.data\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getRow(type, id) {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/' + type + '/select?id=' + id)\n        .then(response => {\n            console.log([...response.data].shift())\n            return [...response.data].shift();\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nfunction getTemp(type) {\n    return (dispatch) => {\n        axios\n            .get('http://10.250.238.177:8096/api/v1/template/selectbytype?node=' + type)\n            .then(response => {\n                dispatch(getTmp(response.data))\n            })\n            .catch(error => {\n                throw(error);\n            })\n\n    }\n}\n\nasync function getTypes(type) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/template/entitytypes?node=\" + type)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getVendors(enType) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/template/vendors?entity=\" + enType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getModels(enType, venType) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/template/models?entity=\" + enType + \"&vendor=\" + venType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\n// 추가 가능한 entity list 조회\nasync function getEna(enType) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/asset/selectbyquery?entityType=\" + enType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getEnd(enType, venType, moType) {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/device/selectbyquery?entityType=\" + enType + \"&vendor=\" + venType + \"&model=\" + moType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insertLink(ob) {\n\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/link/insert', ob)\n        .then(response => {\n            console.log(response)\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n\n}\n\nasync function insertLiveDetect(ob, version) {\n    const con = []\n    const res = (({id, active, ruleType, keyField, confirms, ver, ...other}) => {\n        Object.keys(other)\n            .filter(it => other[it] !== \"\")\n            .forEach(it => {\n                con.push({field: it, value: other[it]})\n            })\n        return ({active, ruleType, keyField, confirms, ver: version})\n    })(ob)\n    res['conditions'] = con\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/rules/insert', res)\n        .then(() => console.log(\"hi\"))\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insert(type, ob) {\n    // const sob = (({id, createdAt, updatedAt, ... other}) => other)(ob)\n    const sob = (({id, updatedAt, ...other}) => other)(ob) //여기서 id를 빼는데.\n    // console.log(typeof sob.value)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/' + type + '/insert', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n\n};\n\n\nasync function insertNormal(ob) {\n    // ob[\"rules\"] = []\n    const sob = (({vendors, ...other}) => {\n        return Object.assign({}, {vendors: vendors.split(',')}, other) //TODO::restore 할때 vendor 콤마가 사라짐\n    })(ob)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/normalizerule/upsertall', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insertNormalTotal(ob) {\n    const sob = (({vendors, ...other}) => {\n        return Object.assign({}, {vendors: vendors.split(',')}, other)\n    })(ob)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/normalizerule/upsert', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function setHistory() {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/normalizerule/selectall/tohistory\")\n        .then((response) => console.log(response.data))\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getNextVal() {\n    return await axios\n        .get(\"http://10.250.238.177:8096/api/v1/normalizerule/nextid\")\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function update(type, ob) {\n    console.log(ob)\n    const sob = (({createdAt, updatedAt, ...other}) => other)(ob)\n\n    return await axios\n        .post('http://10.250.238.177:8096/api/v1/' + type + '/update', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function del(type, ids) {\n    console.log(ids)\n    return await axios\n        .delete('http://10.250.238.177:8096/api/v1/' + type + '/delete', {\n            headers: {'Content-Type': 'application/json'},\n            data: ids\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function delNormal(type, id) {\n    return await axios\n        .delete('http://10.250.238.177:8096/api/v1/' + type + '/delete', {\n            headers: {'Content-Type': 'application/json'},\n            data: id\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function delAll(type) {\n    return await axios\n        .get('http://10.250.238.177:8096/api/v1/' + type + '/deleteAll')\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nexport const apiProvider = {\n    insert,\n    update,\n    del,\n    delNormal,\n    delAll,\n    getAllRedux,\n    getNormalizeRule,\n    getNormalizeRuleFilter,\n    getHead,\n    getReleaseForm,\n    releaseZk,\n    parse,\n    signalZk,\n    getAll,\n    getRow,\n    getTemp,\n    getTypes,\n    getVendors,\n    getModels,\n    getNodes,\n    getEna,\n    getEnd,\n    getNextVal,\n    setHistory,\n    insertLink,\n    getAds,\n    getAds2,\n    getLiveRules,\n    getLiveRulesFilter,\n    insertLiveDetect,\n    restore,\n    updateRelease,\n    insertNormal,\n    insertNormalTotal,\n    insertHead,\n    activeHead,\n    getHeadVer,\n    getRowCounts,\n    getFiltersCounts,\n    deActiveHead,\n    upsertAndHistory\n\n};","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetSlide.js",["581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606"],"import React, {Component, useState, useRef, useEffect} from \"react\";\nimport { render } from \"react-dom\";\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\n// import SimpleTabs from \"../components/tab\";\n// import Swiper core and required modules\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n// import TabletoolbarTmp from \"../../components/tmpmine\";\nimport AssetAddForm from \"./AssetAddForm\";\nimport {ToggleButton} from \"@material-ui/lab\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditIcon from '@material-ui/icons/Edit';\nimport axios from \"axios\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revRe, revOp, clearClicked} from \"../../services/Redux/actions\";\nimport GraphD from \"../../components/graph\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\nimport RelForm from \"./RelForm\";\nimport DetailRel from \"../Relation/DetailRel\";\nimport GridTable from \"../../components/table/gridTable\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography component={'span'}>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    overlay: {\n        top: '70px',\n        // display: \"flex\"\n    },\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    }\n}));\n\nfunction SlideTmp(props) {\n\n    const [value, setValue] = React.useState(0);\n    const [edit, setEdit] = React.useState(false);\n    const handleChangeTabs = (event, newValue) => {\n        setValue(newValue);\n    };\n    // const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n        setEdit(false);\n        setValue(0);\n        dispatch(revOp(false))\n        dispatch(revRe(true))\n        dispatch(clearClicked(''))\n\n        // props.onChangeClose();\n    }\n    const classes = useStyles();\n\n    const handleUpdate = (data) => {\n        apiProvider.update(\"asset\", data).then(()=>{dispatch(revRe(true))})\n    }\n    const handleData = () => {\n        dispatch(apiProvider.getAllRedux(\"asset\"))\n    }\n\n    //TODO:: add, delete, provider 만들고 refresh action 취하기 + deviceSlide에도 수정내용 추가해야함.\n\n    return (\n\n\n            <div className=\"component component-list\">\n\n                    <SlidingPane\n                        className=\"slide-pane__content\"\n                        overlayClassName=\"some-custom-overlay-class\"\n                        // isOpen= {props.ispaneopen}\n                        isOpen = {isOpen}\n                        title= {\"Asset\"}\n                        onRequestClose= {handleChange}\n                    >\n                        <div className=\"component component-list\">\n                        </div>\n                    </SlidingPane>\n                {/*<div className={classes.root}>*/}\n                {/*    <AppBar position=\"static\">*/}\n                {/*        <Tabs value={value} onChange={handleChangeTabs} aria-label=\"simple tabs example\">*/}\n                {/*            {props.tablist.map((item, index)=>(*/}\n                {/*                <Tab label={item} {...a11yProps(index)} key={index} />*/}\n                {/*            ))}*/}\n                {/*        </Tabs>*/}\n                {/*    </AppBar>*/}\n                {/*    <ToggleButton*/}\n                {/*        value=\"check\"*/}\n                {/*        selected={edit}*/}\n                {/*        onChange={() => {*/}\n                {/*            setEdit(!edit);*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <EditIcon />*/}\n                {/*    </ToggleButton>*/}\n\n                {/*    <TabPanel value={value} index={0}>*/}\n                {/*        <AssetAddForm editable={edit} handleUpdate={handleUpdate}></AssetAddForm>*/}\n                {/*    </TabPanel>*/}\n                {/*    <TabPanel value={value} index={1}>*/}\n                {/*        <DetailRel></DetailRel>*/}\n                {/*    </TabPanel>*/}\n                {/*</div>*/}\n            </div>\n\n    );\n\n}\n\nexport default React.memo(SlideTmp)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableH.js",["607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622"],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646"],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SavePopup.js",["647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop, openSavePop, openSelectConFieldPop,\n    openSelectKeyFieldPop,\n    openSelectPop, saveVersion\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {Field, change} from \"redux-form\";\nimport Table from \"react-table\";\n\nimport \"../table/style.scss\"\n\nexport default function SavePopup(props) {\n\n    const [version, setVersion] = React.useState(\"\")\n    const dispatch = useDispatch();\n\n    const onClose = () => {\n        dispatch(openSavePop(false))\n    }\n    const handleSave = () => {\n        //version 저장\n        dispatch(saveVersion(version)) //여기서 save 하기 전에 version을 dispatch 해버려서 그랫음.\n        dispatch(openSavePop(false))\n    }\n\n    return (\n\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{ width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    Save\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label> Fields Version Set </label>\n                        <input\n                            onChange = { (event) => setVersion(event.target.value)}\n                        >\n                        </input>\n                    </div>\n                </div>\n                <hr />\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={()=>handleSave()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n\n    )\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectFieldPopup.js",["663","664","665","666","667","668","669","670"],"import React, {useEffect} from 'react'\n// import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\nimport { convertHex2Str } from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addedField, currType, hisFlag, openPop, openSelectPop} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\n// const useStyles = makeStyles(theme => ({\n//     dialogWrapper: {\n//         padding: theme.spacing(2),\n//         position: 'absolute',\n//         top: theme.spacing(5),\n//         maxWidth: 450\n//     },\n//     dialogTitle: {\n//         paddingRight: '0px'\n//     }\n// }))\n\nexport default function SelectFieldPopup(props) {\n\n\n    const colList = [\"test1\", \"test2\", \"test3\", \"test4\"]; //field list api\n    const [addField, setAddField] = React.useState();\n\n    const dispatch = useDispatch();\n\n    //TODO::list는 kfob에서 가져오고, save하면 어캐 저장하지\n\n    const handleSelect = () => {\n        dispatch(addedField(addField))\n        dispatch(openSelectPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{ width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <select\n                            onChange = { (event) => setAddField(event.target.value)}\n                        >\n                            <option></option>\n                            {colList.map(item=>(\n                                <option value={item}> {item} </option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <hr />\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={()=>handleSelect()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectKeyFieldPopup.js",["671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {connect, useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {change, Field, getFormValues, FormName} from \"redux-form\";\nimport formValueSelector from \"redux-form/lib/formValueSelector\";\n\nfunction SelectKeyFieldPopup({values}) {\n\n\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    console.log(kfOb)\n    const data = useSelector(state => state.fetchAPI.data)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const dispatch = useDispatch();\n\n    //이거랑 ldr history table 복원할때 없어도 되는 필드가 안줄어들었던 것 같은데 확인해봐.\n    //지금 헤더 세팅되는거랑 테이블 저장되는거랑 달라서 그럼. <- 동기 맞출 것.\n    //TODO:: 전체가 없는 경우 new add 하는 경우 추가해야함 맞네  + 헤더가 값이 있는게 아무것도 없으면 알아서 없애야하나? + 값이 없던/아예 없던 새 필드에 값을 넣고 동시에 keyField 를 추가하려고 하면? 어떻게 되어야하지?\n    //멀 어캐 내 실제 condition field랑 new added field 합쳐서 keyfield select으로 줘야지 + version 빼고\n    //values 가져와서 쓰는것도 괜찮은 방법일듯. inline form 가져와서 밸류값 있으면 집어넣는거지. //-> redux form api\n    //TODO:: add 용, edit 용 따로 헤애힐 갓 같지? -> 나중에는 keyfield 에 있는 값 field 의 value 를 대상으로 validation 해야할 add 할 때는 그냥 값 먼저 넣으라고 해야지..\n    const condList = ({id, active, ruletype, keyfield, confirms, ...other}) => {\n\n        console.log(values) //여기서 값 있는거 하면 되겠다.\n\n        const li = Object.keys(other).filter(it => other[it] !== \"\") //이거 원본배열 바뀐다아\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruletype\", \"keyfield\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    //for confirms_popup\n    const handleSelect = () => {\n        // kfOb.keyField=selectKey //keyField 가 셀렉되면,,\n        // dispatch(keyFieldSelect(kfOb)) //이럴 필요가 있나? 응 이썽\n        //\n        // console.log(kfOb)\n        // const nVal = data.slice().filter( ({id}) => id !== kfOb.id)\n        // dispatch(addTmp([kfOb, ...nVal]))\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <Field name=\"keyfield\" component=\"select\">\n                            <option/>\n                            {/*<option>{kfOb.keyField}</option>*/}\n                            {condList(kfOb).map(\n                                (item, index) => (\n                                    <option key={index} value={item}>{item}</option>\n                                )\n                            )}\n                        </Field>\n                    </div>\n                </div>\n                <hr/>\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                    select\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    values: getFormValues(\"inline\")(state)\n}))(SelectKeyFieldPopup);","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTable.js",["687","688","689","690","691","692","693","694","695","696"],"import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport {Field} from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport {avatarColumnProps} from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport 'react-table/react-table.css';\nimport {\n    addedField,\n    currEd,\n    deleteTmp,\n    getAllR,\n    hisFlag,\n    keyFieldSelect,\n    openSelectKeyFieldPop\n} from \"../../services/Redux/actions\";\nimport {bindActionCreators} from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\n\n\n//TODO:: Add했다가 캔슬하면 없어지게해야함.\n\nclass GridTable extends React.Component {\n    state = {editing: null, selected: {}, selectAll: 0, adding: false, columns: [], selectEdit: false};\n\n    selectList = {\n        typeList: [\"String\", \"Numeric\", \"IP\"],\n        groupList: [\"Required\", \"Additional\"]\n    }\n\n    getSelect = (type, curr) => {\n        const v = this.selectList[type].filter(i => i !== curr)\n        return v\n    }\n\n    resetColumn = () => {\n        this.setState((state) => {\n            return {\n                ...state, columns:\n                    [{\n                        columns: [\n                            {\n                                id: \"checkbox\",\n                                accessor: \"\",\n                                Cell: ({original}) => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selected[original.id] === true}\n                                            onChange={() => this.toggleRow(original.id)}\n                                        />\n                                    );\n                                },\n                                Header: x => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selectAll === 1}\n                                            ref={input => {\n                                                if (input) {\n                                                    input.indeterminate = this.state.selectAll === 2;\n                                                }\n                                            }}\n                                            onChange={() => this.toggleSelectAll()}\n                                        />\n                                    );\n                                },\n                                sortable: false,\n                                width: 45\n                            },\n                        ]\n                    }].concat(\n                        this.props.columns.slice().map((item) => {\n                            return {...item, ...this.editableColumnProps}\n                        })\n                    )\n                        .concat(\n                            {\n                                Header: \"\",\n                                maxWidth: 90,\n                                filterable: false,\n                                getProps: this.getActionProps,\n                                Cell: ActionsCell\n                            }\n                        )\n            }\n        })\n    }\n\n    componentDidMount() {\n\n        this.resetColumn()\n        this.props.handleData()\n    }\n\n    componentDidUpdate = (prevProps) => {\n        // const select = (prevProps.data!== this.props.data)\n        const cond = (prevProps.refre !== this.props.refre)\n        if (cond) {\n            // this.props.currEd(\"0\")\n            this.resetColumn()\n            this.props.handleData()\n        }\n    }\n\n\n\n    selectableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'select' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || <React.Fragment>\n                <option>{value}</option>\n                {this.getSelect(\"typeList\", value).map(\n                    (item, index) => (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                )}\n            </React.Fragment>;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n\n    editableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    isSelectField = (col) => [\"type\", \"group\"].indexOf(col) !== -1\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n    handleCellClick = (data) => {\n        // this.props.handleRow(data)\n    }\n\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(this.props.data.length)\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) { //redux로 옮겨야함.\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n        console.log(this.state.selected) //왜 바로 안나오지\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        console.log(this.state.selected)\n        if (this.state.selectAll === 0) {\n            this.props.data.forEach(x => {\n                newSelected[x.id] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    handleSubmit = (values) => {\n        console.log(values)\n        this.setState((state) => {\n            this.props.addTmp(this.props.data.map((item) => {\n                return item.id === values.id ? values : item\n            }))\n\n            return state.adding ? {...state, adding: false} : {...state}\n\n        });\n    };\n\n    handleSave = () => {\n        apiProvider.delAll('field').then(\n            this.props.data.forEach((item) => {\n                this.props.addf(item)\n            })\n        )\n\n        const history = {\n            id: \"1\",\n            desc: \"temp\",\n            user: \"admin\",\n            released: \"false\",\n            value: {field: this.props.data}\n        }\n        console.log(this.props.data)\n        apiProvider.insert('history', history).then(() => {\n            this.props.hisFlag(true)\n        })\n    }\n\n    handleDelete = () => {\n        console.log(Object.keys(this.state.selected))\n        Object.keys(this.state.selected).forEach((i) =>\n                this.props.delTmp(i)\n        )\n        this.setState((state) => {\n            return {...state, selected: {}}\n        })\n\n    }\n\n    //TODO::add 여러번 하게하면 안됨. + 자동으로 index 생성되게 해야되는데 + livedetectrule add row가 이상한곳에 생김.\n    handleAdd = () => {\n        const addTemp = this.state.columns.slice()\n        addTemp.splice(-1, 1)\n        addTemp.splice(0, 1)\n        const tp = {};\n        addTemp.forEach(({accessor}) => {\n            tp[accessor] = \"\"\n        })\n        tp.fieldId = this.props.data.length + 1 //식별용으로 필요함\n        this.setState((state) => {\n            return {...state, editing: tp, adding: true}\n        })\n        console.log(tp)\n        this.props.addTmp([tp, ...this.props.data])\n    }\n\n    onRowClick = (state, rowInfo, column, instance) => {\n        return {\n            onClick: e => {\n                this.props.handleRow(rowInfo.original)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                    <button className=\"btn\" onClick={this.handleAdd}>\n                        Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleDelete}>\n                        Delete\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.revRe(true)}>\n                        Refresh\n                    </button>\n\n                    <div className=\"seperate-bar-100\"/>\n\n                    <button className=\"btn\" onClick={this.handleSave}>\n                        Save\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.openPop(true)}>\n                        배포\n                    </button>\n                </div>\n                <div className=\"table-wrapper\">\n                    {/*<div className=\"table-total-count\" style={{ fontSize: '12px' }}>*/}\n                    {/*  Total:*/}\n                    {/*</div>*/}\n                    <div className=\"Fixed\">\n\n                        <FormProvider\n                            form=\"inline\"\n                            onSubmit={this.handleSubmit}\n                            onSubmitSuccess={() => this.setState({editing: null})}\n                            initialValues={this.state.editing}\n                            enableReinitialize\n                        >\n                            {(formProps) => {\n                                return (\n                                    <form onSubmit={formProps.handleSubmit}>\n                                        <Table\n                                            // getTdProps={(state, rowInfo, column) => ({\n                                            //     onClick: () => {\n                                            //       (column.id ==\"keyField\" && this.state.editing) && this.handleKeyFieldSelect(rowInfo.original)\n                                            //     }\n                                            // })}\n                                            columns={\n                                                this.state.columns\n                                            }\n                                            data={this.props.data}\n                                            // manual\n                                            // PaginationComponent={Pagination}\n                                            pageSizeOptions={[2, 10, 500, 1000]}\n                                            defaultPageSize={2}\n                                            sorted={[{id: 'id'}]} //fieldID로 바꾸고\n\n                                            // defaultPageSize={10}\n                                        />\n                                    </form>\n                                );\n                            }}\n                        </FormProvider>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        selectKPop: state.fetchAPI.openKeyField,\n        kfOb: state.fetchAPI.keyField,\n        data: state.fetchAPI.data,\n        refre: state.fetchAPI.refre,\n        add: state.fetchAPI.ad,\n        hflag: state.fetchAPI.hflag,\n        newField: state.fetchAPI.addedField\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                setKfOb: keyFieldSelect,\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                addedField: addedField\n            },\n            dispatch\n        )\n    }\n)(GridTable)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/ReleasePopup.js",["697","698","699","700"],"import React from 'react'\n// import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editZero, hisFlag, openPop, revRe} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\n\nexport default function ReleasePopup(props) {\n\n    const dispatch = useDispatch();\n\n    const data = useSelector(state => state.fetchAPI.data)\n    const currData = useSelector(state => state.fetchAPI.editedOrigin)\n    const savedData = useSelector(state=>state.editOperator.savedData)\n\n    const [state, setState] = React.useState({\n        releasePath: \"\",\n        nodeSize: \"\",\n        makeSubNode: false,\n        separator: \"\",\n    })\n\n    const [signals, setSignals] = React.useState([]);\n    const [sigDef, setSigDef] = React.useState([]);\n\n    React.useEffect(() => {\n        apiProvider.getReleaseForm(\"Field\").then((res) => {\n                setState(res.data.value);\n                setSigDef(res.data.signal);\n            }\n            // console.log(res)\n        )\n    }, [])\n\n    const onChange = (key, value) => {\n        setState({\n            ...state,\n            [key]: value,\n        });\n    }\n    const onClose = () => {\n        dispatch(openPop(false))\n    }\n    const handleRelease = () => {\n        //field 테이블에 넣는 것.\n        // props.deleteAll()\n        // data.forEach((item) => {\n        //     props.addf(item)\n        // })\n        //TODO:: 이 전에 savedData 있으면 저장 하고 upsert 해놔야지. savedData 가 없다?(바뀐게 없다?) => updateRelease 해놔야함. saveData가 없다는건 history 0번이랑 같다는 얘기. <==무조건 성립해야함 -> 그럼 그냥 배포 유무만 update 하면 됨.\n        if(!savedData.length){\n            apiProvider.updateRelease().then(()=>{dispatch(revRe(true)); dispatch(editZero())}) //사실 마지막 dispatch는 없어도 됨.\n        }\n        else {\n\n            this.state.willRemoved.length && this.state.willRemoved.forEach((id) => {\n                apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({willRemoved: []}))\n            })\n            apiProvider.upsertAndHistory(\"true\", savedData.map((item)=>{\n                const con = []\n                const res = (({id, active, ruletype, keyfield, confirms, ver, updatedat, ...other})=>{\n                    Object.keys(other)\n                        .filter(it=>other[it] !== \"\")\n                        .forEach(it=>{\n                            con.push({field:it, valule:other[it]})\n                        })\n                    return ({id, active, ruletype, keyfield, confirms, ver:ver})\n                })(item)\n                res['conditions']=con\n                return res\n            })).then(() => {this.props.dataSave([]); this.props.revRe(true)})\n        }\n        //TODO:: 비동기처리 할 것.\n        apiProvider.releaseZk(state).then(apiProvider.signalZk(signals))\n        // const history = {\n        //     id: \"1\",\n        //     desc: \"temp\",\n        //     user: \"admin\",\n        //     released: \"true\",\n        //     value: {field: data}\n        // }\n\n        // //hitory 테이블에 넣는것.\n        // isEqual(data, currData.value.field)\n        //     ? apiProvider.update(props.name, currData).then(() => {\n        //         dispatch(hisFlag(true));\n        //         dispatch(openPop(false))\n        //     })\n        //     : apiProvider.insert(props.name, history).then(() => {\n        //         dispatch(hisFlag(true));\n        //         dispatch(openPop(false))\n        //     })\n\n    }\n    return (\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    {/*<IntlMessages id=\"field.release.option\" />*/}\n                    release option\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Release Path : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            // defaultValue={\"default\"}\n                            value={state.releasePath}\n                            className=\"form-control\"\n                            style={{width: \"455px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"releasePath\", value);\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label>Node Size : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            value={state.nodeSize}\n                            className=\"form-control\"\n                            style={{width: \"155px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"nodeSize\", value);\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label>Make Sub Node : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            value={state.makeSubNode}\n                            className=\"form-control\"\n                            style={{width: \"155px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"makeSubNode\", value);\n                            }}\n                        />\n                    </div>\n\n                    <div>\n                        <label>Separator : </label>\n                        <input\n                            type=\"text\"\n                            value={state.separator}\n                            className=\"form-control\"\n                            style={{width: \"140px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"separator\", value);\n                            }}\n                        />\n                        <label style={{marginLeft: \"15px\"}}>Convert : </label>\n                        <strong>{\"\\\"\" + convertHex2Str(state.separator) + \"\\\"\"}</strong>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"signal-option-wrapper\">\n                    <strong>Signal Option</strong>\n                    <button\n                        className=\"btn btn--blue\"\n                        style={{marginLeft: \"430px\"}}\n                        onClick={() => {\n                            if (signals.length > 0 && (!signals.slice(-1)[0].signal && !signals.slice(-1)[0].path)) {\n                                return;\n                            }\n                            // setSignals([...signals, {signal: '', path: ''}]);\n                            setSignals([...signals, sigDef]);\n                        }}\n                    >ADD\n                    </button>\n                    <div\n                        className=\"table-wrapper\"\n                    >\n                        <table className=\"signal-option-table\">\n                            <colgroup>\n                                <col style={{width: \"240px\"}}/>\n                                <col/>\n                                <col style={{width: \"30px\"}}/>\n                            </colgroup>\n                            <thead>\n                            <tr>\n                                <th>Signal</th>\n                                <th>Path</th>\n                                <th></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {signals &&\n                            signals.map((item, idx) => (\n                                <tr key={\"signal-option-popup-\" + idx}>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            value={item.signal}\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                const {value} = e.target;\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    {\n                                                        ...item,\n                                                        signal: value,\n                                                    },\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        />\n                                    </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            value={item.path}\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                const {value} = e.target;\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    {\n                                                        ...item,\n                                                        path: value,\n                                                    },\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        />\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn\"\n                                            onClick={() => {\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        >X\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    {/*<IntlMessages id=\"cancel\" />*/}\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={() => handleRelease()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/NodeSelect.js",["701","702","703","704","705","706","707","708"],"import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"./useForm\";\nimport Input from \"./controls/Input\";\nimport Select from \"./controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {apiProvider} from \"../services/Provider\";\nimport MultiSelect from \"./controls/MultiSelect\";\nimport {getEntityFrom, revRe, selectedOp, selectedOpFrom} from \"../services/Redux/actions\";\nimport {getEntities} from \"../services/Redux/actions\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n//clicked data 있으면 from node 설정 안하게 만들어놔야함.\nfunction NodeSelect(props) {\n    // const data = useSelector(state => state.SlidePop.clickedData)\n    // const classes = useStyles();\n    // const mounted = React.useRef(false);\n    // // const [cat, setCat] = React.useState('');\n    const [entityTypes, setEntityTypes] = React.useState([]);\n    const [vendors, setVendors] = React.useState([]);\n    const [models, setModels] = React.useState([]);\n\n    // const [entities, setEntities] = React.useState(\"\");\n    const entities = useSelector(state=>state.SlidePop.entities)\n    const entityFrom = useSelector(state=>state.SlidePop.entityFrom)\n    // const selected = useSelector(state=>state.SlidePop.selectedData)\n    const selectedFrom = useSelector(state=>state.SlidePop.selectedDataF)\n\n    const [state, setState] = useState([{\n        relation:'',\n        fromNodeID:'',\n        toNodeID:''\n    }])\n    const dispatch = useDispatch();\n\n    const validate = {} //todo::validation만들기\n    const initialFValues = {\n        cat:'',\n        model: '',\n        vendor: '',\n        entityType: '',\n        relation: 'contain',\n        // from_node_id: data.id,\n        // to_node_id: '',\n        createdAt: '1',\n        updatedAt: '1'\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, false, validate, )\n\n    const handleInputChange2 = (event) => {\n        const value = event.target.value;\n        // dispatch(selectedOp(value))\n        dispatch(selectedOpFrom(value)) //그냥 문자열로 들어갈거같은뎅\n\n    }\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffectSkipFirst(()=>{\n        apiProvider.getTypes(values.cat).then((res) =>\n            setEntityTypes(res.data))\n            console.log(\"hi\")\n    }, [values.cat])\n\n    useEffectSkipFirst(()=>{\n        if(values.cat === \"asset\"){\n            //entity list call api (asset\n            //setEntities -> multi select\n            apiProvider.getEna(values.entityType).then((res)=>\n            {\n                // setEntities(res.data)\n                props.type===\"Multi\" ? dispatch(getEntities(res.data)) : dispatch(getEntityFrom(res.data))\n            })\n        }\n        else {\n            apiProvider.getVendors(values.entityType).then((res) =>\n            {\n                setVendors(res.data);\n                setModels([]);\n            })\n        }\n    }, [values.entityType])\n\n    useEffectSkipFirst(()=>{\n        console.log(entities)\n    }, [entities])\n\n    useEffectSkipFirst(()=>{\n        apiProvider.getModels(values.entityType, values.vendor).then((res)=>\n        {\n            setModels(res.data.map((item)=> item.model))\n        })\n    }, [values.vendor])\n\n    useEffectSkipFirst(()=>{\n        if(values.cat === \"device\"){\n            //entity list call api (device)\n            apiProvider.getEnd(values.entityType, values.vendor, values.model).then((res)=>\n            {\n                // setEntities(res.data)\n                props.type===\"Multi\"? dispatch(getEntities(res.data)) : dispatch(getEntityFrom(res.data))\n            })\n        }\n\n    }, [values.model])\n\n    useEffectSkipFirst(()=>{\n        //DetailRel.js 에 add function 가져다써야함.\n        console.log(state)\n        apiProvider.insertLink(state).then(()=>{dispatch(revRe(true));dispatch(selectedOp([]))})\n    }, [state])\n\n    return(\n            <Grid container>\n                <Grid item xs={6}>\n\n                    <Input\n                        readonly={true}\n                        name=\"relation\"\n                        label=\"relation\"\n                        value={values.relation}\n                    />\n                    <Select\n                        name=\"cat\"\n                        label=\"Category\"\n                        value={values.cat}\n                        {...(props.editable || props.editable === undefined ? {onChange: handleInputChange} : {})}\n                        options={[\"asset\", \"device\"]}\n                        // error={errors.departmentId}\n                    />\n\n                    <Select\n                        name=\"entityType\"\n                        label=\"Entity Type\"\n                        value={values.entityType}\n                        {...(props.editable || props.editable === undefined ? {onChange: handleInputChange} : {})}\n                        options={entityTypes}\n                        // error={errors.departmentId}\n                    />\n\n                </Grid>\n                {values.cat === \"device\" && (\n                    <Grid item xs={6}>\n\n                        <Select\n                            name=\"vendor\"\n                            label=\"Vendor\"\n                            value={values.vendor || ''}\n                            {...(props.editable || props.editable === undefined ? {onChange: handleInputChange} : {})}\n                            options={vendors}\n                            error={errors.vendor}\n                        />\n                        <Select\n                            name=\"model\"\n                            label=\"Model\"\n                            value={values.model || ''}\n                            {...(props.editable || props.editable === undefined ? {onChange: handleInputChange} : {})}\n                            options={models}\n                            error={errors.model}\n                        />\n                    </Grid>)\n                }\n                {entities !== \"\" && (\n                    props.type===\"Multi\" ? (\n                        <MultiSelect\n                            options={\n                                entities.map((item)=>(\n                                    item.name\n                                ))\n                            }\n                        >\n                        </MultiSelect>\n                    ) : (\n                        <Select\n                            options={\n                                entityFrom.map((item)=>(\n                                    item.name\n                                ))\n                            }\n                            value={selectedFrom}\n                            onChange={handleInputChange2}\n                        >\n                        </Select>\n                    )\n                )}\n\n            </Grid>\n    )\n}\n\nexport default React.memo(NodeSelect)","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/actions/index.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Input.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/slideTable.js",["709","710","711","712","713","714","715","716","717","718","719","720","721"],"import React, {useEffect, useState} from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {Checkbox, TablePagination, Tooltip} from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllR, revRe} from \"../services/Redux/actions\";\nimport {apiProvider} from \"../services/Provider\";\nimport {revOp, clickedOp} from \"../services/Redux/actions\";\n\n\nconst useStyles2 = makeStyles({\n    table: {\n        minWidth: 650,\n        // display: \"flex\"\n    },\n    tableHead: {\n        display:\"flex\",\n        flexDirection:\"column\",\n    },\n    tableBody: {\n        display:\"flex\",\n\n    },\n    tableRow: {\n        display:\"flex\",\n        flexDirection:\"column\"\n    }\n\n});\n\nfunction BasicTableR(props) {\n    const classes = useStyles2();\n    const [selected, setSelected] = useState([])\n    const dispatch = useDispatch();\n\n    const results = useSelector(state => state.fetchAPI);\n    const [state, setState] = useState({\n        order: \"asc\",\n        orderBy: \"name\",\n        selected1:[],\n        page:0,\n        rowsPerPage:5\n    })\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffectSkipFirst ( ()=>{ //이거 SkipFirst 해도 되는지 다시 확인요망\n        // dispatch(apiProvider.getAllRedux(type))\n        // props.handleData()\n        apiProvider.getNodes()\n    }, [results.ad, results.refre, results.currType])\n\n    useEffectSkipFirst(()=>{\n        if(props.delete) setSelected([])\n    },[props.delete])\n\n    const handleRequestSort = (event, property) => {\n        const orderBy = property;\n\n        let order = \"desc\";\n        if( state.orderBy === property && state.order === \"desc\") {\n            order = \"asc\";\n        }\n\n        setState({...state, order:order, orderBy: orderBy})\n    };\n\n\n    const handleChangePage = (event, newpage) => {\n        setState({...state, page:newpage});\n\n    };\n    const handleChangeRowsPerPage = event => {\n        setState({...state, page:0, rowsPerPage:parseInt(event.target.value)})\n\n    }\n\n    const handleSelectAllClick = (event, checked) => {\n        if (checked) {\n            setSelected(results.linkData.map(n=>n.id));\n            props.selectedUp(results.linkData.map(n=>n.id));\n\n            return;\n        }\n        setSelected([]);\n        props.selectedUp([]);\n\n\n    };\n\n    const handleClick = (event, id) => {\n\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n\n        props.selectedUp(newSelected);\n\n    };\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const handleCellClick = (e, row) => {\n        // apiProvider.getRow(results.currType, row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n        props.handleCell && props.handleCell(e, row)\n\n    }\n    const createSortHandler = property => event => {\n        handleRequestSort(event, property)\n    }\n\n    function getSorting(order, orderBy) {\n        return order === \"desc\"\n            ? (a, b) => (b[orderBy] < a[orderBy] ? -1 : 1)\n            : (a, b) => (a[orderBy] < b[orderBy] ? -1 : 1);\n\n    }\n\n    const handleDetail = (event) => { //상세정보 누르면 popup 뜨게 해놓을까? node 상세정보는 봐야하니까. 뭔가 그래프가 주가 되게하고싶진 않은데\n\n    }\n\n    const {order, orderBy, selected1 ,rowsPerPage, page} = state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, results.linkData.length - page * rowsPerPage)\n    return (\n        results.linkData.length > 0 ?\n            <Paper>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n\n                            <TableRow>\n                                <TableCell>\n                                    <Checkbox\n                                        // defaultChecked\n                                        color=\"primary\"\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                        onChange={handleSelectAllClick}\n\n                                    />\n                                </TableCell>\n                                {Object.keys(results.linkData.find(Boolean)).filter((i)=> [].indexOf(i) < 0).map((item, index) => (\n                                    <TableCell\n\n                                        align=\"right\"\n                                        key={item}\n                                        sortDirection={state.orderBy === item ? state.order : false}\n                                    >\n                                        <Tooltip\n                                            title=\"Sort\"\n                                            placement={\"bottom-start\"}\n                                            enterDelay={300}\n                                        >\n                                            <TableSortLabel\n                                                active={state.orderBy === item}\n                                                direction={state.order}\n                                                onClick={createSortHandler(item)}\n                                            >\n                                                {item}\n                                            </TableSortLabel>\n\n                                        </Tooltip>\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {results.linkData.filter(value=>{\n                                return (\n                                    props.val.length > 0 ? (value.name.toLowerCase().includes(props.val.toLowerCase())) : (value)\n                                );\n                            }).sort(getSorting(state.order, state.orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((item, index) => {\n                                    const isSelected2 = isSelected(item.id);\n                                    return (\n                                        <TableRow key={index} >\n                                            <TableCell component=\"th\" scope=\"row\" /*onClick={ HandleCheckBox }*/>\n                                                <Checkbox\n                                                    checked={isSelected2}\n                                                    color=\"primary\"\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                    selected={isSelected2}\n                                                    onClick={event=>handleClick(event,item.id)}\n                                                />\n                                            </TableCell>\n\n                                            {Object.keys(results.linkData.find(Boolean)).filter((i)=> [].indexOf(i) < 0).map((itemKey, index) => (\n\n                                                <TableCell key={index} onClick={(event)=>handleCellClick(event, item)}>{item[itemKey]}</TableCell>\n                                            ))}\n                                            <TableCell align=\"right\">\n                                            </TableCell>\n                                        </TableRow>\n                                    )})}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height:53 * emptyRows}}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={results.linkData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n\n            </Paper> : <span>No Data</span>\n    );\n\n}\nexport default React.memo(BasicTableR)","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Relation/DetailRel.js",["722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740"],"import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"../Asset/AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\n\nimport {apiProvider} from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType, getGraphs} from \"../../services/Redux/actions\";\nimport GraphD from \"../../components/graph\";\nimport RelForm from \"../Asset/RelForm\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport {ForceGraph} from \"../../components/forceGraph\";\nimport data from \"../../components/forcegraph-data.json\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst DetailRel = (props) => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        clickedTab: '',\n        title: 'Relation'\n    });\n\n    const classes = useStyles();\n\n    //relation table에 대한 crud\n    const addOrEdit = (ob) => {\n        // dispatch(revRe(false))\n        apiProvider.insertLink(ob).then(()=>{dispatch(revRe(true))})\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"link\",id)\n            .then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const decorateGraphNodesWithInitialPositioning = nodes => {\n        return nodes.map(n =>\n            Object.assign({}, n, {\n                x: n.x || Math.floor(Math.random() * 500),\n                y: n.y || Math.floor(Math.random() * 500),\n            })\n        );\n    };\n\n\n    const handleData = () => {\n        apiProvider.getAds2(clickedData.id).then((results)=>{\n            dispatch(getGraphs(\n                [...(decorateGraphNodesWithInitialPositioning(results.nodes.map((i)=>({name:i.name, id:i.id, type:i.nodeType.toLowerCase()}))))],\n                [...(results.links.map((i)=>({id:i.id, relation: \"Contain\", source:i.fromNodeID, target:i.toNodeID})))])\n            );\n        })\n\n    }\n    const expandData = (nodeId) => {\n        apiProvider.getAds2(nodeId).then((results)=>{\n            dispatch(getGraphs(\n                [\n                    ...(dataTmp.nodes.length > 0 ? dataTmp.nodes.filter((item)=>!results.nodes.map((t)=>(t.id)).includes(item.id)): []),\n                    ...(results.nodes.map((i)=>({name:i.name, id:i.id, type:i.nodeType.toLowerCase()})))\n                ],\n                [\n                    ...(dataTmp.links.length > 0 ? dataTmp.links.filter((item)=>!results.links.map((t)=>(t.id)).includes(item.id)): []),\n                    ...(results.links.map((i)=>({id:i.id, relation:\"Contain\", source:i.fromNodeID, target:i.toNodeID})))\n                ])\n            )\n        })\n    }\n\n    const nodeHoverTooltip = React.useCallback((node) => {\n        return `<div>${node.name}</div>`;\n    }, []);\n\n    useEffect(()=>{\n        handleData(clickedData.i)\n        return () => {\n            dispatch(getGraphs([], []))\n        }\n    }, [refresh2])\n\n\n    return (\n        <div>\n            {/*<GraphD handleData={handleData} expandData={expandData}></GraphD>*/}\n            <section>\n                <ForceGraph nodeHoverTooltip={nodeHoverTooltip} handleData={handleData}/>\n            </section>\n            <section>\n                {/*<Col></Col>*/}\n                <TabletoolbarRel handleData={handleData} title={\"Relations\"} adde={addOrEdit} delete={editOrDelete}>\n                    <RelForm></RelForm>\n                </TabletoolbarRel>\n            </section>\n        </div>\n    );\n};\n\n\nexport default React.memo(DetailRel);","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/Pagination.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/GridFilters.js",["741"],"import HighlightCell from \"./HighlightCell\";\n\nfunction containsInsensitive(filter, row) {\n  return (\n    row[filter.id] == null ||\n    String(row[filter.id])\n      .toLowerCase()\n      .includes(filter.value.toLowerCase())\n  );\n}\n\nfunction getFiltered(gridState) {\n  return { filtered: gridState.filtered };\n}\n\nexport default {\n  Cell: HighlightCell,\n  filterable: true,\n  filterMethod: containsInsensitive,\n  getProps: getFiltered\n};\n//얘는 뭐지? 그냥 props value들 함수로 export 한거구나. 일단 grid table에 cell 인자로 주는게 뭔지 봐야겠다\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/HighlightCell.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/ActionsCell.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/AvatarCell.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/FormProvider.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/util/utils.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/dataFactory.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/MultiSelect.js",["742"],"import React, { useEffect } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\n// import { props.options } from \"./utils\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectedOp} from \"../../services/Redux/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: 300\n    },\n    indeterminateColor: {\n        color: \"#f50057\"\n    },\n    selectAllText: {\n        fontWeight: 500\n    },\n    selectedAll: {\n        backgroundColor: \"rgba(0, 0, 0, 0.08)\",\n        \"&:hover\": {\n            backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n        }\n    }\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    },\n    getContentAnchorEl: null,\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n    },\n    transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n    },\n    variant: \"menu\"\n};\n\n//selected 초기화해야함\nexport default function MultiSelect(props) {\n    // const { name, label, value,error=null, onChange, props.options } = props;\n\n    console.log(props.options)\n    const classes = useStyles();\n    // const [selected, setSelected] = useState([]);\n    const dispatch = useDispatch();\n\n    const selected = useSelector(state=>state.SlidePop.selectedData)\n    const isAllSelected =\n        props.options.length > 0 && selected.length === props.options.length;\n\n    useEffect(()=>{\n        dispatch(selectedOp([]))\n    }, [])\n    const handleChange = (event) => {\n        const value = event.target.value;\n        if (value[value.length - 1] === \"all\") {\n            dispatch((selectedOp(selected.length === props.options.length ? [] : props.options)));\n            return;\n        }\n        // setSelected(value);\n        dispatch(selectedOp(value))\n    };\n\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel id=\"mutiple-select-label\">Multiple Select</InputLabel>\n            <Select\n                labelId=\"mutiple-select-label\"\n                multiple\n                value={selected}\n                onChange={handleChange}\n                renderValue={(selected) => selected.join(\", \")}\n                MenuProps={MenuProps}\n            >\n                <MenuItem\n                    value=\"all\"\n                    classes={{\n                        root: isAllSelected ? classes.selectedAll : \"\"\n                    }}\n                >\n                    <ListItemIcon>\n                        <Checkbox\n                            classes={{ indeterminate: classes.indeterminateColor }}\n                            checked={isAllSelected}\n                            indeterminate={\n                                selected.length > 0 && selected.length < props.options.length\n                            }\n                        />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: classes.selectAllText }}\n                        primary=\"Select All\"\n                    />\n                </MenuItem>\n                {props.options.map((option) => (\n                    <MenuItem key={option} value={option}>\n                        <ListItemIcon>\n                            <Checkbox checked={selected.indexOf(option) > -1} />\n                        </ListItemIcon>\n                        <ListItemText primary={option} />\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n}\n\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Select.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/useForm.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectConfirmsPopup.js",["743","744","745","746","747","748","749","750","751","752","753","754","755","756"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop, openSelectConFieldPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {Field, change} from \"redux-form\";\nimport Table from \"react-table\";\n\nimport \"../table/style.scss\"\n\nexport default function SelectConfirmsPopup(props) {\n\n    //TODO:: submit 누르면 dispatch(change)) 하기.\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const [selField, setSelField] = React.useState(\"\")\n    const [selConType, setSelConType] = React.useState(\"\")\n\n\n    const [data, setData] = React.useState([])\n\n    const conType = [\"String\", \"Numeric\", \"IP\"]\n\n    const columns = [\n        {Header: \"Field\", accessor: \"field\"},\n        {Header: \"Condition Type\", accessor: \"conType\"}\n    ];\n\n    const condList = ({id, active, ruletype, keyfield, confirms, ...other}) => {\n        const li = Object.keys(other).filter(it => other[it] !== \"\")\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruletype\", \"keyfield\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    const dispatch = useDispatch();\n\n    const handleSelect = () => {\n        let res = []\n        data.forEach((it)=>{\n            res = [...res, it.conType !== \"String\" ? (it.conType.charAt(0) + \":\" + it.field) : it.field]\n        })\n        dispatch(change(\"inline\", \"confirms\", res.join(',')))\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const handleAdd = () => {\n        setData([...data, {field:selField, conType:selConType}])\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div className=\"popup__body\">\n\n                <button type=\"button\" className=\"btn\" onClick={(e) => (selField && selConType) && handleAdd()}>\n                    Add\n                </button>\n\n\n                <div\n                    className=\"table-wrapper\"\n                >\n                    <table className=\"signal-option-table\">\n                        <colgroup>\n                            <col style={{width: \"240px\"}}/>\n                            <col/>\n                            <col style={{width: \"30px\"}}/>\n                        </colgroup>\n                        <thead>\n                        <tr>\n                            <th>Select Field</th>\n                            <th>Select Condition Type</th>\n                            <th></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelField(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {condList(kfOb).map(\n                                        (item, index) => (\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelConType(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {conType.map(\n                                        (item, index)=>(\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"table-wrapper\">\n                    <Table\n                        columns={columns}\n                        data={data}\n                        defaultPageSize={5}\n                    >\n                    </Table>\n                </div>\n\n                <div className=\"popup__footer\">\n                    <button\n                        className=\"btn\"\n                        onClick={() => onClose()}\n                    >\n                        cancel\n                    </button>\n                    <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                        select\n                    </button>\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/tmpmine.js",["757","758","759","760","761","762","763","764","765"],"import React, {useState, useEffect, memo} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReleasePopup from \"./popup/ReleasePopup\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BasicTable from \"./tmpmineTable\";\nimport {lighten} from \"@material-ui/core/styles/colorManipulator\";\nimport classNames from \"classnames\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Grid, } from '@material-ui/core';\nimport Input from \"../components/controls/Input\";\nimport {clearClicked, clickedOp, revAd, revRe} from \"../services/Redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        // width: '100vw',\n        // height: '100vh',\n        // spacing: 0,\n        // justify: 'space-around'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        // flexGrow: 1,\n        marginRight: theme.spacing(4),\n        marginLight: theme.spacing(5),\n\n\n    },\n\n}));\n\nconst toolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingRight: theme.spacing(1)\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark\n            },\n    spacer: {\n        flex: 1\n    },\n    actions: {\n        color: theme.palette.text.secondary,\n        display: \"flex\",\n        flexDirection: 'row'\n    },\n    title: {\n        flex: \"0 0 auto\"\n    }\n}));\n\n\nfunction TabletoolbarTmp(props) {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selected, setSelected] = React.useState([])\n    const [search, setSearch] = React.useState(false)\n    const [val, setVal] = React.useState('')\n    const classes2 = toolbarStyles();\n    const classes = useStyles();\n    const [title, setTitle] = React.useState(props.title);\n    const isOpen = useSelector(state=>state.SlidePop.isOpen)\n    const dispatch = useDispatch();\n\n    //add Icon\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setVal(value)\n    }\n\n    const handleClose1 = () => {\n        setAnchorEl(null);\n        // setOpen(true)\n    };\n\n    const {children, value, index, ...other} = props;\n\n    const [open, setOpen] = React.useState(false);\n    const [del, setDel] = React.useState(false);\n\n\n    useEffect(() => {\n        if (del) {\n            props.delete(selected);\n            setSelected([])\n            // props.onRefreshChange();\n            setDel(false);\n            setVal('')\n            setSearch(false)\n\n        }\n    }, [del, search, props])\n\n    const handleDelete = () => {\n        // setDel(false);\n        setDel(true)\n\n    }\n    const handleClickOpen = () => {\n        // dispatch(clickedOp('', false))\n        // isOpen && dispatch(clearClicked(''))\n        //slide 끄는 순간 이거 해야지 , add 누를 때 말고\n        setAnchorEl(null);\n        setOpen(true);\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        // props.onaddChange();\n        //\n        dispatch(revAd(true))\n    };\n\n    const handleRefresh = () => {\n        // props.onRefreshChange();\n        //\n        dispatch(revRe(true))\n    }\n    const handleSelected = (id) => {\n        setSelected(id)\n    }\n    const handleSearch = (e) => {\n        search ? setSearch(false) : setSearch(true)\n        setVal('')\n    }\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar className={classNames(classes2.root, {[classes2.highlight]:selected.length > 0})}>\n                    <div className={classes2.title}>\n                        {selected.length > 0 ? (\n                            <Typography color=\"inherit\" variant=\"h6\">\n                                {selected.length} selected\n                            </Typography>\n                        ) : (\n                            search ? (\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        <Input\n                                            onChange={handleInputChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                        ) : (\n                                <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n                                    {/*{props.title}*/}\n                                    {title}\n                                </Typography>\n                                )\n                        )}\n                    </div>\n\n                    <div className={classes2.spacer}/>\n                    <div className={classes2.actions}>\n                        {selected.length > 0 ? (\n                            <Button onClick={handleDelete}>\n                                <DeleteIcon></DeleteIcon>\n                            </Button>\n                        ) : (\n                            search ? (\n                                <Button onClick={handleSearch}>\n                                    <CloseIcon></CloseIcon>\n                                </Button>\n\n                            ) : (\n                                <div>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                                        <AddIcon>\n                                        </AddIcon>\n                                    </Button>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleRefresh}>\n                                        <RefreshIcon>\n                                        </RefreshIcon>\n                                    </Button>\n                                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={event => handleSearch(event)}>\n                                        <SearchIcon>\n                                        </SearchIcon>\n                                    </Button>\n\n                                    <Menu\n                                        id=\"simple-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose1}\n                                    >\n                                        <MenuItem onClick={handleClickOpen}>{props.title} 추가</MenuItem>\n                                        <MenuItem onClick={handleClickOpen}>{props.title} 불러오기</MenuItem>\n                                    </Menu>\n\n                                    <ReleasePopup\n                                        title=\"장치 추가\"\n                                        openPopup={open}\n                                        setOpenPopup={setOpen}\n                                    >\n                                        {\n                                            React.cloneElement(children,{\n                                                onclose:handleClose,\n                                                add:props.adde,\n                                                // ref:props.refresh\n                                            })\n                                        }\n                                    </ReleasePopup>\n                                </div>\n\n                            )\n                                )}\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n            {/*<span key={[del, val]}>*/}\n                    <BasicTable\n                        handleData={props.handleData}\n                        handleCell={props.handleCell}\n                        selectedUp = {handleSelected}\n                        delete={del}\n                        val = {val}\n                    />\n            {/*</span>*/}\n    </div>\n    );\n}\n\nexport default React.memo(TabletoolbarTmp)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/graph.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791"],"import pic from '../responsive.svg'\nimport { Graph } from \"react-d3-graph\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, {useEffect} from \"react\";\nimport {Divider, Grid, Popover} from \"@material-ui/core\";\nimport Input from \"./controls/Input\";\nimport Controls from \"./controls/Controls\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from \"@material-ui/core/List\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {Check, CompareArrows, SaveAlt} from \"@material-ui/icons\";\nimport {apiProvider} from \"../services/Provider\";\nimport axios from \"axios\";\nimport {currType, getGraphs, revRe} from \"../services/Redux/actions\";\nimport MultiSelect from \"./controls/MultiSelect\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReleasePopup from \"./popup/ReleasePopup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Form} from \"./useForm\";\n\nconst useStyles2 = makeStyles((theme)=>({\n    root: {\n        // minWidth: 1000,\n        display: \"flex\"\n    },\n    list:{\n        // backgroundColor: theme.palette.background.paper,\n    },\n    relations: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    re_input: {\n        flexGrow: 1,\n        margin: 10,\n    },\n    form:{\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    heading:{\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0\n    },\n    secondaryHeading:{\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n\n}));\n\n\nfunction GraphD(props){\n    const classes = useStyles2();\n\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n    const refresh = useSelector(state=>state.fetchAPI)\n    const curr = useSelector(state => state.SlidePop.clickedData)\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const [open, setOpen] = React.useState(false);\n    const [mouse, setMouse] = React.useState({});\n    const [mouseDetail, setMouseDetail] = React.useState({})\n\n\n    const decorateGraphNodesWithInitialPositioning = nodes => {\n        return nodes.map(n =>\n            Object.assign({}, n, {\n                x: n.x || Math.floor(Math.random() * 500),\n                y: n.y || Math.floor(Math.random() * 500),\n            })\n        );\n    };\n\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffect(()=>{\n        props.handleData(curr.i)\n        return ()=>{ // when component unmount\n            dispatch(getGraphs([], []))\n        }\n    }, [refresh.refre, refresh.ad])\n\n    const onClickNode = function(nodeId, node) {\n        setAnchorEl(null)\n        props.expandData(node.id)\n    };\n\n    const onMouseNode = function(event, nodeId, node) {\n        event.stopPropagation();\n        setAnchorEl(event.currentTarget)\n        setMouse(node)\n    };\n    const outMouseNode = function(event) {\n        setAnchorEl(null)\n        setOpen(false)\n\n    }\n    const handleClose1 = () => {\n        setAnchorEl(null);\n    };\n\n    useEffectSkipFirst(()=>{\n        apiProvider.getRow(mouse.type, mouse.id).then((data)=>{\n            setMouseDetail(data.data)\n        })\n    }, [mouse])\n\n\n    const myConfig =\n        {\n            \"automaticRearrangeAfterDropNode\": true,\n            \"collapsible\": false,\n            \"directed\": false,\n            \"focusAnimationDuration\": 0.75,\n            \"focusZoom\": 1,\n            \"freezeAllDragEvents\": false,\n            \"height\": 700,\n            \"highlightDegree\": 1,\n            \"highlightOpacity\": 1,\n            \"linkHighlightBehavior\": false,\n            \"maxZoom\": 8,\n            \"minZoom\": 0.1,\n            \"nodeHighlightBehavior\": false,\n            \"panAndZoom\": false,\n            \"staticGraph\": true,\n            \"staticGraphWithDragAndDrop\": true,\n            \"width\": \"100%\",\n            \"d3\": {\n                \"alphaTarget\": 0.05,\n                \"gravity\": -100,\n                \"linkLength\": 100,\n                \"linkStrength\": 1,\n                \"disableLinkForce\": false\n            },\n            \"node\": {\n                \"color\": \"#d3d3d3\",\n                \"fontColor\": \"black\",\n                \"fontSize\": 8,\n                \"fontWeight\": \"normal\",\n                \"highlightColor\": \"SAME\",\n                \"highlightFontSize\": 8,\n                \"highlightFontWeight\": \"normal\",\n                \"highlightStrokeColor\": \"SAME\",\n                \"highlightStrokeWidth\": \"SAME\",\n                \"mouseCursor\": \"pointer\",\n                \"opacity\": 1,\n                \"renderLabel\": true,\n                \"size\": 200,\n                \"strokeColor\": \"none\",\n                \"strokeWidth\": 1.5,\n                \"svg\": \"\",\n                \"symbolType\": \"circle\",\n                \"labelProperty\": \"name\"\n\n            },\n            \"link\": {\n                \"color\": \"#d3d3d3\",\n                \"fontColor\": \"black\",\n                \"fontSize\": 8,\n                \"fontWeight\": \"normal\",\n                \"highlightColor\": \"SAME\",\n                \"highlightFontSize\": 8,\n                \"highlightFontWeight\": \"normal\",\n                \"labelProperty\": \"label\",\n                \"mouseCursor\": \"pointer\",\n                \"opacity\": 1,\n                \"renderLabel\": false,\n                \"semanticStrokeWidth\": false,\n                \"strokeWidth\": 1.5,\n                \"markerHeight\": 6,\n                \"markerWidth\": 6,\n                \"strokeDasharray\": 0,\n                \"strokeDashoffset\": 0,\n                \"strokeLinecap\": \"butt\"\n            }\n        }\n    const handleRefresh = () => {\n        dispatch(revRe(true))\n    }\n\n    return (\n        <div>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleRefresh}>\n                <RefreshIcon>\n                </RefreshIcon>\n            </Button>\n\n            <div\n                // style={{\n                // height: '400px',\n                // width: '1000px',\n                // border: \"0.05px dotted #000000\"\n                // }}\n            >\n\n                <Graph\n                    className={classes.root}\n                    id=\"graph-id\"\n                    data={dataTmp}\n                    config={myConfig}\n                    onClickNode={onClickNode}\n                    onMouseOverNode={onMouseNode}\n                    onMouseOutNode={outMouseNode}\n                />\n                <Popover\n                    style={{pointerEvents:'none'}}\n                    id=\"mouse-over-popover\"\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    onClose={handleClose1}\n                    disableRestoreFocus\n                    // PaperProps={{onMouseOver:onMouseNode, onMouseOut:outMouseNode}}\n                >\n                    <List className={classes.form}>\n                        <ListItemText>\n                            <Typography className={classes.heading}>id</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouseDetail.id}</Typography>\n                        </ListItemText>\n                        <Divider/>\n                        <ListItemText>\n                            <Typography className={classes.heading}>name</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouseDetail.name}</Typography>\n                        </ListItemText>\n                        <Divider/>\n\n                        <ListItemText>\n                            <Typography className={classes.heading}>nodeType</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouse.type}</Typography>\n                        </ListItemText>\n                    </List>\n                </Popover>\n\n\n            </div>\n\n        </div>\n\n\n)\n}\nexport default GraphD\n","/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetAddForm.js",["792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807"],"import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"../../components/useForm\"\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nfunction AssetAddForm(props) {\n    const classes = useStyles();\n\n    // const [data, setData] = React.useState(props.clickedData);\n    const data = useSelector(state => state.SlidePop.clickedData)\n    const memTemp = useSelector(state => state.fetchAPI.temp)\n\n    const [ex, setEx] = React.useState(data != '' ? true : false); //조건 다시\n    const [entityTypes, setEntityTypes] = React.useState([]);\n\n\n    const mounted = React.useRef(false)\n\n\n    const validate = {} //todo::validation만들기\n\n    const initialFValues = {\n        id: (ex ? data.id : '1'),\n        name: (ex ? data.name : ''),\n        desc: (ex ? data.desc : ''),\n        entityType: (ex ? data.entityType : ''),\n        props: (ex ? (data.props) : {}),\n        createdAt: (ex ? data.createdAt : '1'),\n        updatedAt: (ex ? data.updatedAt : '1')\n\n    }\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, false, validate, )\n\n    const [entityTemplate, setEntityTemplate] = React.useState(ex? JSON.parse(memTemp.filter(item=>item.entityType===values.entityType)[0][\"templateString\"]) : '')\n    // console.log(ex? values.props : '')\n    const [tmp, setTmp] = useState( ex ? JSON.parse(values.props) : {})\n    const handlePropChange = e => {\n        const {name, value} = e.target\n        setTmp({\n            ...tmp,\n            [name]:value\n        })\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        //props가 안바꼈을때 useEffect가 안돌아서 그랫음 = name만 변경했을 경우\n        values.props === JSON.stringify(tmp) ? props.handleUpdate(values) : setValues({...values, props:(JSON.stringify(tmp))})\n\n    }\n\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffect(()=>{\n        if(mounted.current) {\n            if (props.handleUpdate) props.handleUpdate(values)\n            else {\n                props.onclose(false)\n                props.add(values)\n            }\n        }\n        // mounted.current=true\n    }, [values.props])\n\n    useEffectSkipFirst(() => {\n        let tmpList = {}\n        Object.keys(entityTemplate).forEach((item) => [\n            tmpList[item] = ''\n        ])\n        setTmp(tmpList)\n    },\n        [entityTemplate]\n    );\n\n\n    useEffect(()=>{\n        if(mounted.current){\n            setEntityTemplate(getTemp)\n        }\n        else mounted.current=true;\n    }, [values.entityType])\n\n    const components = {\n        TextField: Input,\n        Select: Select\n    }\n\n\n    const getTemp = () => {\n        let mTmp = memTemp.find(item=>item.entityType===values.entityType)\n        return mTmp ? JSON.parse(mTmp[\"templateString\"]) : ''\n\n    }\n\n    const GenParam = (item) => {\n        let tmpObj = {}\n        Object.keys(item).filter(key => key !== \"value\").map((key, index) => {\n            tmpObj[key] = item[key]\n        })\n        return tmpObj\n\n    }\n\n\n    useEffect(()=>{\n        let completed = false;\n        async function get() {\n            const result = await axios.get(\"http://10.250.250.208:8096/api/v1/template/entitytypes?node=\" +  \"asset\")\n            if (!completed) setEntityTypes(result.data);\n        }\n        get();\n\n        return () => {\n            completed = true;\n        }\n    }, [])\n\n    return(\n        <Form onSubmit={handleSubmit}>\n\n            <Grid container>\n                <Grid item xs={6}>\n                    <Input\n                        name=\"name\"\n                        label=\"name\"\n                        value={values.name}\n                        {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                    />\n                    <Controls.Select\n                        name=\"entityType\"\n                        label=\"Entity Type\"\n                        value={values.entityType}\n                        {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                        options={entityTypes}\n                        // error={errors.departmentId}\n                    />\n\n                </Grid>\n                {ex && (\n                    <Grid item xs={6}>\n\n                        <Input\n                            label=\"Asset ID\"\n                            readonly={true}\n                            name=\"id\"\n                            value={values.id}\n                        />\n                        <Input\n                            readonly={true}\n                            name=\"created1\"\n                            label=\"createdAt\"\n                            value={values.createdAt}\n                        />\n                        <Input\n                            name=\"updated1\"\n                            readonly={true}\n                            label=\"updatedAt\"\n                            value={values.updatedAt}\n                        />\n\n                    </Grid>)\n                }\n\n                <Typography> Properties </Typography>\n\n                {\n                    Object.keys(entityTemplate).map((item, index)=>{\n                        const pv = entityTemplate[item][\"type\"]\n                        const Pv = components[pv]\n                        return (\n                            <Pv\n                                name={item}\n                                label={item}\n                                value = {tmp[item] || ''}\n                                key={index}\n                                {...GenParam(entityTemplate[item])}\n                                {...(props.editable || props.editable == undefined ? {onChange: handlePropChange} : {})}\n                            >\n                            </Pv>\n                        )\n\n                    })\n\n                }\n\n                <Input\n                    name=\"desc\"\n                    label=\"desc\"\n                    value={values.desc || ''}\n                    {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                />\n\n\n                <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\"\n                            />\n                    </div>\n\n            </Grid>\n        </Form>\n\n    )\n}\n\nexport default React.memo(AssetAddForm)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/forceGraph.js",["808","809"],"import React, {useEffect} from \"react\";\nimport {runForceGraph} from \"./ForceGraphGenerator\";\nimport styles from \"./ForceGraph.module.css\";\nimport { useSelector} from \"react-redux\";\n// import {getGraphs} from \"../services/Redux/actions\";\n\nexport function ForceGraph({ nodeHoverTooltip, handleData }) {\n    const containerRef = React.useRef(null); //create Ref\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n    // const refresh = useSelector(state=>state.fetchAPI)\n    // const curr = useSelector(state => state.SlidePop.clickedData)\n    // const dispatch = useDispatch();\n\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n\n    // useEffect(()=>{\n    //     handleData(curr.i)\n    //     return () => {\n    //         dispatch(getGraphs([], []))\n    //     }\n    // }, [refresh.refre])\n\n    useEffect(()=>{\n    }, [dataTmp])\n\n    useEffectSkipFirst(() => {\n        let destroyFn;\n\n        if (containerRef.current) {\n            console.log(\"runForceGraph render\")\n            console.log(dataTmp.links)\n\n            const { destroy } = runForceGraph(containerRef.current, dataTmp.links, dataTmp.nodes, nodeHoverTooltip);\n            destroyFn = destroy;\n        }\n\n\n        return destroyFn; //when component unmount 겠지?\n    }, [dataTmp]);\n\n\n\n    return <div ref={containerRef} className={styles.container} />;\n    // return <div ref={containerRef} className=\"svg-canvas\"  />;\n}","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Controls.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/tmpmineTable.js",["810","811","812","813","814","815","816","817","818","819","820"],"import React, {useEffect, useState} from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {Checkbox, TablePagination, Tooltip} from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from \"@material-ui/core/Button\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllR, revRe} from \"../services/Redux/actions\";\nimport {apiProvider} from \"../services/Provider\";\nimport {revOp, clickedOp} from \"../services/Redux/actions\";\n\nconst useStyles2 = makeStyles({\n    table: {\n        minWidth: 650,\n        // display: \"flex\"\n    },\n    tableHead: {\n        display:\"flex\",\n        flexDirection:\"column\",\n    },\n    tableBody: {\n        display:\"flex\",\n\n    },\n    tableRow: {\n        display:\"flex\",\n        flexDirection:\"column\"\n    }\n\n});\n\nfunction BasicTable(props) {\n    const classes = useStyles2();\n    const [selected, setSelected] = useState([])\n    const dispatch = useDispatch();\n\n    const results = useSelector(state => state.fetchAPI);\n    //props.data => results.data\n    const [state, setState] = useState({\n        order: \"asc\",\n        orderBy: \"name\",\n        selected1:[],\n        page:0,\n        rowsPerPage:5\n    })\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffectSkipFirst ( ()=>{ //이거 SkipFirst 해도 되는지 다시 확인요망\n        // const type = results.currType\n        // dispatch(apiProvider.getAllRedux(type))\n        props.handleData()\n    }, [results.ad, results.refre, results.currType])\n\n    useEffectSkipFirst(()=>{\n        if(props.delete) setSelected([])\n    },[props.delete])\n\n\n    const handleRequestSort = (event, property) => {\n        const orderBy = property;\n\n        let order = \"desc\";\n        if( state.orderBy === property && state.order === \"desc\") {\n            order = \"asc\";\n        }\n\n        setState({...state, order:order, orderBy: orderBy})\n    };\n\n\n    const handleChangePage = (event, newpage) => {\n        setState({...state, page:newpage});\n\n    };\n    const handleChangeRowsPerPage = event => {\n        setState({...state, page:0, rowsPerPage:parseInt(event.target.value)})\n\n    }\n\n    const handleSelectAllClick = (event, checked) => {\n        if (checked) {\n            setSelected(results.data.map(n=>n.id));\n            props.selectedUp(results.data.map(n=>n.id));\n\n            return;\n        }\n        setSelected([]);\n        props.selectedUp([]);\n\n\n    };\n\n    const handleClick = (event, id) => {\n\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n\n        props.selectedUp(newSelected);\n\n    };\n    console.log(selected)\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const handleCellClick = (e, row) => {\n        // apiProvider.getRow(results.currType, row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n        props.handleCell && props.handleCell(e, row)\n\n    }\n    const createSortHandler = property => event => {\n        handleRequestSort(event, property)\n    }\n\n    function getSorting(order, orderBy) {\n        return order === \"desc\"\n            ? (a, b) => (b[orderBy] < a[orderBy] ? -1 : 1)\n            : (a, b) => (a[orderBy] < b[orderBy] ? -1 : 1);\n\n    }\n\n    const {order, orderBy, selected1 ,rowsPerPage, page} = state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, results.data.length - page * rowsPerPage)\n    return (\n        results.data.length > 0 ?\n        <Paper>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n\n                        <TableRow>\n                            <TableCell>\n                                <Checkbox\n                                    color=\"primary\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                    onChange={handleSelectAllClick}\n\n                                />\n                            </TableCell>\n                            {Object.keys(results.data.find(Boolean)).filter((i)=> [\"id\", \"createdAt\", \"updatedAt\", \"props\"].indexOf(i) < 0).map((item, index) => (\n                                <TableCell\n\n                                    align=\"right\"\n                                    key={item}\n                                    sortDirection={state.orderBy === item ? state.order : false}\n                                >\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={\"bottom-start\"}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={state.orderBy === item}\n                                            direction={state.order}\n                                            onClick={createSortHandler(item)}\n                                        >\n                                            {item}\n                                        </TableSortLabel>\n\n                                    </Tooltip>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {results.data.filter(value=>{\n                            return (\n                                props.val.length > 0 ? (value.name.toLowerCase().includes(props.val.toLowerCase())) : (value)\n                            );\n                        }).sort(getSorting(state.order, state.orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((item, index) => {\n                                const isSelected2 = isSelected(item.id);\n                                return (\n                                    <TableRow key={index} >\n                                        <TableCell component=\"th\" scope=\"row\" /*onClick={ HandleCheckBox }*/>\n                                            <Checkbox\n                                                checked={isSelected2}\n                                                color=\"primary\"\n                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                selected={isSelected2}\n                                                onClick={event=>handleClick(event,item.id)}\n                                            />\n                                        </TableCell>\n\n                                        {Object.keys(results.data.find(Boolean)).filter((i)=> [\"id\", \"createdAt\", \"updatedAt\", \"props\"].indexOf(i) < 0).map((itemKey, index) => (\n\n                                            <TableCell key={index} onClick={(event)=>handleCellClick(event, item)}>{item[itemKey]}</TableCell>\n                                        ))}\n                                        <TableCell align=\"right\">\n                                            <Button>\n                                                <MoreVertIcon>\n                                                </MoreVertIcon>\n\n                                            </Button>\n\n\n                                        </TableCell>\n                                    </TableRow>\n                                )})}\n                        {emptyRows > 0 && (\n                            <TableRow style={{height:53 * emptyRows}}>\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={results.data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n\n        </Paper> : <span>No Data</span>\n    );\n\n}\nexport default React.memo(BasicTable)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/ForceGraphGenerator.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/ActionButton.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Button.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/Checkbox.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/controls/RadioGroup.js",[],"/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRuleDetailTable.js",["821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857"],"import React, {useState, useRef, useEffect} from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\nimport \"../../components/table/style.scss\"\nimport {\n    revAd,\n    revRe,\n    revOp,\n    clickedOp,\n    currType,\n    getAllR,\n    openSelectPop,\n    openSelectKeyFieldPop,\n    openSelectConFieldPop,\n    openSavePop,\n    clearClicked,\n    addTmp,\n    deleteTmp,\n    keyFieldSelect,\n    openPop,\n    currEd, hisFlag, addedField, selectHead, clickedOpt\n} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport GridTableNormal from \"../../components/table/gridTableNormal\";\nimport SlidingPane from \"react-sliding-pane\";\nimport FormProvider from \"../../components/table/FormProvider\";\nimport Table from \"react-table\";\nimport SelectConfirmsPopup from \"../../components/popup/SelectConfirmsPopup\";\nimport ActionsCell from \"../../components/table/ActionsCell\";\nimport {bindActionCreators} from \"redux\";\nimport GridFilters from \"../../components/table/GridFilters\";\nimport {change, Field, reset} from \"redux-form\";\nimport HighlightCell from \"../../components/table/HighlightCell\";\n\n\nclass NormalizeRuleDetailTable extends React.Component {\n\n    //TODO::add 하고 취소하기가.. 그리고 여기 refresh 안되어있다.\n    state = {\n        refre : false,\n        editing: false,\n        selected: {},\n        selectAll: 0,\n        adding: false,\n        columns:[],\n        selectEdit: false,\n        forsubmit: false,\n        clickedData: {\n            ruleId: \"\",\n            sample: \"\",\n            rule: \"\",\n            arrange: []\n        },\n        // clickedRule: {},\n        editArrange: false\n    }\n\n    //TODO:: arrange rule도 select list로 바꾸기\n    vendorList = []\n    typeList = []\n    formatList = [] //confirm 과 priority 는 text 입력\n\n    resetColumns =()=>{\n        this.setState((state)=>{\n            return {\n                ...state, columns:\n\n                    [\n                        {\n                            columns: [\n                                {\n                                    id: \"checkbox\",\n                                    accessor: \"\",\n                                    Cell: ({original}) => {\n                                        return (\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                checked={this.state.selected[original.ruleId] === true}\n                                                onChange={() => this.toggleRow(original.ruleId)}\n                                            />\n                                        );\n                                    },\n                                    Header: x => {\n                                        return (\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                checked={this.state.selectAll === 1}\n                                                ref={input => {\n                                                    if (input) {\n                                                        input.indeterminate = this.state.selectAll === 2;\n                                                    }\n                                                }}\n                                                onChange={() => this.toggleSelectAll()}\n                                            />\n                                        );\n                                    },\n                                    sortable: false,\n                                    width: 45\n                                },\n                            ]\n                        },\n                        {Header: \"RuleId\", accessor: \"ruleId\", ...this.editableColumnProps},\n                        {Header: \"Vendor\", accessor: \"vendor\", ...this.editableColumnProps},\n                        {Header: \"Type\", accessor: \"type\", ...this.editableColumnProps},\n                        {Header: \"Log Format\", accessor: \"format\", ...this.editableColumnProps},\n                        {Header: \"Confirm\", accessor: \"confirm\", ...this.editableColumnProps},\n                        {Header: \"Priority\", accessor: \"priority\", ...this.editableColumnProps},\n                        {\n                            Header: \"\",\n                            maxWidth: 90,\n                            filterable: false,\n                            getProps: this.getActionProps,\n                            Cell: ActionsCell\n                        }\n                    ]\n            }\n        })\n    }\n    editableComponent = ({input, editing, value, ...rest}) => {\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n\n    editableAllColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editArrange\n            const fieldProps = {\n                component: this.editableComponent,\n                editing,\n                props\n            };\n\n            const n = props.original.idx + \",\" + props.column.id\n            return <Field name={n.toString()} value=\"\" {...fieldProps} />;\n\n        }\n    };\n    componentDidMount() {\n        this.resetColumns()\n    }\n\n    componentDidUpdate = (prevProps) => {\n        //for arrangeRule submit\n        const t = ((prevProps.forsubmit !== this.state.forsubmit))\n        const cond = (prevProps.refre !== this.state.refre)\n        if(t && this.state.forsubmit){\n            const newRules = this.props.data.rules.slice().map(({ruleId, sample, rule, arrange, ...other}) => {\n                return (ruleId == this.state.clickedData.ruleId) ? Object.assign({}, this.state.clickedData, other)\n                    : Object.assign({}, {ruleId:ruleId, sample:sample,rule:rule, arrange:arrange}, other)\n            })\n            let final = this.props.data\n            final.rules = newRules\n            this.props.clickedOp(final)\n            this.setState({forsubmit:false})\n        }\n        if(cond && this.state.refre) { //TODO:: original data rollBack\n            //db에 있었던 경우 && 없는경우\n            const test = this.props.originalData.slice().filter(item=>item.id==this.props.data.id).shift() //originalData <-> store.data\n            apiProvider.getRow(\"normalizerule\", this.props.data.id).then((data)=>\n                data !== undefined ? this.props.clickedOp(data) : this.props.clickedOp(test))\n\n            this.setState({refre:false, selected:{}})\n\n\n\n        }\n\n    }\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(\n                        Math.max(0, ...this.props.data.rules.slice().map(v => v.ruleId))\n                    )\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) {\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        if (this.state.selectAll === 0) {\n            this.props.data.rules.forEach(x => {\n                newSelected[x.ruleId] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    //TODO::highlight가 있었으면 좋겠어\n    handleClick = (row) => {\n        this.setState({\n            clickedData: {\n                ruleId: row[\"ruleId\"],\n                sample: row[\"sample\"],\n                rule: row[\"rule\"],\n                arrange: row[\"arrange\"]\n            }\n        })\n    }\n    handleSave = () => {\n        const venString = this.props.data.rules.slice().map(it=>it.vendor).join(',')\n        const d = this.props.data\n        d.vendors = venString\n        const newData = this.props.originalData.slice().map((item) => {\n            return (item.id === d.id) ? d : item\n        })\n        this.props.addTmp(newData)\n    }\n\n    //TODO:: edit 누르기 전까진 sample log, tokenize rule 수정 불가능 해야함.\n    handleArrangeCancel = () => {\n        this.props.reset(\"ruleArrange\")\n        this.setState({editArrange:false})\n        const rollBack = this.props.data.rules.slice().filter(it=>it.ruleId===this.state.clickedData.ruleId).shift()\n        console.log(rollBack)\n        this.setState({\n            clickedData: {\n                ruleId: rollBack[\"ruleId\"],\n                sample: rollBack[\"sample\"],\n                rule: rollBack[\"rule\"],\n                arrange: rollBack[\"arrange\"]\n            }\n        })\n    }\n\n    handleAddVendor = () => {\n        const tp = {\n            ruleId: \"\",\n            vendor: \"\",\n            type: \"\",\n            format: \"\",\n            confirm: \"\",\n            priority: \"\",\n            sample: \"\",\n            rule: \"\",\n            arrange: []\n        }\n\n        tp.ruleId = (Math.max(0, ...this.props.data.rules.slice().map(v => v.ruleId)) + 1).toString()\n        this.setState({...this.state, editing: tp, adding: true})\n        const newCD = {...this.props.data} //TODO::진짜 쉿이다. props.data가 변하고 이게 변하니까 props.original.data가 변했구나..\n        newCD.rules = [tp, ...newCD.rules]\n        this.props.clickedOp(newCD)\n    }\n\n    handleSubmit = (values) => {\n        this.setState((state)=>{\n            const newCD = {...this.props.data} //TODO::지지\n            newCD.rules = newCD.rules.map((item)=>{\n                return item.ruleId === values.ruleId? values: item\n                }\n            )\n            this.props.clickedOp(newCD)\n            return state.adding ? {...state, adding:false} : {...state}\n        })\n    }\n\n    handleSubmit2 = (values) => {\n        console.log(values)\n        this.setState((state)=>{\n\n            return {...state, forsubmit:true, clickedData:{\n                ...state.clickedData,\n                    arrange: Object.values(values).map((item, index)=>{\n                        return Object.assign({}, item, this.state.clickedData.arrange[index])\n                    })\n                }}\n        })\n    }\n\n    handleDelete = () => {\n        const n = (({rules, ...other})=>{\n            return {rules:rules.filter((i)=>Object.keys(this.state.selected).indexOf(i.ruleId) < 0), ...other}\n        })({...this.props.data})\n        console.log(n)\n\n        this.props.clickedOp(n)\n    }\n\n    ///efore parse\n    makeParserParams = () => {\n\n        const {classifier} = this.props.data\n        const {confirm, format} = this.props.data.rules.slice().filter(item=>\n            item.ruleId === this.state.clickedData.ruleId\n        ).shift()\n        const {sample, rule} = this.state.clickedData\n\n        const toParse = {\n            confirm: confirm,\n            prefix: classifier, //classifier in props.data\n            raw:sample,\n            r_type:format,\n            tokenRule: rule\n        }\n\n        return JSON.stringify(toParse)\n            .replace(/\\\\n/g, \"\\\\n\")\n            .replace(/\\\\'/g, \"\\\\'\")\n            .replace(/\\\\\"/g, '\\\\\"')\n            .replace(/\\\\&/g, \"\\\\&\")\n            .replace(/\\\\r/g, \"\\\\r\")\n            .replace(/\\\\t/g, \"\\\\t\")\n            .replace(/\\\\b/g, \"\\\\b\")\n            .replace(/\\\\f/g, \"\\\\f\");\n    }\n\n    //TODO:: parser header fail???\n    callParser = async () => {\n\n        const params = this.makeParserParams();\n        const str =\n            \"{\\\"confirm\\\":\\\"SAPModeNumber=*+>SAPEventSequence=*\\\",\\\"prefix\\\":\\\"*\\\\\\\"SAPRcvID\\\\\\\":-1015614763\\\\\\\"*\\\",\\\"raw\\\":\\\"{\\\\\\\"UserID\\\\\\\":\\\\\\\"미등록IP\\\\\\\",\\\\\\\"EmpName\\\\\\\":\\\\\\\"미등록IP\\\\\\\",\\\\\\\"DeptName\\\\\\\":\\\\\\\"회사\\\\\\\",\\\\\\\"SAPRcvID\\\\\\\":-1015614763,\\\\\\\"SAPRowNumber\\\\\\\":2143402056,\\\\\\\"SAPModeNumber\\\\\\\":3,\\\\\\\"SAPEventSequence\\\\\\\":2411,\\\\\\\"SAPTimeReceived\\\\\\\":1604448001000,\\\\\\\"SAPTimeRequest\\\\\\\":null,\\\\\\\"SAPTimeResponse\\\\\\\":null,\\\\\\\"SAPAccTimeReceived\\\\\\\":null,\\\\\\\"SAPAccTimeRequest\\\\\\\":null,\\\\\\\"SAPAccTimeResponse\\\\\\\":null,\\\\\\\"SAPDataType\\\\\\\":0,\\\\\\\"SAPOKCode\\\\\\\":null,\\\\\\\"SAPTransactionCode\\\\\\\":\\\\\\\"FB03\\\\\\\",\\\\\\\"SAPFuncName\\\\\\\":null,\\\\\\\"SAPDynproName\\\\\\\":\\\\\\\"SAPMF05L\\\\\\\",\\\\\\\"SAPTitleMain\\\\\\\":\\\\\\\"Display Document: Data Entry View\\\\\\\",\\\\\\\"SAPMessage\\\\\\\":\\\\\\\"Invoice document 5105671034 has been posted\\\\\\\",\\\\\\\"SAPPacketSize\\\\\\\":3588,\\\\\\\"SAPAlert\\\\\\\":0,\\\\\\\"SAPSessionGUID\\\\\\\":\\\\\\\"2AC41BC7-9CDB-472C-B2FF-2E4AE66ACFC5\\\\\\\",\\\\\\\"SAPLogType\\\\\\\":0,\\\\\\\"PolicyName\\\\\\\":null,\\\\\\\"PolicyRuleDesc\\\\\\\":null,\\\\\\\"DecideRequestTime\\\\\\\":null,\\\\\\\"DecideResponseTime\\\\\\\":null,\\\\\\\"DecideResponseType\\\\\\\":null,\\\\\\\"DecideOfficerUID\\\\\\\":null,\\\\\\\"AlertPolicyName\\\\\\\":null,\\\\\\\"AlertPolicyRuleDesc\\\\\\\":null,\\\\\\\"AbnormalDataDesc\\\\\\\":null,\\\\\\\"IsCaptured\\\\\\\":0,\\\\\\\"SAPClientIP\\\\\\\":\\\\\\\"10.88.7.210\\\\\\\",\\\\\\\"SAPClientPort\\\\\\\":60958,\\\\\\\"SAPServerIP\\\\\\\":\\\\\\\"168.154.28.74\\\\\\\",\\\\\\\"SAPServerPort\\\\\\\":3200,\\\\\\\"SAPSessTimeReceived\\\\\\\":1604448001000,\\\\\\\"SAPSessTimeLogin\\\\\\\":1604448000000,\\\\\\\"SAPSessAccTimeReceived\\\\\\\":1604448001150,\\\\\\\"SAPSessAccTimeLogin\\\\\\\":1604448000168,\\\\\\\"SAPUserID\\\\\\\":\\\\\\\"PE00024\\\\\\\",\\\\\\\"SAPClient\\\\\\\":\\\\\\\"900\\\\\\\",\\\\\\\"SAPUID\\\\\\\":\\\\\\\"uBBF8uB4F1uB85DIP\\\\\\\",\\\\\\\"SAPSessType\\\\\\\":24,\\\\\\\"eventId\\\\\\\":\\\\\\\"e2a11be9-6ff2-cbeb-30c3-1ffa1b75f173\\\\\\\"}\\\",\\\"r_type\\\":\\\"json\\\",\\\"tokenRule\\\":\\\"SAPTimeRequest\\\\tSAPTimeReceived\\\\tSAPSessTimeLogin\\\\tSAPClientIP\\\\tSAPClientPort\\\\tSAPServerIP\\\\tSAPServerPort\\\\tSAPTitleMain\\\\tSAPMessage\\\\tSAPPacketSize\\\\tAbnormalDataDesc\\\\tSAPUserID\\\\tEmpName\\\\tDeptName\\\\tAlertPolicyName\\\"}\"\n\n        apiProvider.parse(str).then((data)=>this.parseNew(data.parsed))\n    }\n\n    //after parse it\n    parseNew = (parsedData) => {\n        // const resultData = [{\"key\":\"SAPClientPort\",\"value\":\"60958\"},{\"key\":\"SAPTitleMain\",\"value\":\"Display Document: Data Entry View\"}]\n\n        this.setState((state)=>{\n            return {...state, editArrange: true, clickedData:{\n                    ...this.state.clickedData,\n                    arrange: parsedData\n                }}\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"normalization-rule\">\n                    <div className=\"rule-result\">\n\n                        <div className=\"nmlzrule-table-wrapper\">\n                            <div className=\"header-bar\">\n                                <span className=\"header__title\"> Live Detect Rule </span>\n                                <div className=\"binder\"/>\n                            </div>\n\n\n                            <div className=\"btns\">\n                                <button className=\"btn\" type=\"button\" onClick={this.handleAddVendor}>\n                                    Add\n                                </button>\n                                <button className=\"btn\" onClick={this.handleDelete}>\n                                    Delete\n                                </button>\n                                <button className=\"btn\" onClick={()=>this.setState({refre:true})}>\n                                    Refresh\n                                </button>\n\n                                <div className=\"seperate-bar-100\"/>\n\n                                <button className=\"btn\" onClick={this.handleSave}>\n                                    Save\n                                </button>\n\n                            </div>\n                            <div className=\"table-wrapper\">\n                                <div className=\"Fixed\">\n\n                                    <FormProvider\n                                        form=\"rules\"\n                                        onSubmit={this.handleSubmit}\n                                        onSubmitSuccess={() => {this.setState({editing: null})}}\n                                        initialValues={this.state.editing}\n                                        enableReinitialize\n                                    >\n                                        {(formProps) => {\n                                            return (\n                                                <form onSubmit={formProps.handleSubmit}>\n                                                    <Table\n                                                        getTdProps={(state, rowInfo, column) => ({\n                                                            onClick: () => (rowInfo !== undefined && !this.state.editing) ? this.handleClick(rowInfo.original) : undefined\n                                                        })}\n                                                        columns={this.state.columns}\n                                                        data={this.props.data.rules}\n                                                        pageSizeOptions={[5, 10, 500, 1000]}\n                                                        defaultPageSize={5}\n                                                        sorted={[{id: 'id'}]}\n                                                    />\n                                                </form>\n                                            );\n                                        }}\n                                    </FormProvider>\n                                </div>\n                            </div>\n\n                            {this.state.clickedData.ruleId !== \"\" && (\n\n                            <div className=\"nmlzrule-detail-area\">\n\n                                <FormProvider\n                                    form=\"ruleArrange\"\n                                    onSubmit={this.handleSubmit2}\n                                    onSubmitSuccess={(e) => {this.setState({editArrange: false}); this.props.reset(\"ruleArrange\")}}\n                                    initialValues={this.state.editing}\n                                    // enableReinitialize\n                                >\n                                    {(formProps) => {\n                                        const {handleSubmit} = formProps\n                                        return (\n\n                                            <form onSubmit={handleSubmit(this.handleSubmit2)}>\n\n                                                <div className=\"btns\">\n                                                    {/*<button className=\"btn\" onClick={(e)=>{e.preventDefault(); this.parseNew()}}>*/}\n                                                    {/*    Edit*/}\n                                                    {/*</button>*/}\n                                                    <button className=\"btn\" onClick={(e)=>{e.preventDefault(); this.handleArrangeCancel()}}>\n                                                        Cancel\n                                                    </button>\n                                                    { this.state.editArrange &&\n                                                        <button className=\"btn\" type=\"submit\">\n                                                        Save\n                                                    </button>}\n\n                                                </div>\n\n\n                                                <div className=\"form-group\">\n                                                    <span className=\"sub-stit\">Sample log</span>\n                                                    <textarea\n                                                        className=\"nmlz-rule-textarea\"\n                                                        value={this.state.clickedData.sample}\n                                                        onChange={e=>{\n                                                            const {value} = e.target;\n                                                            this.setState((state)=>{\n                                                                return {...state, clickedData: {\n                                                                        ...this.state.clickedData,\n                                                                        sample: value\n                                                                    }}\n                                                            })\n                                                        }}\n\n                                                    />\n                                                </div>\n                                                <div className=\"form-group pdr15\">\n                                                    <span className=\"sub-stit\"> Tokenize rule </span>\n                                                    <textarea\n                                                        className=\"nmlz-rule-textarea\"\n                                                        value={this.state.clickedData.rule}\n                                                        onChange={e=>{\n                                                            const {value} = e.target;\n                                                            this.setState((state)=>{\n                                                                return {...state, clickedData: {\n                                                                        ...this.state.clickedData,\n                                                                        rule: value\n                                                                    }}\n                                                            })\n                                                        }}\n                                                    />\n                                                </div>\n\n                                                {<div style={{\n                                                    textAlign: \"center\",\n                                                    height: \"60px\",\n                                                    padding: \"10px 0\",\n                                                }}>\n                                                    <button\n                                                        className=\"btn nmlz-parse-btn\"\n                                                        type=\"button\"\n                                                        onClick={()=>this.callParser()}\n                                                    >Try parse\n                                                    </button>\n                                                </div>}\n\n                                                <Table\n                                                    columns={[\n                                                        {Header: \"Key\", accessor: \"data.key\"},\n                                                        {Header: \"Value\", accessor: \"data.value\"},\n                                                        {Header: \"Fields\", accessor: \"data.field\", ...this.editableAllColumnProps},\n                                                        {Header: \"Default\", accessor: \"data.def\", ...this.editableAllColumnProps},\n                                                        {Header: \"Extractor\", accessor: \"data.ext\", ...this.editableAllColumnProps},\n                                                    ]}\n                                                    data={this.state.clickedData.arrange.slice().map((item, index)=>{\n                                                        const ob = {}\n                                                        ob[\"idx\"] = index\n                                                        ob[\"data\"] = item\n                                                        return ob\n                                                    })}\n                                                    defaultPageSize={5}\n\n                                                />\n\n\n                                            </form>\n                                        )\n                                    }}\n                                </FormProvider>\n                            </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n}\nexport default connect(\n    state => ({\n        originalData: state.fetchAPI.data,\n        data: state.SlidePop.clickedData,\n\n        refre: state.fetchAPI.refre,\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                addTmp: addTmp,\n                revRe: revRe,\n                delTmp: deleteTmp,\n                clickedOp: clickedOpt,\n                reset : reset\n            },\n            dispatch\n        )\n    }\n)(NormalizeRuleDetailTable)","/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableNormal.js",["858","859","860","861","862","863","864","865","866","867","868","869","870","871"],"import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport {Field} from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport {avatarColumnProps} from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport 'react-table/react-table.css';\nimport {\n    addedField, addSave,\n    currEd, dataSave,\n    deleteTmp, delSave, editSave, editZero, getAllHN,\n    getAllR,\n    hisFlag,\n    keyFieldSelect,\n    openSelectKeyFieldPop, selectHead\n} from \"../../services/Redux/actions\";\nimport {bindActionCreators} from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\nimport _, {debounce} from \"lodash\"\nimport {TransferWithinAStation} from \"@material-ui/icons\";\n\n\n//TODO:: 이 테이블들.. 나중에 합칠거임.\nclass GridTableNormal extends React.Component {\n    state = {\n        editing: null,\n        selected: {},\n        selectAll: 0,\n        adding: false,\n        columns: [], //이걸 store로 저장할까?\n        selectEdit: false,\n        willRemoved: [],\n        temps: false,\n        pages: null,\n        pagesH: null,\n        loading: true,\n        sorted: [],\n        totalRows: 0,\n        tableProps: {}\n    };\n\n    selectList = {\n        typeList: [\"String\", \"Numeric\", \"IP\"],\n        groupList: [\"Required\", \"Additional\"]\n    }\n\n    //TODO:: Livedetectrule 처럼 필드가 유동적이진 않아서 이렇게 안해도됨. 고쳐야할 것\n    resetColumn = () => {\n        this.setState((state) => {\n            return {\n                ...state, columns:\n                    [{\n                        columns: [\n                            {\n                                id: \"checkbox\",\n                                accessor: \"\",\n                                Cell: ({original}) => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selected[original.id] === true}\n                                            onChange={() => this.toggleRow(original.id)}\n                                        />\n                                    );\n                                },\n                                Header: x => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selectAll === 1}\n                                            ref={input => {\n                                                if (input) {\n                                                    input.indeterminate = this.state.selectAll === 2;\n                                                }\n                                            }}\n                                            onChange={() => this.toggleSelectAll()}\n                                        />\n                                    );\n                                },\n                                sortable: false,\n                                width: 45\n                            },\n                        ]\n                    }].concat(\n                        this.props.columns.slice().map((item) => {\n                            console.log(item)\n                            return item.accessor !== \"vendors\" ? {...item, ...this.editableColumnProps} : {...item}\n                        })\n                    )\n                        .concat(\n                            {\n                                Header: \"\",\n                                maxWidth: 90,\n                                filterable: false,\n                                getProps: this.getActionProps,\n                                Cell: ActionsCell,\n                                show: true\n                            }\n                        )\n            }\n        })\n    }\n    getSelect = (type, curr) => {\n        const v = this.selectList[type].filter(i => i !== curr)\n        return v\n    }\n\n    componentDidMount() {\n\n        apiProvider.getRowCounts(\"normalizerule\").then((res) => {\n            this.setState({totalRows: res});\n        })\n        this.resetColumn()\n        // this.props.handleData()\n    }\n\n    adjustColumn = (flag) => {\n        const last = this.state.columns[this.state.columns.length - 1]\n        const tmp = this.state.columns.slice().splice(0, this.state.columns.length - 1)\n        last.show = flag\n        this.setState({\n            columns: [\n                ...tmp,\n                last\n            ]\n        })\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const restore = (prevProps.edited !== this.props.edited)\n        const cond = (prevProps.refre !== this.props.refre)\n        const temp = (prevProps.temps !== this.state.temps)\n        if (this.props.edited !== 0 && restore) {\n            this.adjustColumn(false)\n        }\n        if (cond && this.props.refre && this.props.edited == 0) {\n            this.setState({editing: null})\n            console.log(this.state.columns)\n            this.adjustColumn(true)\n            // this.props.editZero()\n            // this.props.handleData()\n            // this.props.revRe(false)\n        }\n        if (temp && this.state.temps) {\n            apiProvider.setHistory().then(() => this.props.hisFlag(true))\n            this.setState({temps: false})\n\n        }\n    }\n\n    selectableComponent = ({input, editing, value, ...rest}) => {\n        //TODO:: 이부분이 셀 filtering 하는 부분 인가?\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'select' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || <React.Fragment>\n                <option>{value}</option>\n                {this.getSelect(\"typeList\", value).map(\n                    (item, index) => (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                )}\n            </React.Fragment>;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n\n    editableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    isSelectField = (col) => [\"type\", \"group\"].indexOf(col) !== -1\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(this.props.data.length)\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) {\n        console.log(id) //이게 string\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n        console.log(this.state.selected)\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        console.log(this.state.selected)\n        if (this.state.selectAll === 0) {\n            this.props.data.forEach(x => {\n                newSelected[x.id] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    handleSubmit = (values) => {\n        //TODO:: 여기서 added id들 뺴고 나머지 edited id에 넣기.  그리고 added id 에 있는데 this.props.data에 없으면 지우기(add햇다가 취소하거나 완료하고 지운거임)- 이건 페이지 넘어가기 바로 직전에 확인하는 과정에서.\n        !this.props.addId.indexOf(values.id) && this.props.editSave([values.id, ...this.props.editId])\n\n        this.props.dataSave([values, ...this.props.savedData]) //만약 arrange rules 필드가 있으면 얘도 들어가있나? 있겠지?\n        //이렇게 한다음에 페이징할때마다 262라인처럼 하면 되려나\n\n        this.setState((state) => {\n            this.props.addTmp(this.props.data.map((item) => {\n                return item.id === values.id ? values : item\n            }))\n\n            return state.adding ? {...state, adding: false} : {...state}\n\n        });\n    };\n\n    async handleSaveAfterDelete() {\n        return await Promise.all(this.props.data.map((item) =>\n            item.hasOwnProperty(\"rules\") ? this.props.handleAddTotal(item) : this.props.handleAdd(item)\n        ))\n    }\n\n    handleSave = () => {\n\n        this.state.willRemoved.length && this.state.willRemoved.forEach((id) => {\n            apiProvider.delNormal(\"normalizerule\", parseInt(id)).then(() => this.setState({willRemoved: []}))\n        })\n        this.handleSaveAfterDelete().then(() => this.setState({temps: true}))\n\n        this.adjustColumn(true)\n\n    }\n\n    handleDelete = () => {\n        Object.keys(this.state.selected).forEach((i) => {\n            this.props.delTmp(i);\n            this.props.delSave([i, ...this.props.delId])\n        })\n        this.setState((state) => {\n            return {\n                ...state,\n                selected: {},\n                willRemoved: [...Object.keys(this.state.selected), ...this.state.willRemoved]\n            }\n        })\n    }\n\n    handleAdd = () => {\n        const addTemp = this.state.columns.slice()\n        addTemp.splice(-1, 1)\n        addTemp.splice(0, 1)\n        const tp = {};\n        addTemp.forEach(({accessor}) => {\n            tp[accessor] = \"\"\n        })\n        tp[\"rules\"] = []\n        tp.id = Math.max(0, ...this.props.data.slice().map(v => v.id)) + 1 //TODO:: 아..페이징때문에 이것도 고쳐야한다. this.props.data max id로 잡아오면 안됨. db table에서 max id 가져오는 api 필요\n\n        this.setState((state) => {\n            return {...state, editing: tp, adding: true}\n        })\n        this.props.addTmp([tp, ...this.props.data])\n        this.props.addSave([tp.id, ...this.props.addId])\n    }\n\n\n    handleClickPopUp = (columnId, data) => {\n        this.props.handleRow(data) //id->classifier(PK)\n    }\n\n    sendWithQuery = (filtered, offset, limit, pageSize) => {\n        const ob = {}\n        filtered.forEach(({id, value}) => {\n            ob[id] = value\n        })\n        const obj = {\n            offset: offset,\n            limit: limit,\n            filters: ob\n        }\n        //TODO:: for filtered 이거 async 라 추후 초치 필요할듯\n        apiProvider.getFiltersCounts(\"normalizerule\",obj).then((res) => this.setState({totalRows: res}))\n        //TODO:: debounce it\n        this.props.getDataFilter(obj).then((res) => {\n            this.setState({loading: false, pages: Math.ceil(this.state.totalRows / pageSize)})\n        })\n    }\n\n    fetchData = (state, instance) => {\n        apiProvider.getRowCounts(\"normalizerule\").then((res) => this.setState({totalRows: res})) //TODO::이거 동기 맞춰야함.\n        this.setState({loading: true})\n        const offset = state.page * state.pageSize\n        console.log(state.page)\n        const limit = state.pageSize\n\n        state.filtered.length ? (\n            this.sendWithQuery(state.filtered, offset, limit, state.pageSize)\n        ) : (\n            this.props.getData(offset, limit).then((res) => {\n                this.setState({loading: false, pages: Math.ceil(this.state.totalRows / state.pageSize)})\n            }))\n    }\n\n    render() {\n\n        const tableProps = this.props.edited == 0 ? {\n            manual: true,\n            pages: this.state.pages,\n            onFetchData: this.fetchData\n        } : {\n            manual: false\n        }\n\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                    <button className=\"btn\" onClick={this.handleAdd} disabled={this.props.edited !== 0}>\n                        Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleDelete} disabled={this.props.edited !== 0}>\n                        Delete\n                    </button>\n                    <button className=\"btn\" onClick={() => {\n                        this.props.editZero();\n                        this.props.revRe(true);\n                    }}>\n                        Refresh\n                    </button>\n\n                    <div className=\"seperate-bar-100\"/>\n\n                    <button className=\"btn\" onClick={this.handleSave}>\n                        Save\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.openPop(true)} disabled={this.props.edited !== 0}>\n                        배포\n                    </button>\n                </div>\n                <div className=\"table-wrapper\">\n                    <div className=\"Fixed\">\n\n                        <FormProvider\n                            form=\"inline\"\n                            onSubmit={this.handleSubmit}\n                            onSubmitSuccess={() => this.setState({editing: null})}\n                            initialValues={this.state.editing}\n                            enableReinitialize\n                        >\n                            {(formProps) => {\n                                return (\n                                    <form onSubmit={formProps.handleSubmit}>\n                                        <Table\n                                            key={this.props.edited}\n\n                                            getTdProps={(state, rowInfo, column) => ({\n                                                onClick: () => !this.state.editing ? this.handleClickPopUp(column.id, rowInfo.original) : undefined //TODO::nullcheck 편집중에 다른 행 만지면 클남..\n                                            })}\n                                            columns={\n                                                this.state.columns\n                                            }\n                                            {...tableProps}\n                                            defaultPageSize={2}\n                                            data={this.props.data}\n                                            // filterable\n                                            // onFilteredChange={(onFilterChange)=>debounce(onFilterChange, 1000)}\n                                            sorted={[{id: 'id'}]}\n                                        />\n                                        {this.props.selectKPop && <SelectKeyFieldPopup></SelectKeyFieldPopup>}\n                                        {this.props.selectCPop && <SelectConfirmsPopup></SelectConfirmsPopup>}\n\n                                    </form>\n                                );\n                            }}\n                        </FormProvider>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        version: state.fetchAPI.headVersion,\n        selectKPop: state.fetchAPI.openKeyField,\n        selectCPop: state.fetchAPI.openConField,\n        kfOb: state.fetchAPI.keyField,\n        data: state.fetchAPI.data,\n        refre: state.fetchAPI.refre,\n        add: state.fetchAPI.ad,\n        hflag: state.fetchAPI.hflag,\n        newField: state.fetchAPI.addedField,\n        edited: state.fetchAPI.edited,\n\n        addId: state.editOperator.addId,\n        delId: state.editOperator.delId,\n        editId: state.editOperator.editId,\n        savedData: state.editOperator.savedData\n\n\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                getData: apiProvider.getNormalizeRule,\n                getDataFilter: apiProvider.getNormalizeRuleFilter,\n                setKfOb: keyFieldSelect,\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                addedField: addedField,\n                setHead: selectHead,\n                getAllHN: getAllHN,\n                editZero: editZero,\n\n                addSave: addSave,\n                delSave: delSave,\n                editSave: editSave,\n                dataSave: dataSave\n\n            },\n            dispatch\n        )\n    }\n)(GridTableNormal)","/home/leesohyang/WebstormProjects/fronted_react_final/src/services/Redux/reducers/editOperator.js",[],"/home/leesohyang/WebstormProjects/tmp/src/index.js",[],"/home/leesohyang/WebstormProjects/tmp/src/client/Root.js",[],"/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/index.js",[],"/home/leesohyang/WebstormProjects/tmp/src/shared/App.js",["872","873","874","875","876","877"],"/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/slidePop.js",[],"/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/editOperator.js",[],"/home/leesohyang/WebstormProjects/tmp/src/services/Redux/reducers/fetchAPI.js",["878"],"/home/leesohyang/WebstormProjects/tmp/src/components/main/Navigator.js",["879","880","881","882","883","884","885","886","887","888","889","890","891","892"],"/home/leesohyang/WebstormProjects/tmp/src/components/main/MainAppBar.js",["893","894","895","896"],"/home/leesohyang/WebstormProjects/tmp/src/components/main/MainContents.js",["897","898","899","900","901"],"/home/leesohyang/WebstormProjects/tmp/src/pages/index.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/BreadcrumbNameMap.js",[],"/home/leesohyang/WebstormProjects/tmp/src/pages/Device/LiveDetectRule.js",["902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"/home/leesohyang/WebstormProjects/tmp/src/services/Provider.js",["917","918","919","920","921","922","923","924","925","926","927","928"],"/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectFieldPopup.js",["929","930","931","932","933","934","935","936"],"/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectConfirmsPopup.js",["937","938","939","940","941","942","943","944","945","946","947","948","949","950"],"/home/leesohyang/WebstormProjects/tmp/src/components/table/FormProvider.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/table/gridTableH.js",["951","952","953","954","955","956","957","958","959","960","961","962","963","964","965"],"/home/leesohyang/WebstormProjects/tmp/src/components/popup/ReleasePopup.js",["966","967","968","969","970","971","972"],"/home/leesohyang/WebstormProjects/tmp/src/services/Redux/actions/index.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/Input.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/table/HighlightCell.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/table/GridFilters.js",["973"],"/home/leesohyang/WebstormProjects/tmp/src/components/popup/SelectKeyFieldPopup.js",["974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989"],"/home/leesohyang/WebstormProjects/tmp/src/components/table/Pagination.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/table/ActionsCell.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/Select.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/Controls.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/util/utils.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/MultiSelect.js",["990"],"/home/leesohyang/WebstormProjects/tmp/src/components/table/AvatarCell.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/table/dataFactory.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/popup/SavePopup.js",["991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006"],"/home/leesohyang/WebstormProjects/tmp/src/components/table/gridTableLDR.js",["1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019"],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/ActionButton.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/Button.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/Checkbox.js",[],"/home/leesohyang/WebstormProjects/tmp/src/components/controls/RadioGroup.js",[],{"ruleId":"1020","replacedBy":"1021"},{"ruleId":"1022","replacedBy":"1023"},{"ruleId":"1024","severity":1,"message":"1025","line":1,"column":17,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1028","line":2,"column":24,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1029","line":3,"column":10,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1030","line":3,"column":16,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1031","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1032","line":7,"column":9,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1033","severity":1,"message":"1034","line":157,"column":29,"nodeType":"1035","messageId":"1036","endLine":157,"endColumn":31},{"ruleId":"1024","severity":1,"message":"1037","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1038","line":2,"column":17,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1039","line":2,"column":37,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":44},{"ruleId":"1024","severity":1,"message":"1040","line":27,"column":11,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1041","line":5,"column":9,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1040","line":14,"column":11,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1042","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1032","line":2,"column":18,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1043","line":2,"column":30,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":40},{"ruleId":"1024","severity":1,"message":"1044","line":3,"column":8,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1045","line":4,"column":8,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1046","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1047","line":6,"column":8,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1048","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1049","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1050","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1051","line":11,"column":9,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1052","line":16,"column":10,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1053","line":49,"column":12,"nodeType":"1026","messageId":"1027","endLine":49,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1054","line":53,"column":11,"nodeType":"1026","messageId":"1027","endLine":53,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1032","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1057","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1058","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1059","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1060","line":12,"column":5,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1061","line":13,"column":5,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1062","line":14,"column":5,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1063","line":14,"column":28,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":49},{"ruleId":"1024","severity":1,"message":"1064","line":14,"column":51,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":62},{"ruleId":"1024","severity":1,"message":"1065","line":14,"column":64,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":76},{"ruleId":"1024","severity":1,"message":"1066","line":16,"column":8,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1067","line":17,"column":8,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1068","line":20,"column":8,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1069","line":21,"column":8,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1070","line":22,"column":8,"nodeType":"1026","messageId":"1027","endLine":22,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1071","line":23,"column":8,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1072","line":25,"column":8,"nodeType":"1026","messageId":"1027","endLine":25,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1073","line":28,"column":8,"nodeType":"1026","messageId":"1027","endLine":28,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1074","line":29,"column":8,"nodeType":"1026","messageId":"1027","endLine":29,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1075","line":30,"column":8,"nodeType":"1026","messageId":"1027","endLine":30,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1076","line":38,"column":11,"nodeType":"1026","messageId":"1027","endLine":38,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1072","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1077","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1057","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1078","line":9,"column":23,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1079","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1080","line":29,"column":11,"nodeType":"1026","messageId":"1027","endLine":29,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1081","line":30,"column":11,"nodeType":"1026","messageId":"1027","endLine":30,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1082","line":31,"column":11,"nodeType":"1026","messageId":"1027","endLine":31,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1083","line":32,"column":11,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1084","line":33,"column":11,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1085","line":38,"column":19,"nodeType":"1026","messageId":"1027","endLine":38,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1087","line":47,"column":8,"nodeType":"1088","endLine":47,"endColumn":10,"suggestions":"1089"},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1090","line":4,"column":8,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1077","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1078","line":11,"column":23,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1092","line":11,"column":30,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":39},{"ruleId":"1024","severity":1,"message":"1060","line":11,"column":51,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":58},{"ruleId":"1024","severity":1,"message":"1093","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1068","line":17,"column":8,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1080","line":34,"column":11,"nodeType":"1026","messageId":"1027","endLine":34,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1081","line":35,"column":11,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1082","line":36,"column":11,"nodeType":"1026","messageId":"1027","endLine":36,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1094","line":38,"column":11,"nodeType":"1026","messageId":"1027","endLine":38,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1083","line":39,"column":11,"nodeType":"1026","messageId":"1027","endLine":39,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1084","line":40,"column":11,"nodeType":"1026","messageId":"1027","endLine":40,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1095","line":42,"column":12,"nodeType":"1026","messageId":"1027","endLine":42,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1053","line":43,"column":12,"nodeType":"1026","messageId":"1027","endLine":43,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1054","line":45,"column":11,"nodeType":"1026","messageId":"1027","endLine":45,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1096","line":49,"column":11,"nodeType":"1026","messageId":"1027","endLine":49,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1097","line":53,"column":11,"nodeType":"1026","messageId":"1027","endLine":53,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1098","line":59,"column":11,"nodeType":"1026","messageId":"1027","endLine":59,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1099","line":75,"column":8,"nodeType":"1088","endLine":75,"endColumn":10,"suggestions":"1100"},{"ruleId":"1024","severity":1,"message":"1040","line":77,"column":11,"nodeType":"1026","messageId":"1027","endLine":77,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1101","line":107,"column":11,"nodeType":"1026","messageId":"1027","endLine":107,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1057","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1078","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1092","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1059","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1060","line":12,"column":5,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1067","line":17,"column":8,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1069","line":20,"column":8,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1072","line":24,"column":8,"nodeType":"1026","messageId":"1027","endLine":24,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1102","line":26,"column":7,"nodeType":"1026","messageId":"1027","endLine":26,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1103","line":43,"column":11,"nodeType":"1026","messageId":"1027","endLine":43,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1104","line":44,"column":12,"nodeType":"1026","messageId":"1027","endLine":44,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1105","line":44,"column":20,"nodeType":"1026","messageId":"1027","endLine":44,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1106","line":46,"column":11,"nodeType":"1026","messageId":"1027","endLine":46,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1087","line":58,"column":8,"nodeType":"1088","endLine":58,"endColumn":10,"suggestions":"1107"},{"ruleId":"1024","severity":1,"message":"1108","line":2,"column":10,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1109","line":3,"column":9,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1110","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1111","line":6,"column":8,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1043","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1077","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1112","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1079","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1113","line":34,"column":11,"nodeType":"1026","messageId":"1027","endLine":34,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1040","line":35,"column":11,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1114","line":50,"column":11,"nodeType":"1026","messageId":"1027","endLine":50,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1115","line":62,"column":12,"nodeType":"1026","endLine":62,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":62,"column":12,"nodeType":"1026","endLine":62,"endColumn":15,"suggestions":"1117"},{"ruleId":"1024","severity":1,"message":"1108","line":2,"column":10,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1109","line":3,"column":9,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1110","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1111","line":6,"column":8,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1043","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1077","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1112","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1057","line":13,"column":20,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1040","line":32,"column":11,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1118","line":33,"column":11,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1119","line":35,"column":12,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1120","line":35,"column":25,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":39},{"ruleId":"1024","severity":1,"message":"1121","line":36,"column":12,"nodeType":"1026","messageId":"1027","endLine":36,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1122","line":36,"column":21,"nodeType":"1026","messageId":"1027","endLine":36,"endColumn":31},{"ruleId":"1024","severity":1,"message":"1123","line":37,"column":12,"nodeType":"1026","messageId":"1027","endLine":37,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1124","line":37,"column":20,"nodeType":"1026","messageId":"1027","endLine":37,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1114","line":51,"column":11,"nodeType":"1026","messageId":"1027","endLine":51,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1125","line":52,"column":11,"nodeType":"1026","messageId":"1027","endLine":52,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1115","line":83,"column":12,"nodeType":"1026","endLine":83,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":83,"column":12,"nodeType":"1026","endLine":83,"endColumn":15,"suggestions":"1126"},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1127","line":1,"column":37,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":41},{"ruleId":"1024","severity":1,"message":"1065","line":20,"column":9,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1092","line":20,"column":23,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1128","line":20,"column":34,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":43},{"ruleId":"1024","severity":1,"message":"1129","line":23,"column":8,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1130","line":83,"column":19,"nodeType":"1026","messageId":"1027","endLine":83,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1083","line":84,"column":11,"nodeType":"1026","messageId":"1027","endLine":84,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1131","line":93,"column":16,"nodeType":"1026","messageId":"1027","endLine":93,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1132","line":102,"column":39,"nodeType":"1026","messageId":"1027","endLine":102,"endColumn":44},{"ruleId":"1086","severity":1,"message":"1133","line":118,"column":8,"nodeType":"1088","endLine":118,"endColumn":28,"suggestions":"1134"},{"ruleId":"1024","severity":1,"message":"1135","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1058","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1136","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1137","line":14,"column":9,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1138","line":17,"column":7,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1139","line":166,"column":19,"nodeType":"1026","messageId":"1027","endLine":166,"endColumn":22},{"ruleId":"1140","severity":1,"message":"1141","line":245,"column":51,"nodeType":"1035","messageId":"1142","endLine":245,"endColumn":52},{"ruleId":"1140","severity":1,"message":"1141","line":245,"column":67,"nodeType":"1035","messageId":"1142","endLine":245,"endColumn":68},{"ruleId":"1140","severity":1,"message":"1141","line":254,"column":52,"nodeType":"1035","messageId":"1142","endLine":254,"endColumn":53},{"ruleId":"1140","severity":1,"message":"1141","line":254,"column":62,"nodeType":"1035","messageId":"1142","endLine":254,"endColumn":63},{"ruleId":"1140","severity":1,"message":"1141","line":277,"column":52,"nodeType":"1035","messageId":"1142","endLine":277,"endColumn":53},{"ruleId":"1140","severity":1,"message":"1141","line":277,"column":62,"nodeType":"1035","messageId":"1142","endLine":277,"endColumn":63},{"ruleId":"1024","severity":1,"message":"1025","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":27,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":35},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":37,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":43},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":45,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":54},{"ruleId":"1024","severity":1,"message":"1144","line":2,"column":10,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1145","line":7,"column":21,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":31},{"ruleId":"1024","severity":1,"message":"1037","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1146","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1147","line":13,"column":8,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1090","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1148","line":16,"column":9,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1149","line":17,"column":8,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1150","line":18,"column":8,"nodeType":"1026","messageId":"1027","endLine":18,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1077","line":19,"column":8,"nodeType":"1026","messageId":"1027","endLine":19,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1151","line":23,"column":8,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1091","line":24,"column":8,"nodeType":"1026","messageId":"1027","endLine":24,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1079","line":25,"column":8,"nodeType":"1026","messageId":"1027","endLine":25,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1152","line":26,"column":8,"nodeType":"1026","messageId":"1027","endLine":26,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1067","line":27,"column":8,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1153","line":55,"column":10,"nodeType":"1026","messageId":"1027","endLine":55,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1154","line":75,"column":12,"nodeType":"1026","messageId":"1027","endLine":75,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1155","line":76,"column":12,"nodeType":"1026","messageId":"1027","endLine":76,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1156","line":77,"column":11,"nodeType":"1026","messageId":"1027","endLine":77,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1040","line":93,"column":11,"nodeType":"1026","messageId":"1027","endLine":93,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1157","line":95,"column":11,"nodeType":"1026","messageId":"1027","endLine":95,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1158","line":98,"column":11,"nodeType":"1026","messageId":"1027","endLine":98,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1160","line":3,"column":10,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1073","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":10,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1164","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1165","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1166","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1060","line":17,"column":38,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":45},{"ruleId":"1024","severity":1,"message":"1169","line":20,"column":8,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1170","line":32,"column":15,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":18},{"ruleId":"1033","severity":1,"message":"1171","line":66,"column":49,"nodeType":"1035","messageId":"1036","endLine":66,"endColumn":51},{"ruleId":"1024","severity":1,"message":"1172","line":95,"column":23,"nodeType":"1026","messageId":"1027","endLine":95,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1062","line":23,"column":5,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1169","line":27,"column":8,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":18},{"ruleId":"1033","severity":1,"message":"1171","line":137,"column":59,"nodeType":"1035","messageId":"1036","endLine":137,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1034","line":275,"column":49,"nodeType":"1035","messageId":"1036","endLine":275,"endColumn":51},{"ruleId":"1033","severity":1,"message":"1171","line":278,"column":32,"nodeType":"1035","messageId":"1036","endLine":278,"endColumn":34},{"ruleId":"1033","severity":1,"message":"1034","line":283,"column":57,"nodeType":"1035","messageId":"1036","endLine":283,"endColumn":59},{"ruleId":"1033","severity":1,"message":"1171","line":286,"column":33,"nodeType":"1035","messageId":"1036","endLine":286,"endColumn":35},{"ruleId":"1033","severity":1,"message":"1171","line":332,"column":61,"nodeType":"1035","messageId":"1036","endLine":332,"endColumn":63},{"ruleId":"1033","severity":1,"message":"1034","line":349,"column":31,"nodeType":"1035","messageId":"1036","endLine":349,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":408,"column":39,"nodeType":"1035","messageId":"1036","endLine":408,"endColumn":41},{"ruleId":"1033","severity":1,"message":"1171","line":475,"column":33,"nodeType":"1035","messageId":"1036","endLine":475,"endColumn":35},{"ruleId":"1033","severity":1,"message":"1171","line":488,"column":69,"nodeType":"1035","messageId":"1036","endLine":488,"endColumn":71},{"ruleId":"1173","severity":1,"message":"1174","line":493,"column":30,"nodeType":"1175","messageId":"1176","endLine":493,"endColumn":36},{"ruleId":"1173","severity":1,"message":"1174","line":498,"column":51,"nodeType":"1177","messageId":"1178","endLine":498,"endColumn":53},{"ruleId":"1033","severity":1,"message":"1171","line":522,"column":66,"nodeType":"1035","messageId":"1036","endLine":522,"endColumn":68},{"ruleId":"1033","severity":1,"message":"1171","line":525,"column":79,"nodeType":"1035","messageId":"1036","endLine":525,"endColumn":81},{"ruleId":"1033","severity":1,"message":"1171","line":528,"column":76,"nodeType":"1035","messageId":"1036","endLine":528,"endColumn":78},{"ruleId":"1033","severity":1,"message":"1171","line":542,"column":46,"nodeType":"1035","messageId":"1036","endLine":542,"endColumn":48},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1167","line":3,"column":22,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":33},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1063","line":8,"column":27,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":48},{"ruleId":"1024","severity":1,"message":"1062","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1160","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1186","line":13,"column":16,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1074","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":6,"column":10,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1167","line":7,"column":22,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":33},{"ruleId":"1024","severity":1,"message":"1059","line":8,"column":21,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1182","line":8,"column":31,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":38},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":40,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1185","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1187","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1186","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1188","line":13,"column":39,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1189","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1113","line":21,"column":11,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1190","line":23,"column":12,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1191","line":23,"column":23,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":35},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1060","line":21,"column":5,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1062","line":24,"column":5,"nodeType":"1026","messageId":"1027","endLine":24,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1169","line":28,"column":8,"nodeType":"1026","messageId":"1027","endLine":28,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1069","line":31,"column":8,"nodeType":"1026","messageId":"1027","endLine":31,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1182","line":8,"column":19,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1187","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1113","line":16,"column":11,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1192","line":17,"column":11,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1193","line":3,"column":18,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1102","line":15,"column":7,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1085","line":42,"column":19,"nodeType":"1026","messageId":"1027","endLine":42,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1194","line":64,"column":9,"nodeType":"1026","messageId":"1027","endLine":64,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1195","line":66,"column":9,"nodeType":"1026","messageId":"1027","endLine":66,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1196","line":68,"column":9,"nodeType":"1026","messageId":"1027","endLine":68,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1115","line":87,"column":12,"nodeType":"1026","endLine":87,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":87,"column":12,"nodeType":"1026","endLine":87,"endColumn":15,"suggestions":"1197"},{"ruleId":"1024","severity":1,"message":"1038","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1198","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1060","line":15,"column":9,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1058","line":15,"column":18,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1078","line":17,"column":9,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1092","line":17,"column":16,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1199","line":43,"column":11,"nodeType":"1026","messageId":"1027","endLine":43,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1115","line":63,"column":12,"nodeType":"1026","endLine":63,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":63,"column":12,"nodeType":"1026","endLine":63,"endColumn":15,"suggestions":"1200"},{"ruleId":"1024","severity":1,"message":"1201","line":151,"column":11,"nodeType":"1026","messageId":"1027","endLine":151,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1202","line":155,"column":12,"nodeType":"1026","messageId":"1027","endLine":155,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1203","line":155,"column":19,"nodeType":"1026","messageId":"1027","endLine":155,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1204","line":155,"column":28,"nodeType":"1026","messageId":"1027","endLine":155,"endColumn":37},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1072","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1090","line":4,"column":8,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1091","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1077","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1057","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1078","line":12,"column":23,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1092","line":12,"column":30,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":39},{"ruleId":"1024","severity":1,"message":"1059","line":12,"column":41,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":49},{"ruleId":"1024","severity":1,"message":"1151","line":13,"column":8,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1205","line":17,"column":8,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1081","line":35,"column":11,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1082","line":36,"column":11,"nodeType":"1026","messageId":"1027","endLine":36,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1083","line":37,"column":11,"nodeType":"1026","messageId":"1027","endLine":37,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1206","line":43,"column":12,"nodeType":"1026","messageId":"1027","endLine":43,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1085","line":43,"column":19,"nodeType":"1026","messageId":"1027","endLine":43,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1040","line":48,"column":11,"nodeType":"1026","messageId":"1027","endLine":48,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1207","line":81,"column":11,"nodeType":"1026","messageId":"1027","endLine":81,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1208","line":105,"column":8,"nodeType":"1088","endLine":105,"endColumn":18,"suggestions":"1209"},{"ruleId":"1210","severity":1,"message":"1211","line":16,"column":1,"nodeType":"1212","endLine":21,"endColumn":3},{"ruleId":"1086","severity":1,"message":"1087","line":71,"column":8,"nodeType":"1088","endLine":71,"endColumn":10,"suggestions":"1213"},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1062","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1160","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1190","line":23,"column":12,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1191","line":23,"column":23,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":35},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1127","line":1,"column":37,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":41},{"ruleId":"1024","severity":1,"message":"1065","line":20,"column":9,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1092","line":20,"column":23,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1130","line":82,"column":19,"nodeType":"1026","messageId":"1027","endLine":82,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1083","line":83,"column":11,"nodeType":"1026","messageId":"1027","endLine":83,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1131","line":92,"column":16,"nodeType":"1026","messageId":"1027","endLine":92,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1132","line":101,"column":39,"nodeType":"1026","messageId":"1027","endLine":101,"endColumn":44},{"ruleId":"1086","severity":1,"message":"1133","line":117,"column":8,"nodeType":"1088","endLine":117,"endColumn":28,"suggestions":"1214"},{"ruleId":"1024","severity":1,"message":"1215","line":1,"column":8,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1216","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1108","line":7,"column":18,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1110","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1217","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1218","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1044","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1219","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":31},{"ruleId":"1024","severity":1,"message":"1220","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1221","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1222","line":18,"column":8,"nodeType":"1026","messageId":"1027","endLine":18,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1223","line":19,"column":9,"nodeType":"1026","messageId":"1027","endLine":19,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1224","line":19,"column":16,"nodeType":"1026","messageId":"1027","endLine":19,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1225","line":19,"column":31,"nodeType":"1026","messageId":"1027","endLine":19,"endColumn":38},{"ruleId":"1024","severity":1,"message":"1077","line":21,"column":8,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1059","line":22,"column":9,"nodeType":"1026","messageId":"1027","endLine":22,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1112","line":23,"column":8,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1226","line":25,"column":8,"nodeType":"1026","messageId":"1027","endLine":25,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1227","line":26,"column":8,"nodeType":"1026","messageId":"1027","endLine":26,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1066","line":27,"column":8,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1193","line":29,"column":9,"nodeType":"1026","messageId":"1027","endLine":29,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1053","line":74,"column":12,"nodeType":"1026","messageId":"1027","endLine":74,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1228","line":79,"column":11,"nodeType":"1026","messageId":"1027","endLine":79,"endColumn":51},{"ruleId":"1086","severity":1,"message":"1115","line":97,"column":12,"nodeType":"1026","endLine":97,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":97,"column":12,"nodeType":"1026","endLine":97,"endColumn":15,"suggestions":"1229"},{"ruleId":"1086","severity":1,"message":"1230","line":105,"column":8,"nodeType":"1088","endLine":105,"endColumn":35,"suggestions":"1231"},{"ruleId":"1024","severity":1,"message":"1040","line":26,"column":11,"nodeType":"1026","messageId":"1027","endLine":26,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1232","line":32,"column":16,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":21},{"ruleId":"1033","severity":1,"message":"1034","line":32,"column":45,"nodeType":"1035","messageId":"1036","endLine":32,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1233","line":54,"column":9,"nodeType":"1026","messageId":"1027","endLine":54,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1195","line":55,"column":9,"nodeType":"1026","messageId":"1027","endLine":55,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1196","line":57,"column":9,"nodeType":"1026","messageId":"1027","endLine":57,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1115","line":89,"column":12,"nodeType":"1026","endLine":89,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":89,"column":12,"nodeType":"1026","endLine":89,"endColumn":15,"suggestions":"1234"},{"ruleId":"1086","severity":1,"message":"1235","line":101,"column":8,"nodeType":"1088","endLine":101,"endColumn":22,"suggestions":"1236"},{"ruleId":"1086","severity":1,"message":"1237","line":119,"column":8,"nodeType":"1088","endLine":119,"endColumn":27,"suggestions":"1238"},{"ruleId":"1173","severity":1,"message":"1239","line":135,"column":75,"nodeType":"1177","messageId":"1178","endLine":135,"endColumn":77},{"ruleId":"1140","severity":1,"message":"1141","line":146,"column":107,"nodeType":"1035","messageId":"1142","endLine":146,"endColumn":108},{"ruleId":"1033","severity":1,"message":"1171","line":165,"column":63,"nodeType":"1035","messageId":"1036","endLine":165,"endColumn":65},{"ruleId":"1033","severity":1,"message":"1171","line":171,"column":63,"nodeType":"1035","messageId":"1036","endLine":171,"endColumn":65},{"ruleId":"1033","severity":1,"message":"1171","line":215,"column":71,"nodeType":"1035","messageId":"1036","endLine":215,"endColumn":73},{"ruleId":"1033","severity":1,"message":"1171","line":228,"column":59,"nodeType":"1035","messageId":"1036","endLine":228,"endColumn":61},{"ruleId":"1086","severity":1,"message":"1115","line":23,"column":12,"nodeType":"1026","endLine":23,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":23,"column":12,"nodeType":"1026","endLine":23,"endColumn":15,"suggestions":"1240"},{"ruleId":"1024","severity":1,"message":"1060","line":15,"column":9,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1058","line":15,"column":18,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1185","line":16,"column":9,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1078","line":17,"column":9,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1092","line":17,"column":16,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1199","line":42,"column":11,"nodeType":"1026","messageId":"1027","endLine":42,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1115","line":63,"column":12,"nodeType":"1026","endLine":63,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1116","line":63,"column":12,"nodeType":"1026","endLine":63,"endColumn":15,"suggestions":"1241"},{"ruleId":"1024","severity":1,"message":"1202","line":153,"column":12,"nodeType":"1026","messageId":"1027","endLine":153,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1203","line":153,"column":19,"nodeType":"1026","messageId":"1027","endLine":153,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1204","line":153,"column":28,"nodeType":"1026","messageId":"1027","endLine":153,"endColumn":37},{"ruleId":"1024","severity":1,"message":"1055","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":34,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":43},{"ruleId":"1024","severity":1,"message":"1032","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1137","line":5,"column":18,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1167","line":5,"column":31,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":42},{"ruleId":"1024","severity":1,"message":"1057","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1078","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1092","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1059","line":12,"column":5,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1060","line":13,"column":5,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1061","line":14,"column":5,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1062","line":15,"column":5,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1063","line":16,"column":5,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1064","line":17,"column":5,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1065","line":18,"column":5,"nodeType":"1026","messageId":"1027","endLine":18,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1183","line":21,"column":5,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1184","line":22,"column":5,"nodeType":"1026","messageId":"1027","endLine":22,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1242","line":23,"column":5,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1182","line":23,"column":13,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1180","line":23,"column":22,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1243","line":23,"column":34,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":44},{"ruleId":"1024","severity":1,"message":"1066","line":25,"column":8,"nodeType":"1026","messageId":"1027","endLine":25,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1067","line":26,"column":8,"nodeType":"1026","messageId":"1027","endLine":26,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1068","line":28,"column":8,"nodeType":"1026","messageId":"1027","endLine":28,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1069","line":29,"column":8,"nodeType":"1026","messageId":"1027","endLine":29,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1070","line":30,"column":8,"nodeType":"1026","messageId":"1027","endLine":30,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1071","line":31,"column":8,"nodeType":"1026","messageId":"1027","endLine":31,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1244","line":32,"column":8,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1072","line":33,"column":8,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1245","line":34,"column":8,"nodeType":"1026","messageId":"1027","endLine":34,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1246","line":35,"column":8,"nodeType":"1026","messageId":"1027","endLine":35,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1075","line":38,"column":8,"nodeType":"1026","messageId":"1027","endLine":38,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1186","line":42,"column":9,"nodeType":"1026","messageId":"1027","endLine":42,"endColumn":15},{"ruleId":"1033","severity":1,"message":"1171","line":181,"column":32,"nodeType":"1035","messageId":"1036","endLine":181,"endColumn":34},{"ruleId":"1033","severity":1,"message":"1171","line":191,"column":78,"nodeType":"1035","messageId":"1036","endLine":191,"endColumn":80},{"ruleId":"1024","severity":1,"message":"1247","line":365,"column":15,"nodeType":"1026","messageId":"1027","endLine":365,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1060","line":21,"column":5,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1062","line":24,"column":5,"nodeType":"1026","messageId":"1027","endLine":24,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1169","line":28,"column":8,"nodeType":"1026","messageId":"1027","endLine":28,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1248","line":33,"column":8,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":9},{"ruleId":"1024","severity":1,"message":"1249","line":33,"column":12,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1250","line":34,"column":9,"nodeType":"1026","messageId":"1027","endLine":34,"endColumn":31},{"ruleId":"1033","severity":1,"message":"1171","line":152,"column":59,"nodeType":"1035","messageId":"1036","endLine":152,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1171","line":359,"column":46,"nodeType":"1035","messageId":"1036","endLine":359,"endColumn":48},{"ruleId":"1024","severity":1,"message":"1025","line":1,"column":17,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1028","line":2,"column":24,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1029","line":3,"column":10,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1030","line":3,"column":16,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1031","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1032","line":7,"column":9,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1033","severity":1,"message":"1034","line":157,"column":29,"nodeType":"1035","messageId":"1036","endLine":157,"endColumn":31},{"ruleId":"1024","severity":1,"message":"1042","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1032","line":2,"column":18,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1043","line":2,"column":30,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":40},{"ruleId":"1024","severity":1,"message":"1044","line":3,"column":8,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1045","line":4,"column":8,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1046","line":5,"column":8,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1047","line":6,"column":8,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1048","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":17},{"ruleId":"1024","severity":1,"message":"1049","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1050","line":9,"column":8,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1051","line":11,"column":9,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1052","line":16,"column":10,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1053","line":49,"column":12,"nodeType":"1026","messageId":"1027","endLine":49,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1054","line":53,"column":11,"nodeType":"1026","messageId":"1027","endLine":53,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1037","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1038","line":2,"column":17,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1039","line":2,"column":37,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":44},{"ruleId":"1024","severity":1,"message":"1040","line":27,"column":11,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1251","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1252","line":4,"column":24,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1253","line":4,"column":34,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1041","line":5,"column":9,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1040","line":14,"column":11,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1056","line":1,"column":26,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":32},{"ruleId":"1024","severity":1,"message":"1032","line":4,"column":9,"nodeType":"1026","messageId":"1027","endLine":4,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1057","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1078","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1092","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1059","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1060","line":12,"column":5,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1066","line":16,"column":8,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1069","line":19,"column":8,"nodeType":"1026","messageId":"1027","endLine":19,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1254","line":27,"column":11,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1103","line":29,"column":11,"nodeType":"1026","messageId":"1027","endLine":29,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1104","line":30,"column":12,"nodeType":"1026","messageId":"1027","endLine":30,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1105","line":30,"column":20,"nodeType":"1026","messageId":"1027","endLine":30,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1106","line":32,"column":11,"nodeType":"1026","messageId":"1027","endLine":32,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1087","line":44,"column":8,"nodeType":"1088","endLine":44,"endColumn":10,"suggestions":"1255"},{"ruleId":"1024","severity":1,"message":"1135","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1058","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":10},{"ruleId":"1024","severity":1,"message":"1136","line":11,"column":5,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1137","line":14,"column":9,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1138","line":17,"column":7,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1139","line":166,"column":19,"nodeType":"1026","messageId":"1027","endLine":166,"endColumn":22},{"ruleId":"1140","severity":1,"message":"1141","line":245,"column":51,"nodeType":"1035","messageId":"1142","endLine":245,"endColumn":52},{"ruleId":"1140","severity":1,"message":"1141","line":245,"column":67,"nodeType":"1035","messageId":"1142","endLine":245,"endColumn":68},{"ruleId":"1140","severity":1,"message":"1141","line":254,"column":52,"nodeType":"1035","messageId":"1142","endLine":254,"endColumn":53},{"ruleId":"1140","severity":1,"message":"1141","line":254,"column":62,"nodeType":"1035","messageId":"1142","endLine":254,"endColumn":63},{"ruleId":"1140","severity":1,"message":"1141","line":277,"column":52,"nodeType":"1035","messageId":"1142","endLine":277,"endColumn":53},{"ruleId":"1140","severity":1,"message":"1141","line":277,"column":62,"nodeType":"1035","messageId":"1142","endLine":277,"endColumn":63},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":6,"column":10,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":24},{"ruleId":"1024","severity":1,"message":"1167","line":7,"column":22,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":33},{"ruleId":"1024","severity":1,"message":"1059","line":8,"column":21,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":29},{"ruleId":"1024","severity":1,"message":"1182","line":8,"column":31,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":38},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":40,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1185","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1187","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1062","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1160","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1190","line":23,"column":12,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1191","line":23,"column":23,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":35},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1160","line":3,"column":10,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1073","line":8,"column":8,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":10,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":27},{"ruleId":"1024","severity":1,"message":"1164","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1165","line":11,"column":8,"nodeType":"1026","messageId":"1027","endLine":11,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1166","line":12,"column":8,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1060","line":17,"column":38,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":45},{"ruleId":"1024","severity":1,"message":"1169","line":20,"column":8,"nodeType":"1026","messageId":"1027","endLine":20,"endColumn":18},{"ruleId":"1033","severity":1,"message":"1171","line":70,"column":49,"nodeType":"1035","messageId":"1036","endLine":70,"endColumn":51},{"ruleId":"1024","severity":1,"message":"1172","line":99,"column":23,"nodeType":"1026","messageId":"1027","endLine":99,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1256","line":8,"column":9,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1257","line":8,"column":18,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1182","line":8,"column":28,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":35},{"ruleId":"1024","severity":1,"message":"1187","line":10,"column":8,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1113","line":16,"column":11,"nodeType":"1026","messageId":"1027","endLine":16,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1192","line":17,"column":11,"nodeType":"1026","messageId":"1027","endLine":17,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1258","line":18,"column":11,"nodeType":"1026","messageId":"1027","endLine":18,"endColumn":20},{"ruleId":"1210","severity":1,"message":"1211","line":16,"column":1,"nodeType":"1212","endLine":21,"endColumn":3},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1186","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1188","line":13,"column":39,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":47},{"ruleId":"1024","severity":1,"message":"1189","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1113","line":21,"column":11,"nodeType":"1026","messageId":"1027","endLine":21,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1190","line":23,"column":12,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":21},{"ruleId":"1024","severity":1,"message":"1191","line":23,"column":23,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1087","line":71,"column":8,"nodeType":"1088","endLine":71,"endColumn":10,"suggestions":"1259"},{"ruleId":"1024","severity":1,"message":"1143","line":1,"column":16,"nodeType":"1026","messageId":"1027","endLine":1,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1179","line":2,"column":9,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1167","line":3,"column":22,"nodeType":"1026","messageId":"1027","endLine":3,"endColumn":33},{"ruleId":"1024","severity":1,"message":"1180","line":5,"column":5,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1181","line":5,"column":17,"nodeType":"1026","messageId":"1027","endLine":5,"endColumn":23},{"ruleId":"1024","severity":1,"message":"1059","line":6,"column":5,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1182","line":7,"column":5,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1183","line":7,"column":14,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":28},{"ruleId":"1024","severity":1,"message":"1184","line":8,"column":5,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":12},{"ruleId":"1024","severity":1,"message":"1063","line":8,"column":27,"nodeType":"1026","messageId":"1027","endLine":8,"endColumn":48},{"ruleId":"1024","severity":1,"message":"1062","line":9,"column":5,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1061","line":10,"column":5,"nodeType":"1026","messageId":"1027","endLine":10,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1185","line":12,"column":9,"nodeType":"1026","messageId":"1027","endLine":12,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1160","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":14},{"ruleId":"1024","severity":1,"message":"1186","line":13,"column":16,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1074","line":14,"column":8,"nodeType":"1026","messageId":"1027","endLine":14,"endColumn":13},{"ruleId":"1024","severity":1,"message":"1159","line":2,"column":8,"nodeType":"1026","messageId":"1027","endLine":2,"endColumn":11},{"ruleId":"1024","severity":1,"message":"1161","line":6,"column":13,"nodeType":"1026","messageId":"1027","endLine":6,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1162","line":7,"column":8,"nodeType":"1026","messageId":"1027","endLine":7,"endColumn":19},{"ruleId":"1024","severity":1,"message":"1163","line":9,"column":9,"nodeType":"1026","messageId":"1027","endLine":9,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1167","line":13,"column":9,"nodeType":"1026","messageId":"1027","endLine":13,"endColumn":20},{"ruleId":"1024","severity":1,"message":"1168","line":15,"column":8,"nodeType":"1026","messageId":"1027","endLine":15,"endColumn":16},{"ruleId":"1024","severity":1,"message":"1062","line":23,"column":5,"nodeType":"1026","messageId":"1027","endLine":23,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1169","line":27,"column":8,"nodeType":"1026","messageId":"1027","endLine":27,"endColumn":18},{"ruleId":"1024","severity":1,"message":"1077","line":33,"column":8,"nodeType":"1026","messageId":"1027","endLine":33,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1171","line":139,"column":59,"nodeType":"1035","messageId":"1036","endLine":139,"endColumn":61},{"ruleId":"1033","severity":1,"message":"1034","line":323,"column":31,"nodeType":"1035","messageId":"1036","endLine":323,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":365,"column":39,"nodeType":"1035","messageId":"1036","endLine":365,"endColumn":41},{"ruleId":"1033","severity":1,"message":"1171","line":454,"column":46,"nodeType":"1035","messageId":"1036","endLine":454,"endColumn":48},"no-native-reassign",["1260"],"no-negated-in-lhs",["1261"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'CssBaseline' is defined but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'Button' is defined but never used.","'Toolbar' is defined but never used.","'classes' is assigned a value but never used.","'Repeat' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'PropTypes' is defined but never used.","'List' is defined but never used.","'Collapse' is defined but never used.","'Link' is defined but never used.","'ListItemLink' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'revAd' is defined but never used.","'revRe' is defined but never used.","'currType' is defined but never used.","'getAllR' is defined but never used.","'openSelectPop' is defined but never used.","'openSelectKeyFieldPop' is defined but never used.","'openSelectConFieldPop' is defined but never used.","'openSavePop' is defined but never used.","'clearClicked' is defined but never used.","'ReleasePopup' is defined but never used.","'GridTable' is defined but never used.","'SelectFieldPopup' is defined but never used.","'SelectKeyFieldPopup' is defined but never used.","'GridTableLDR' is defined but never used.","'SavePopup' is defined but never used.","'SlideTmp' is defined but never used.","'FormProvider' is defined but never used.","'Table' is defined but never used.","'SelectConfirmsPopup' is defined but never used.","'cData' is assigned a value but never used.","'axios' is defined but never used.","'revOp' is defined but never used.","'RelForm' is defined but never used.","'refresh2' is assigned a value but never used.","'add2' is assigned a value but never used.","'data2' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'clickedData' is assigned a value but never used.","'setState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1262"],"'AssetAddForm' is defined but never used.","'TabletoolbarTmp' is defined but never used.","'clickedOp' is defined but never used.","'MainContents' is defined but never used.","'selectPop' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleClose1' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'handleData'. Either include them or remove the dependency array.",["1263"],"'openSelectPopup' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'selectKPop' is assigned a value but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'version' is assigned a value but never used.",["1264"],"'Grid' is defined but never used.","'useForm' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'MultiSelect' is defined but never used.","'data' is assigned a value but never used.","'validate' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1265"],"'mounted' is assigned a value but never used.","'entityTypes' is assigned a value but never used.","'setEntityTypes' is assigned a value but never used.","'vendors' is assigned a value but never used.","'setVendors' is assigned a value but never used.","'models' is assigned a value but never used.","'setModels' is assigned a value but never used.","'initialFValues' is assigned a value but never used.",["1266"],"'memo' is defined but never used.","'getGraphs' is defined but never used.","'ReactTable' is defined but never used.","'setTitle' is assigned a value but never used.","'name' is assigned a value but never used.","'other' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.",["1267"],"'getVens' is defined but never used.","'saveVersion' is defined but never used.","'useDispatch' is defined but never used.","'BASE_URL' is assigned a value but never used.","'res' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","'render' is defined but never used.","'withStyles' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'ToggleButton' is defined but never used.","'CheckIcon' is defined but never used.","'EditIcon' is defined but never used.","'GraphD' is defined but never used.","'DetailRel' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'edit' is assigned a value but never used.","'handleChangeTabs' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","'handleData' is assigned a value but never used.","'set' is defined but never used.","'Field' is defined but never used.","'BS' is defined but never used.","'initialData' is defined but never used.","'avatarColumnProps' is defined but never used.","'ActionsCell' is defined but never used.","'HighlightCell' is defined but never used.","'GridFilters' is defined but never used.","'useSelector' is defined but never used.","'fetchAPI' is defined but never used.","'Pagination' is defined but never used.","'ref' is assigned a value but never used.","Expected '===' and instead saw '=='.","'hisId' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","ArrowFunctionExpression","expectedInside","'convertHex2Str' is defined but never used.","'addedField' is defined but never used.","'addTmp' is defined but never used.","'hisFlag' is defined but never used.","'keyFieldSelect' is defined but never used.","'openPop' is defined but never used.","'apiProvider' is defined but never used.","'change' is defined but never used.","'isEqual' is defined but never used.","'FormName' is defined but never used.","'formValueSelector' is defined but never used.","'selectKey' is assigned a value but never used.","'setSelectKey' is assigned a value but never used.","'currData' is assigned a value but never used.","'Form' is defined but never used.","'setValues' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'resetForm' is assigned a value but never used.",["1268"],"'MoreVertIcon' is defined but never used.","'dispatch' is assigned a value but never used.",["1269"],"'handleDetail' is assigned a value but never used.","'order' is assigned a value but never used.","'orderBy' is assigned a value but never used.","'selected1' is assigned a value but never used.","'data' is defined but never used.","'state' is assigned a value but never used.","'expandData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clickedData.i', 'dispatch', and 'handleData'. Either include them or remove the dependency array.",["1270"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["1271"],["1272"],"'pic' is defined but never used.","'SearchIcon' is defined but never used.","'Controls' is defined but never used.","'AddIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'Check' is defined but never used.","'CompareArrows' is defined but never used.","'SaveAlt' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'decorateGraphNodesWithInitialPositioning' is assigned a value but never used.",["1273"],"React Hook useEffect has missing dependencies: 'curr.i', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1274"],"'setEx' is assigned a value but never used.","'errors' is assigned a value but never used.",["1275"],"React Hook useEffect has missing dependencies: 'props' and 'values'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1276"],"React Hook useEffect has a missing dependency: 'getTemp'. Either include it or remove the dependency array.",["1277"],"Array.prototype.map() expects a return value from arrow function.",["1278"],["1279"],"'currEd' is defined but never used.","'selectHead' is defined but never used.","'GridTableH' is defined but never used.","'GridTableNormal' is defined but never used.","'SlidingPane' is defined but never used.","'params' is assigned a value but never used.","'_' is defined but never used.","'debounce' is defined but never used.","'TransferWithinAStation' is defined but never used.","'Asset' is defined but never used.","'Relation' is defined but never used.","'NormalizeRule' is defined but never used.","'openPop' is assigned a value but never used.",["1280"],"'delSave' is defined but never used.","'editZero' is defined but never used.","'savedData' is assigned a value but never used.",["1281"],"no-global-assign","no-unsafe-negation",{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1282","fix":"1286"},{"desc":"1287","fix":"1288"},{"desc":"1287","fix":"1289"},{"desc":"1290","fix":"1291"},{"desc":"1287","fix":"1292"},{"desc":"1287","fix":"1293"},{"desc":"1294","fix":"1295"},{"desc":"1282","fix":"1296"},{"desc":"1290","fix":"1297"},{"desc":"1287","fix":"1298"},{"desc":"1299","fix":"1300"},{"desc":"1287","fix":"1301"},{"desc":"1302","fix":"1303"},{"desc":"1304","fix":"1305"},{"desc":"1287","fix":"1306"},{"desc":"1287","fix":"1307"},{"desc":"1282","fix":"1308"},{"desc":"1282","fix":"1309"},"Update the dependencies array to be: [dispatch]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [dispatch, handleData]",{"range":"1312","text":"1313"},{"range":"1314","text":"1311"},"Update the dependencies array to be: [fn]",{"range":"1315","text":"1316"},{"range":"1317","text":"1316"},"Update the dependencies array to be: [del, search, props, selected]",{"range":"1318","text":"1319"},{"range":"1320","text":"1316"},{"range":"1321","text":"1316"},"Update the dependencies array to be: [clickedData.i, dispatch, handleData, refresh2]",{"range":"1322","text":"1323"},{"range":"1324","text":"1311"},{"range":"1325","text":"1319"},{"range":"1326","text":"1316"},"Update the dependencies array to be: [refresh.refre, refresh.ad, props, curr.i, dispatch]",{"range":"1327","text":"1328"},{"range":"1329","text":"1316"},"Update the dependencies array to be: [props, values, values.props]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [getTemp, values.entityType]",{"range":"1332","text":"1333"},{"range":"1334","text":"1316"},{"range":"1335","text":"1316"},{"range":"1336","text":"1311"},{"range":"1337","text":"1311"},[1394,1396],"[dispatch]",[2382,2384],"[dispatch, handleData]",[2104,2106],[2021,2024],"[fn]",[2530,2533],[3354,3374],"[del, search, props, selected]",[2664,2667],[1880,1883],[3601,3611],"[clickedData.i, dispatch, handleData, refresh2]",[1988,1990],[3320,3340],[3192,3195],[3362,3389],"[refresh.refre, refresh.ad, props, curr.i, dispatch]",[2672,2675],[2951,2965],"[props, values, values.props]",[3327,3346],"[getTemp, values.entityType]",[848,851],[1911,1914],[1710,1712],[1988,1990]]
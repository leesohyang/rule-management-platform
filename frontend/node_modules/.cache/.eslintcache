[{"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/index.js":"1","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/client/Root.js":"2","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/index.js":"3","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/shared/App.js":"4","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/slidePop.js":"5","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/editOperator.js":"6","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/fetchAPI.js":"7","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/Navigator.js":"8","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/MainAppBar.js":"9","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/MainContents.js":"10","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/pages/index.js":"11","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/controls/BreadcrumbNameMap.js":"12","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/pages/Device/LiveDetectRule.js":"13","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/gridTableLDR.js":"14","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/gridTableH.js":"15","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SavePopup.js":"16","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectKeyFieldPopup.js":"17","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectFieldPopup.js":"18","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/ReleasePopup.js":"19","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Provider.js":"20","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/Pagination.js":"21","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/GridFilters.js":"22","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/HighlightCell.js":"23","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/ActionsCell.js":"24","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/FormProvider.js":"25","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/dataFactory.js":"26","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/AvatarCell.js":"27","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/actions/index.js":"28","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/util/utils.js":"29","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectConfirmsPopup.js":"30"},{"size":765,"mtime":1641787593878,"results":"31","hashOfConfig":"32"},{"size":213,"mtime":1641787593870,"results":"33","hashOfConfig":"32"},{"size":332,"mtime":1641787593878,"results":"34","hashOfConfig":"32"},{"size":1555,"mtime":1641787593878,"results":"35","hashOfConfig":"32"},{"size":1443,"mtime":1641787593878,"results":"36","hashOfConfig":"32"},{"size":785,"mtime":1641787593878,"results":"37","hashOfConfig":"32"},{"size":4826,"mtime":1641787593878,"results":"38","hashOfConfig":"32"},{"size":2082,"mtime":1641787593870,"results":"39","hashOfConfig":"32"},{"size":3666,"mtime":1641787593870,"results":"40","hashOfConfig":"32"},{"size":921,"mtime":1641787593870,"results":"41","hashOfConfig":"32"},{"size":59,"mtime":1641787593878,"results":"42","hashOfConfig":"32"},{"size":99,"mtime":1641787593870,"results":"43","hashOfConfig":"32"},{"size":4461,"mtime":1641787593878,"results":"44","hashOfConfig":"32"},{"size":21391,"mtime":1641787593878,"results":"45","hashOfConfig":"32"},{"size":6566,"mtime":1641790529852,"results":"46","hashOfConfig":"32"},{"size":2293,"mtime":1641787593870,"results":"47","hashOfConfig":"32"},{"size":4566,"mtime":1641787593870,"results":"48","hashOfConfig":"32"},{"size":2989,"mtime":1641787593870,"results":"49","hashOfConfig":"32"},{"size":11173,"mtime":1641789186739,"results":"50","hashOfConfig":"32"},{"size":16576,"mtime":1641788473192,"results":"51","hashOfConfig":"32"},{"size":9446,"mtime":1641787593878,"results":"52","hashOfConfig":"32"},{"size":571,"mtime":1641787593878,"results":"53","hashOfConfig":"32"},{"size":899,"mtime":1641787593878,"results":"54","hashOfConfig":"32"},{"size":1026,"mtime":1641787593878,"results":"55","hashOfConfig":"32"},{"size":145,"mtime":1641787593878,"results":"56","hashOfConfig":"32"},{"size":176,"mtime":1641787593878,"results":"57","hashOfConfig":"32"},{"size":235,"mtime":1641787593878,"results":"58","hashOfConfig":"32"},{"size":4381,"mtime":1641787593878,"results":"59","hashOfConfig":"32"},{"size":2692,"mtime":1641787593878,"results":"60","hashOfConfig":"32"},{"size":5681,"mtime":1641787593870,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1voe4a0",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/index.js",[],["136","137"],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/client/Root.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/index.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/shared/App.js",["138","139","140","141","142","143"],"import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport { Home, About } from '../pages';\nimport {CssBaseline} from \"@material-ui/core\";\nimport MainAppBar from \"../components/main/MainAppBar\";\nimport Navigator from \"../components/main/Navigator\";\nimport {makeStyles} from \"@material-ui/core\";\nimport MainContents from \"../components/main/MainContents\";\nimport '../components/styles/styles.scss'\n\n//TODO::Navigator 따로 빼야함.\n\nfunction App() {\n    return (\n        // <div className={classes.root}>\n        <React.Fragment>\n\n            <BrowserRouter initialEntries={['/']} initialIndex={0}>\n                <div className=\"navbar\">\n                    <div className=\"navbar__logo\">\n                        <div className=\"logo\" />\n                    </div>\n                    <MainAppBar />\n                </div>\n\n\n                <div className=\"wrapper correlation-rule\">\n\n                    <nav className=\"left-menu-wrapper\">\n                        <div className=\"left-menu\">\n                            <div className=\"left-menu__title\">Admin</div>\n                            <ul className=\"left-menu__list\">\n                                <Navigator/>\n                            </ul>\n\n                            <div className=\"left-menu__title\">Rules</div>\n                        </div>\n                    </nav>\n\n                    <MainContents />\n\n                </div>\n            </BrowserRouter>\n        </React.Fragment>\n\n        // </div>\n\n\n    );\n}\nexport default App;","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/slidePop.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/editOperator.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/reducers/fetchAPI.js",["144"],"\nconst initialState = {\n    open: false,\n    openSelect: false,\n    currType: '',\n    data: [{}],\n    history: [],\n    historyLive: [], //[{}]=>[]\n    historyNormal:[],\n    linkData: [{}],\n    temp: [{}],\n    refre: false,\n    headerRestore: false,\n    ad: false,\n    link: [{}],\n    node: [{}],\n    dataTmp: {\n        nodes:[\n        ],\n        links:[\n        ]\n    },\n    //for history\n    edited: 0,\n    editedOrigin:{},\n    hflag: false,\n    addedField: \"\",\n    header: [],\n    keyField: {},\n    openKeyField: false,\n    openConField: false,\n    openSave: false,\n    headVersion: \"\",\n    headVersionTmp: \"\",\n    startHistory: false\n\n}\n\nexport default function fetchAPI(state = initialState, action) {\n    switch (action.type) {\n        case \"HIS_FLAG\":\n            return {\n                ...state,\n                hflag: action.payload\n            }\n        case \"START_HIS\":\n            return {\n                ...state,\n                startHistory: action.payload\n            }\n        case \"CURR_ED\":\n            return {\n                ...state,\n                edited: action.viewIn,\n                editedOrigin: action.In\n            }\n        case \"KEY_FIELD\":\n            return {\n                ...state,\n                keyField:action.payload\n            }\n        case \"HEAD_LIST\":\n            return {\n                ...state,\n                header: action.payload\n            }\n        case \"RESTORE_VER\":\n            return {\n                ...state,\n                headVersionTmp: action.payload\n            }\n        case \"SAVE_VER\":\n            return {\n                ...state,\n                headVersion: action.payload\n            }\n        case \"OPEN_POP\":\n            return {\n                ...state,\n                open: action.payload\n            }\n        case \"ADD_FIELD\":\n            return {\n                ...state,\n                addedField: action.payload\n            }\n        case \"OPEN_SAVE_POP\":\n            return {\n                ...state,\n                openSave: action.payload\n            }\n\n        case \"OPEN_CON_POP\":\n            return {\n                ...state,\n                openConField: action.payload\n            }\n        case \"OPEN_KEY_POP\":\n            return {\n                ...state,\n                openKeyField: action.payload\n            }\n        case \"OPEN_SELECT_POP\":\n            return {\n                ...state,\n                openSelect: action.payload\n            }\n        case \"CURR_TYPE\":\n            return {\n                ...state,\n                currType: action.payload\n            }\n        case \"EDIT_ZERO\":\n            return {\n                ...state,\n                edited: 0\n            }\n        case \"GET_ALLH_NORMAL\":\n            return {\n                ...state,\n                historyNormal: action.payload,\n                editedOrigin: action.init,\n                edited: 0\n            }\n        case \"GET_ALLH_LIVE\":\n            return {\n                ...state,\n                historyLive: action.payload,\n                editedOrigin: action.init,\n                edited: 0\n            }\n        case \"GET_ALLH\":\n            return {\n                ...state,\n                history:action.payload,\n                editedOrigin: action.init, //배포용\n                edited: 0\n            }\n        case \"GET_ALL\":\n            return {\n            ...state,\n            refre: false,\n            ad: false,\n            data: action.payload\n            // data:\n        }\n        case \"ADD_TMP\":\n            return {\n                ...state,\n                data: action.payload\n            }\n        case \"DEL_TMP\":\n            return {\n                ...state,\n                data: state.data.filter((data, i)=>\n                    // data.id !== state.data.length\n                    data.id != action.payload\n        )\n            }\n        case \"GET_TMP\":\n            return {\n                ...state,\n                temp: action.payload\n            }\n        case \"REV_RE\":\n            return {\n                ...state,\n                refre: action.payload\n            }\n        case \"HEAD_RESTORE\":\n            return {\n                ...state,\n                headRestore: action.payload\n            }\n        case \"REV_AD\":\n            return {\n                ...state,\n                ad: action.payload\n            }\n\n        case \"GET_GRAPH\":\n            return {\n                ...state,\n                ad: false,\n                linkData: action.link,\n            }\n        case \"GET_GRAPH2\":\n            return {\n                ...state,\n                linkData: action.link,\n                dataTmp: {\n                    nodes: action.node,\n                    links: action.link\n                }\n            }\n        default:\n            return state;\n    }\n}","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/Navigator.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, {useState} from \"react\";\nimport {Divider, makeStyles, Typography} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {breadcrumbNameMap} from \"../controls/BreadcrumbNameMap\";\nimport {Link} from \"react-router-dom\";\nimport './style.scss'\nimport { NavLink } from 'react-router-dom';\n\n//TODO:: 또 여길 고쳐야겠ㄴ네\nfunction ListItemLink(props) {\n    const { to, open, ...other } = props;\n    const primary = breadcrumbNameMap[to];\n\n    return (\n        <React.Fragment>\n            <li>\n\n                <NavLink to=\"/asset\" activeClassName=\"active\" {...other}>\n                    {primary}\n                </NavLink>\n                {/*<ListItem button component={Link} to={to} {...other}>*/}\n                {/*    <ListItemText primary={primary} />*/}\n                {/*    {open != null ? open ? <ExpandLess /> : <ExpandMore /> : null}*/}\n                {/*</ListItem>*/}\n            </li>\n            <li>\n\n                <NavLink to=\"/livedetectrule\" activeClassName=\"active\" {...other}>\n                    {primary}\n                </NavLink>\n            </li>\n        </React.Fragment>\n    );\n}\n\n// ListItemLink.propTypes = {\n//     open: PropTypes.bool,\n//     to: PropTypes.string.isRequired,\n// };\n\n\nexport default function Navigator() {\n    const [open, setOpen] = useState(true);\n    const primary = (to) => {\n        return breadcrumbNameMap[to]\n    }\n    const handleClick = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    return (\n        <React.Fragment>\n            <li>\n                <NavLink to=\"/livedetectrule\" activeClassName=\"active\">\n                    {primary(\"/livedetectrule\")}\n                </NavLink>\n            </li>\n\n        </React.Fragment>\n        // </div>\n    );\n\n}\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/MainAppBar.js",["159","160","161","162"],"import React from \"react\";\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport {Route} from \"react-router\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport {breadcrumbNameMap} from \"../controls/BreadcrumbNameMap\";\nimport './style.scss'\nconst LinkRouter = (props) => <Link {...props} component={RouterLink}/>;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // display: 'flex',\n        flexDirection:'column',\n    },\n    appBar: {\n        // display: \"flex\",\n        flexDirection: 'row',\n        position: \"static\"\n    },\n    path: {\n        flexGrow: 1\n    },\n}))\n\nexport default function MainAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n             <Route>\n                 {({ location }) => {\n                     const pathnames = location.pathname.split('/').filter((x) => x);\n\n                     return (\n                         <Breadcrumbs color=\"inherit\">\n                             {pathnames.map((value, index) => {\n                                 const last = index === pathnames.length - 1;\n                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                                 return last ? (\n                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </Typography>\n                                 ) : (\n                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </LinkRouter>\n                                 );\n                             })}\n                         </Breadcrumbs>\n                     );\n                 }}\n             </Route>\n        </React.Fragment>\n\n        // <div className={classes.root}>\n        //     <AppBar className={classes.appBar} >\n        //         <Toolbar className={classes.path}>\n        //             <Route>\n        //                 {({ location }) => {\n        //                     const pathnames = location.pathname.split('/').filter((x) => x);\n        //\n        //                     return (\n        //                         <Breadcrumbs color=\"inherit\">\n        //                             {pathnames.map((value, index) => {\n        //                                 const last = index === pathnames.length - 1;\n        //                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n        //\n        //                                 return last ? (\n        //                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </Typography>\n        //                                 ) : (\n        //                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </LinkRouter>\n        //                                 );\n        //                             })}\n        //                         </Breadcrumbs>\n        //                     );\n        //                 }}\n        //             </Route>\n        //         </Toolbar>\n        //         <Button color=\"inherit\">Login</Button>\n        //     </AppBar>\n        // </div>\n    );\n\n}\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/main/MainContents.js",["163","164","165","166","167"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Asset, Device, Relation, NormalizeRule} from \"../../pages\";\nimport {Repeat} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 10,\n    },\n}));\n\nexport default function MainContents() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n\n            <Switch>\n                {/*<Route path={'/home'} exact={true}>*/}\n                {/*</Route>*/}\n                {/*<Route path={'/assetgroup/asset'} exact={true}>*/}\n                {/*</Route>*/}\n                <Route path={'/livedetectrule'} exact={true} component={Device}>\n                    {/*    <ContentsTable title={'Device Group'} headCells={headCells} rows={rows}/>*/}\n                </Route>\n            </Switch>\n        </React.Fragment>\n    );\n\n}\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/pages/index.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/controls/BreadcrumbNameMap.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/pages/Device/LiveDetectRule.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, {useState, useRef, useEffect} from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    revAd,\n    revRe,\n    revOp,\n    clickedOp,\n    currType,\n    getAllR,\n    openSelectPop,\n    openSelectKeyFieldPop, openSelectConFieldPop, openSavePop, saveVersion\n} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport \"react-table/react-table.css\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\n\n\nconst LiveDetectRule = () => {\n\n    const openPop = useSelector(state => state.fetchAPI.open)\n    const selectPop = useSelector(state => state.fetchAPI.openSelect)\n    const selectKPop = useSelector(state => state.fetchAPI.openKeyField)\n    const [change, setChange] = useState(false)\n    const savePop = useSelector(state => state.fetchAPI.openSave)\n    const version = useSelector(state => state.fetchAPI.headVersion)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const ob = useSelector(state => state.fetchAPI.keyField)\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        apiProvider.getHead().then((ver) => {\n            dispatch(saveVersion(ver))\n            dispatch(apiProvider.getHeadVer(ver))\n        })\n        // handleData()\n    }, [])\n\n    const handleUpdate = (data) => {\n        apiProvider.update(\"rules\", data).then(() => dispatch(revRe(true)))\n    }\n    const addOrEdit = (data, ver) => {\n        apiProvider.insertLiveDetect(data, ver)\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"field\", id).then(() => {\n            dispatch(revRe(true))\n        })\n\n    }\n    const handleHeadVer = (ver) => {\n        dispatch(apiProvider.getHeadVer(ver))\n    }\n    const handleData = () => {\n        apiProvider.getLiveRules(0, 2).then((res) => {\n\n        })\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history/livedetectrule\"))\n    }\n\n    const openConSelectPopup = () => {\n        dispatch(openSelectConFieldPop(true))\n    }\n    const openKeySelectPopup = () => {\n        dispatch(openSelectKeyFieldPop(true))\n    }\n    const openSelectPopup = () => {\n        console.log(ob)\n        dispatch(openSelectPop(true))\n    }\n    const openSavePopup = () => {\n        dispatch(openSavePop(true))\n    }\n    const insertHead = (header) => {\n        apiProvider.insertHead(header).then(() => {\n            dispatch(revRe(true))\n        })\n    }\n\n    const activeHead = (version) => {\n        apiProvider.activeHead(version).then(() => {\n            dispatch(revRe(true))\n        })\n    }\n    return headers.length > 0 && (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Live Detect Rule </span>\n                    <div className=\"binder\"/>\n                </div>\n\n                <GridTableLDR\n                    handleData={handleData}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    insertHead={insertHead}\n                    activeHead={activeHead}\n                    // handleHead={handleHead}\n                    handleHeadVer={handleHeadVer}\n                    update={handleUpdate}\n                    columns={\n                        headers\n                    }\n                    openSelectPopup={openSelectPopup}\n                    openKeySelectPopup={openKeySelectPopup}\n                    openConSelectPopup={openConSelectPopup}\n                    openSave={openSavePopup}\n                ></GridTableLDR>\n\n                <GridTableH\n                    name=\"livedetectrule\"\n                    handleData={handleDataH}\n                ></GridTableH>\n\n                {selectPop && <SelectFieldPopup> </SelectFieldPopup>}\n                {savePop && <SavePopup></SavePopup>}\n\n            </div>\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(LiveDetectRule);","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/gridTableLDR.js",["183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport {Field} from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport {avatarColumnProps} from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport {\n    addedField, addSave,\n    currEd, dataSave,\n    deleteTmp, delSave, editSave, editZero,\n    getAllR,\n    hisFlag,\n    keyFieldSelect,\n    openSelectKeyFieldPop, restoreHead, restoreVersion, saveVersion, selectHead, startHis\n} from \"../../services/Redux/actions\";\nimport {bindActionCreators} from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\nimport ReleasePopup from \"../popup/ReleasePopup\";\nimport axios from \"axios\";\n\n\nclass GridTableLDR extends React.Component {\n    state = {\n        editing: null,\n        selected: {},\n        selectAll: 0,\n        adding: false,\n        columns: [],\n        selectEdit: false,\n        willRemoved: [],\n        temps: false,\n        pages: null,\n        pagesH: null,\n        loading: true,\n        sorted: [],\n        totalRows: 0,\n        tableProps: {}\n    };\n\n    selectList = {\n        typeList: [\"String\", \"Numeric\", \"IP\"],\n        groupList: [\"Required\", \"Additional\"]\n    }\n\n    getSelect = (type, curr) => {\n        const v = this.selectList[type].filter(i => i !== curr)\n        return v\n    }\n\n    resetColumn = () => {\n        this.setState((state) => {\n            return {\n                ...state, columns:\n                    [{\n                        columns: [\n                            {\n                                id: \"checkbox\",\n                                accessor: \"\",\n                                Cell: ({original}) => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selected[original.id] === true}\n                                            onChange={() => this.toggleRow(original.id)}\n                                            disabled={this.props.delId.indexOf(original.id) !== -1} //있으면\n                                        />\n                                    );\n                                },\n                                Header: x => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selectAll === 1}\n                                            ref={input => {\n                                                if (input) {\n                                                    input.indeterminate = this.state.selectAll === 2;\n                                                }\n                                            }}\n                                            onChange={() => this.toggleSelectAll()}\n                                        />\n                                    );\n                                },\n                                sortable: false,\n                                width: 45\n                            },\n                        ]\n                    }].concat(\n                        this.props.columns.slice().map((item) => {\n                            return {...item, ...this.editableColumnProps}\n                        })\n                    )\n                        .concat(\n                            {\n                                Header: \"\",\n                                maxWidth: 90,\n                                filterable: false,\n                                getProps: this.getActionProps,\n                                Cell: ActionsCell\n                            }\n                        )\n            }\n        })\n    }\n\n    componentDidMount() {\n//for testo\n        apiProvider.getRowCounts(\"rules\").then((res) => {\n            this.setState({totalRows: res});\n        })\n        this.resetColumn()\n        this.props.handleData()\n    }\n\n    componentDidUpdate = (prevProps) => {\n\n        const restore = (prevProps.edited !== this.props.edited)\n        const ver = (prevProps.version !== this.props.version)\n        const resHead = (prevProps.headRestore !== this.props.headRestore)\n        const cond = (prevProps.refre !== this.props.refre)\n        const nField = (prevProps.newField !== this.props.newField)\n        const col = (prevProps.header !== this.props.header)\n\n        if (cond && this.props.refre && this.props.edited == 0) {\n            this.setState({editing: null})\n            this.adjustColumn(true)\n        }\n        if (this.props.edited !== 0 && restore) {\n            this.adjustColumn(false)\n        }\n        if (col) {\n            this.resetColumn()\n        }\n        if (cond) {\n            this.props.handleHeadVer(this.props.version)\n            this.resetColumn()\n        }\n        if (resHead && this.props.headRestore) {\n            console.log(this.props.data[0].ver)\n            this.props.restoreVer(this.props.data[0].ver)\n            this.props.handleHeadVer(this.props.data[0].ver)\n            this.props.resHead(false)\n        }\n        if (nField) {\n            const nCol = this.state.columns\n            nCol.splice(-1, 0, {\n                Header: this.props.newField,\n                accessor: this.props.newField, ...this.editableColumnProps\n            })\n            this.setState((state) => {\n                return {\n                    ...state, columns: nCol\n                }\n            })\n        }\n        if (ver) {\n            this.handleSaveNewVer()\n        }\n    }\n\n\n    selectableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'select' : 'p';\n        const children = //여기 value 에 직접 넣을 수 있으면 좋을텐데.\n            (!editing && <HighlightCell value={value} {...rest} />) || <React.Fragment>\n                <option>{value}</option>\n                {this.getSelect(\"typeList\", value).map(\n                    (item, index) => (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                )}\n            </React.Fragment>;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n\n    editableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        //input안에 name있음 이거 가지고 action넣으면 되지 않을까\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    isSelectField = (col) => [\"type\", \"group\"].indexOf(col) !== -1\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n    handleCellClick = (data) => {\n        // this.props.handleRow(data)\n    }\n\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(this.props.data.length)\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) {\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n        console.log(this.state.selected)\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        console.log(this.state.selected)\n        if (this.state.selectAll === 0) {\n            this.props.data.forEach(x => {\n                newSelected[x.id] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    handleSubmit = (values) => {\n        this.props.editSave([values.id, ...this.props.editId])\n\n        console.log(\"why not cancel?\") //TODO::cancel이 일로가는구나 버튼이 작아서 잘리네 잘 눌러야함..\n        this.setState((state) => {\n            this.props.addTmp(this.props.data.map((item) => {\n                return item.id === values.id ? values : item\n            }))\n\n            return state.adding ? {...state, adding: false} : {...state}\n\n        });\n    };\n\n    adjustColumn = (flag) => {\n        const last = this.state.columns[this.state.columns.length - 1]\n        const tmp = this.state.columns.slice().splice(0, this.state.columns.length - 1)\n        last.show = flag\n        this.setState({\n            columns: [\n                ...tmp,\n                last\n            ]\n        })\n    }\n    handleConFieldSelect = (ob) => {\n        this.props.setKfOb(ob)\n        this.props.openConSelectPopup()\n    }\n    handleKeyFieldSelect = (ob) => {\n        console.log(ob)\n        this.props.setKfOb(ob)\n        this.props.openKeySelectPopup()\n    }\n\n    handleFieldAdd = () => {\n        this.props.openSelectPopup()\n    }\n\n    handleGridData = async (version) => {\n        console.log(this.props.openReleasePop)\n        const tmp = this.props.data\n            .map((item) => {\n                const con = []\n                const res = (({id, active, ruletype, keyfield, confirms, ver, updatedat, ...other}) => {\n                    Object.keys(other)\n                        .filter(it => other[it] !== \"\")\n                        .forEach(it => {\n                            con.push({field: it, value: other[it]})\n                        })\n                    return ({id, active, ruletype, keyfield, confirms, ver: version})\n                })(item)\n                res['conditions'] = con\n                return res\n            })\n\n        if (this.props.edited != 0) {\n            apiProvider.restore(tmp, \"false\").then(() => {\n                this.props.revRe(true);\n                this.props.editZero();\n            })\n            this.adjustColumn(true)\n        } else {\n            this.state.willRemoved.length && this.state.willRemoved.forEach((id) => {\n                apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({willRemoved: []}))\n            })\n            apiProvider.upsertAndHistory(this.props.openReleasePop, tmp).then(() => {\n                this.props.revRe(true);\n                this.props.editSave([]);\n                this.props.delSave([]);\n            })\n        }\n    }\n\n    handleSaveNewVer = () => {\n        console.log(this.props.version)\n        const temp = this.state.columns.slice()\n        temp.splice(0, 1)\n        temp.splice(-1, 1)\n        const header = {\n            ver: this.props.version,\n            type: \"live\",\n            header: temp.map(({Header}) => Header)\n        }\n        apiProvider.deActiveHead().then(\n            () => apiProvider.insertHead(header).then(() => this.handleGridData(this.props.version))\n        )\n    }\n\n    handleSaveSameVer = (version) => {\n        apiProvider.deActiveHead().then(\n            apiProvider.activeHead(version).then(\n                () => this.handleGridData(version)\n            ))\n        // this.handleGridData()\n    }\n    handleSave = () => {\n        //밑에 조건 둘 중 무조건 하나만 실행됨. 그래야함..\n        if (this.props.columns.length != this.state.columns.length - 2) this.props.openSave()\n        else if (this.props.versionTmp !== \"\") this.handleSaveSameVer(this.props.versionTmp)\n        else this.handleGridData(this.props.version)\n\n    }\n\n    handleDelete = () => {\n        console.log(Object.keys(this.state.selected))\n        Object.keys(this.state.selected).forEach((i) => {\n            this.props.delTmp(i);\n            this.props.delSave(i);\n        })\n        this.setState((state) => {\n            return {\n                ...state,\n                selected: {},\n                willRemoved: [...Object.keys(this.state.selected), ...this.state.willRemoved]\n            }\n        })\n    }\n\n    handleAdd = async () => {\n        const addTemp = this.state.columns.slice()\n        addTemp.splice(-1, 1)\n        addTemp.splice(0, 1)\n        const tp = {};\n        addTemp.forEach(({accessor}) => {\n            tp[accessor] = \"\"\n        })\n        const i = await apiProvider.getNextId()\n        console.log(i)\n        tp.id = i + 1\n        // tp.id = this.props.data.length + 1\n        this.setState((state) => {\n            return {...state, editing: tp, adding: true}\n        })\n        this.props.addTmp([tp, ...this.props.data])\n    }\n\n\n    handleClickPopUp = (columnId, data) => {\n        switch (columnId) {\n            case \"keyfield\" :\n                return this.handleKeyFieldSelect(data)\n            case \"confirms\" :\n                return this.handleConFieldSelect(data)\n            default:\n                return\n        }\n    }\n\n    sendWithQuery = (filtered, offset, limit, pageSize) => {\n        const ob = {}\n        filtered.forEach(({id, value}) => {\n            ob[id] = value\n        })\n        const obj = {\n            offset: offset,\n            limit: limit,\n            filters: ob\n        }\n        apiProvider.getFiltersCounts(\"rules\", obj).then((res) => this.setState({totalRows: res}))\n        //TODO:: debounce it\n        apiProvider.getLiveRulesFilter(obj).then((res) => {\n            this.props.setData(res)\n            this.setState({loading: false, pages: Math.ceil(this.state.totalRows / pageSize)})\n        })\n    }\n\n    fetchData = (state, instance) => {\n\n        apiProvider.getRowCounts(\"rules\").then((res) => this.setState({totalRows: res}))\n        this.setState({loading: true})\n        const offset = state.page * state.pageSize\n        const limit = state.pageSize\n\n        //TODO::여기서 수정내역 있으면 save 하라고 popup 띄워야함.\n\n        state.filtered.length ? (\n            this.sendWithQuery(state.filtered, offset, limit, state.pageSize)\n        ) : (\n            apiProvider.getLiveRules(offset, limit).then((res) => {\n                this.props.setData(res)\n                this.setState({loading: false, pages: Math.ceil(this.state.totalRows / state.pageSize)})\n            })\n        )\n    }\n\n    render() {\n        const tableProps = this.props.edited == 0 ? {\n            manual: true,\n            pages: this.state.pages,\n            onFetchData: this.fetchData\n        } : {\n            manual: false\n        }\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                    <button className=\"btn\" onClick={this.handleAdd} disabled={this.props.edited !== 0}>\n                        Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleDelete} disabled={this.props.edited !== 0}>\n                        Delete\n                    </button>\n                    <button className=\"btn\" onClick={() => {\n                        this.props.editZero();\n                        this.props.revRe(true)\n                    }}>\n                        Refresh\n                    </button>\n\n                    <div className=\"seperate-bar-100\"/>\n\n                    <button className=\"btn\" onClick={() => {\n                        this.handleFieldAdd()\n                    }} disabled={this.props.edited !== 0}>\n                        Field Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleSave}>\n                        Save\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.openPop(true)} disabled={this.props.edited !== 0}>\n                        배포\n                    </button>\n                </div>\n                <div className=\"table-wrapper\">\n                    <div className=\"Fixed\">\n\n                        <FormProvider\n                            form=\"inline\"\n                            onSubmit={this.handleSubmit}\n                            onSubmitSuccess={() => this.setState({editing: null})}\n                            initialValues={this.state.editing}\n                            enableReinitialize\n                        >\n                            {(formProps) => {\n                                return (\n                                    <form onSubmit={formProps.handleSubmit}>\n                                        <Table\n                                            key={this.props.edited}\n                                            getTdProps={(state, rowInfo, column) => ({\n                                                onClick: () => (rowInfo !== undefined && this.state.editing) ? this.handleClickPopUp(column.id, rowInfo.original) : undefined\n                                            })}\n                                            columns={\n                                                this.state.columns\n                                            }\n                                            {...tableProps}\n                                            defaultPageSize={2}\n                                            data={this.props.data}\n                                            sorted={[{id: 'id'}]}\n\n                                            // defaultPageSize={10}\n                                        />\n                                        {this.props.selectKPop && <SelectKeyFieldPopup></SelectKeyFieldPopup>}\n                                        {this.props.selectCPop && <SelectConfirmsPopup></SelectConfirmsPopup>}\n                                        {this.props.openReleasePop && <ReleasePopup name=\"history/livedetectrule\"\n                                                                                    handleSave={this.handleSave}> </ReleasePopup>}\n                                    </form>\n                                );\n                            }}\n                        </FormProvider>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        version: state.fetchAPI.headVersion,\n        versionTmp: state.fetchAPI.headVersionTmp,\n        selectKPop: state.fetchAPI.openKeyField,\n        selectCPop: state.fetchAPI.openConField,\n        openReleasePop: state.fetchAPI.open,\n        kfOb: state.fetchAPI.keyField,\n        data: state.fetchAPI.data,\n        refre: state.fetchAPI.refre,\n        add: state.fetchAPI.ad,\n        hflag: state.fetchAPI.hflag,\n        newField: state.fetchAPI.addedField,\n        header: state.fetchAPI.header,\n        headRestore: state.fetchAPI.headRestore,\n        his: state.fetchAPI.startHistory,\n\n        edited: state.fetchAPI.edited,\n\n        addId: state.editOperator.addId,\n        delId: state.editOperator.delId,\n        editId: state.editOperator.editId,\n        savedData: state.editOperator.savedData\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                setKfOb: keyFieldSelect,\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                addedField: addedField,\n                setHead: selectHead,\n                resHead: restoreHead,\n                saveVer: saveVersion,\n                restoreVer: restoreVersion,\n                startHis: startHis,\n\n                editZero: editZero,\n                getData: apiProvider.getLiveRules,\n                getDataFilter: apiProvider.getLiveRulesFilter,\n\n                addSave: addSave,\n                delSave: delSave,\n                editSave: editSave,\n                dataSave: dataSave,\n                setData: getAllR\n            },\n            dispatch\n        )\n    }\n)(GridTableLDR)","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/gridTableH.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SavePopup.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop, openSavePop, openSelectConFieldPop,\n    openSelectKeyFieldPop,\n    openSelectPop, saveVersion\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {Field, change} from \"redux-form\";\nimport Table from \"react-table\";\n\nimport \"../table/style.scss\"\n\nexport default function SavePopup(props) {\n\n    const [version, setVersion] = React.useState(\"\")\n    const dispatch = useDispatch();\n\n    const onClose = () => {\n        dispatch(openSavePop(false))\n    }\n    const handleSave = () => {\n        //version 저장\n        dispatch(saveVersion(version))\n        dispatch(openSavePop(false))\n    }\n\n    return (\n\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{ width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    Save\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label> Fields Version Set </label>\n                        <input\n                            onChange = { (event) => setVersion(event.target.value)}\n                        >\n                        </input>\n                    </div>\n                </div>\n                <hr />\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={()=>handleSave()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n\n    )\n}\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectKeyFieldPopup.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {connect, useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {change, Field, getFormValues, FormName} from \"redux-form\";\nimport formValueSelector from \"redux-form/lib/formValueSelector\";\n\nfunction SelectKeyFieldPopup({values}) {\n\n\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    console.log(kfOb)\n    const data = useSelector(state => state.fetchAPI.data)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const dispatch = useDispatch();\n\n    //이거랑 ldr history table 복원할때 없어도 되는 필드가 안줄어들었던 것 같은데 확인해봐.\n    //지금 헤더 세팅되는거랑 테이블 저장되는거랑 달라서 그럼. <- 동기 맞출 것.\n    //TODO:: 전체가 없는 경우 new add 하는 경우 추가해야함 맞네  + 헤더가 값이 있는게 아무것도 없으면 알아서 없애야하나? + 값이 없던/아예 없던 새 필드에 값을 넣고 동시에 keyField 를 추가하려고 하면? 어떻게 되어야하지?\n    //멀 어캐 내 실제 condition field랑 new added field 합쳐서 keyfield select으로 줘야지 + version 빼고\n    //values 가져와서 쓰는것도 괜찮은 방법일듯. inline form 가져와서 밸류값 있으면 집어넣는거지. //-> redux form api\n    //TODO:: add 용, edit 용 따로 헤애힐 갓 같지? -> 나중에는 keyfield 에 있는 값 field 의 value 를 대상으로 validation 해야할 add 할 때는 그냥 값 먼저 넣으라고 해야지..\n    const condList = ({id, active, ruletype, keyfield, confirms, ...other}) => {\n\n        console.log(values) //여기서 값 있는거 하면 되겠다.\n\n        const li = Object.keys(other).filter(it => other[it] !== \"\") //이거 원본배열 바뀐다아\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruletype\", \"keyfield\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    //for confirms_popup\n    const handleSelect = () => {\n        // kfOb.keyField=selectKey //keyField 가 셀렉되면,,\n        // dispatch(keyFieldSelect(kfOb)) //이럴 필요가 있나? 응 이썽\n        //\n        // console.log(kfOb)\n        // const nVal = data.slice().filter( ({id}) => id !== kfOb.id)\n        // dispatch(addTmp([kfOb, ...nVal]))\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <Field name=\"keyfield\" component=\"select\">\n                            <option/>\n                            {/*<option>{kfOb.keyField}</option>*/}\n                            {condList(kfOb).map(\n                                (item, index) => (\n                                    <option key={index} value={item}>{item}</option>\n                                )\n                            )}\n                        </Field>\n                    </div>\n                </div>\n                <hr/>\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                    select\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default connect(state => ({\n    values: getFormValues(\"inline\")(state)\n}))(SelectKeyFieldPopup);","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectFieldPopup.js",["243","244","245","246","247","248","249","250"],"import React, {useEffect} from 'react'\n// import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\nimport { convertHex2Str } from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addedField, currType, hisFlag, openPop, openSelectPop} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\n// const useStyles = makeStyles(theme => ({\n//     dialogWrapper: {\n//         padding: theme.spacing(2),\n//         position: 'absolute',\n//         top: theme.spacing(5),\n//         maxWidth: 450\n//     },\n//     dialogTitle: {\n//         paddingRight: '0px'\n//     }\n// }))\n\nexport default function SelectFieldPopup(props) {\n\n\n    const colList = [\"test1\", \"test2\", \"test3\", \"test4\"]; //field list api\n    const [addField, setAddField] = React.useState();\n\n    const dispatch = useDispatch();\n\n    //TODO::list는 kfob에서 가져오고, save하면 어캐 저장하지\n\n    const handleSelect = () => {\n        dispatch(addedField(addField))\n        dispatch(openSelectPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{ width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <select\n                            onChange = { (event) => setAddField(event.target.value)}\n                        >\n                            <option></option>\n                            {colList.map(item=>(\n                                <option value={item}> {item} </option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <hr />\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={()=>handleSelect()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/ReleasePopup.js",["251","252","253","254","255","256","257","258","259","260"],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Provider.js",["261","262","263","264","265","266","267","268","269","270","271","272"],"import axios from 'axios';\nimport {\n    getAllR,\n    getGraphs,\n    getLinks,\n    getTmp,\n    getVens,\n    getAllH,\n    selectHead,\n    revRe,\n    saveVersion,\n    getAllHL, getAllHN\n} from \"./Redux/actions\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst BASE_URL = 'http://10.250.238.169:8096/api/v1'\n\nfunction getAllRedux(type) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.169:8096/api/v1/' + type + '/selectall')\n            .then(response => {\n                switch (type) {\n                    case \"normalizerule\":\n                        return dispatch(getAllR(response.data.map(\n                            ({vendors, ...other}) => {\n                                return {vendors: vendors.join(',').toString(), ...other}\n                            }\n                        )))\n                    default:\n                        return dispatch(getAllR(response.data))\n                }\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nfunction getNormalizeRuleFilter(obj) {\n    return async (dispatch) => {\n        await axios\n            .post('http://10.250.238.169:8096/api/v1/normalizerule/selectAllFilters', obj)\n            .then(response => {\n                console.log(response.data)\n                return dispatch(getAllR(response.data.slice().map(\n                    ({vendors, ...other}) => {\n                        return {vendors: vendors.join(',').toString(), ...other}\n                    }\n                )))\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nfunction getNormalizeRule(offset, limit) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.169:8096/api/v1/normalizerule/selectall?offset=' + offset + '&limit=' + limit)\n            .then(response => {\n                console.log(response.data)\n                return dispatch(getAllR(response.data.slice().map(\n                    ({vendors, ...other}) => {\n                        return {vendors: vendors.join(',').toString(), ...other}\n                    }\n                )))\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\nasync function getRowCounts(type) {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/' + type + '/getrowcount')\n        .then((res) => res.data)\n}\n\nasync function getFiltersCounts(type, obj) {\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/' + type + '/getFiltersCount', obj)\n        .then((res) => res.data)\n}\n\n\n//for history\nfunction getAll(type) {\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.169:8096/api/v1/' + type + '/selectall')\n            .then(response => {\n\n                switch (type) {\n                    case \"history\":\n                        return response.data.length && dispatch(getAllH(response.data))\n                    case \"history/livedetectrule\":\n                        return response.data.length && dispatch(getAllHL(response.data))\n                    case \"history/normalizerule\":\n                        return response.data.length && dispatch(getAllHN(response.data))\n                    default:\n                        return\n                }\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\n\nasync function deActiveHead() {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/header/deActive')\n        .catch(error => {\n            throw(error);\n        })\n}\n\nasync function insertHead(ob) {\n\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/header/insert', ob)\n}\n\nasync function activeHead(version) {\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/header/active', version)\n}\n\n// function insertHead (ob) {\n//     return async (dispatch) => {\n//         await axios\n//             .post('http://10.250.238.169:8096/api/v1/header/insert', ob)\n//             .then(response => {\n//                 dispatch(getHead)\n//             })\n//     }\n// }\nfunction getHeadVer(version) {\n    console.log(version)\n    return async (dispatch) => {\n        await axios\n            .get('http://10.250.238.169:8096/api/v1/header/selectHeaderVersion?ver=' + version)\n            .then(response => {\n                console.log(response.data.ver); //안가네\n                const res = response.data.header.map((it) =>\n                    Object.assign({}, {Header: it, accessor: it})\n                );\n                dispatch(selectHead(res));\n            })\n            .catch(error => {\n                throw(error);\n            })\n    }\n}\n\n//live 되어있는 헤드 가져오기\nasync function getHead() {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/header/selectheader')\n        .then(response => {\n            const res = response.data.header.map((it) =>\n                Object.assign({}, {Header: it, accessor: it})\n            )\n            // dispatch(saveVersion(response.data.ver)) //버전 세팅\n            // dispatch(selectHead(res))\n            console.log(response.data.ver)\n            return response.data.ver\n        })\n        .catch(error => {\n            throw(error);\n        })\n\n}\n\nasync function getLiveRulesFilter(obj) {\n        return await axios\n            .post('http://10.250.238.169:8096/api/v1/rules/selectAllFilters', obj)\n            .then(response => {\n                const res = response.data.map(({conditions, ...other}) => {\n                    const tp = {};\n                    conditions.forEach(\n                        ({field, value}) => {\n                            tp[field] = value\n                        }\n                    )\n                    return Object.assign({}, other, tp)\n                })\n                return res\n            })\n            .catch(error => {\n                throw(error);\n            })\n}\n\n//conditional field 땜에 떨어져있음.\nasync function getLiveRules(offset, limit) {\n\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/rules/selectall?offset=' + offset + '&limit=' + limit)\n        .then(response => {\n            const res = response.data.map(({conditions, ...other}) => {\n                const tp = {};\n                conditions.forEach(\n                    ({field, value}) => {\n                        tp[field] = value\n                    }\n                )\n                return Object.assign({}, other, tp)\n            })\n            return res\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\nasync function upsertAndHistory(release, rules){\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/rules/upsertAndHistory2?released=' + release, rules)\n        .catch((error)=>{\n            console.error(error)\n        })\n}\nasync function restore(rules, release){\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/rules/restore?released='+ release , rules)\n        .catch((error)=>{\n            console.error(error)\n        })\n}\nasync function updateRelease(){\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/history/livedetectrule/updateRelease')\n        .catch((error)=>{\n            console.error(error)\n        })\n}\n\nasync function getReleaseForm(type) {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/' + 'releaseForm' + '/select?type=' + type)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function signalZk(signals) {\n    console.log(signals)\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/' + 'rules' + '/signal', signals)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function parse(parseStr) {\n    console.log({parseStr})\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/normalizerule/parse', {parseStr})\n        .then(response => {\n            console.log(response)\n            return JSON.parse(decodeURIComponent(response.data.replace(/\\+/g, \"%20\")))\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n\n}\n\nasync function releaseZk(options) {\n    console.log(options)\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/' + 'rules' + '/zookeeper', options)\n        .then(response => {\n            console.log(response.data)\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\n\nfunction getNodes() { //select all => table 조회 용\n    return async (dispatch) => {\n        await axios.all([\n            axios.get(\"http://10.250.238.169:8096/api/v1/node/selectall\"),\n            axios.get(\"http://10.250.238.169:8096/api/v1/link/selectall\")\n        ])\n            .then(axios.spread(function (node, link) {\n                const m = {}\n                node.data.forEach((i) => {\n                    m[i.id] = i.name\n                })\n                console.log(link.data)\n                dispatch(getLinks(\n                    link.data.map((i) => ({idx: i.id, ...i}))\n                ))\n            }))\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n}\n\nfunction getAds(nodeId) { // select 인접 노드\n    return async (dispatch) => {\n        await axios.get(\"http://10.250.238.169:8096/api/v1/node/selectadjacent/\" + nodeId)\n            .then(response => {\n                dispatch(getGraphs(\n                    response.data.nodes,\n                    response.data.links\n                ))\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n\n    }\n}\n\nasync function getAds2(nodeId) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/node/selectadjacent/\" + nodeId)\n        .then(response => {\n            return response.data\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getRow(type, id) {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/' + type + '/select?id=' + id)\n        .then(response => {\n            console.log([...response.data].shift())\n            return [...response.data].shift();\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nfunction getTemp(type) {\n    return (dispatch) => {\n        axios\n            .get('http://10.250.238.169:8096/api/v1/template/selectbytype?node=' + type)\n            .then(response => {\n                dispatch(getTmp(response.data))\n            })\n            .catch(error => {\n                throw(error);\n            })\n\n    }\n}\n\nasync function getTypes(type) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/template/entitytypes?node=\" + type)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getVendors(enType) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/template/vendors?entity=\" + enType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getModels(enType, venType) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/template/models?entity=\" + enType + \"&vendor=\" + venType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\n// 추가 가능한 entity list 조회\nasync function getEna(enType) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/asset/selectbyquery?entityType=\" + enType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getEnd(enType, venType, moType) {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/device/selectbyquery?entityType=\" + enType + \"&vendor=\" + venType + \"&model=\" + moType)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insertLink(ob) {\n\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/link/insert', ob)\n        .then(response => {\n            console.log(response)\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n\n}\n\nasync function insertLiveDetect(ob, version) {\n    const con = []\n    const res = (({id, active, ruleType, keyField, confirms, ver, ...other}) => {\n        Object.keys(other)\n            .filter(it => other[it] !== \"\")\n            .forEach(it => {\n                con.push({field: it, value: other[it]})\n            })\n        return ({active, ruleType, keyField, confirms, ver: version})\n    })(ob)\n    res['conditions'] = con\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/rules/insert', res)\n        .then(() => console.log(\"hi\"))\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insert(type, ob) {\n    // const sob = (({id, createdAt, updatedAt, ... other}) => other)(ob)\n    const sob = (({id, updatedAt, ...other}) => other)(ob) //여기서 id를 빼는데.\n    // console.log(typeof sob.value)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/' + type + '/insert', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n\n};\n\n\nasync function insertNormal(ob) {\n    // ob[\"rules\"] = []\n    const sob = (({vendors, ...other}) => {\n        return Object.assign({}, {vendors: vendors.split(',')}, other) //TODO::restore 할때 vendor 콤마가 사라짐\n    })(ob)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/normalizerule/upsertall', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function insertNormalTotal(ob) {\n    const sob = (({vendors, ...other}) => {\n        return Object.assign({}, {vendors: vendors.split(',')}, other)\n    })(ob)\n    console.log(sob)\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/normalizerule/upsert', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function setHistory() {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/normalizerule/selectall/tohistory\")\n        .then((response) => console.log(response.data))\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getNextVal() {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/normalizerule/nextid\")\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function getNextId() {\n    return await axios\n        .get(\"http://10.250.238.169:8096/api/v1/rules/next_id\")\n        .then((res)=> res.data)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function update(type, ob) {\n    console.log(ob)\n    const sob = (({createdAt, updatedAt, ...other}) => other)(ob)\n\n    return await axios\n        .post('http://10.250.238.169:8096/api/v1/' + type + '/update', sob)\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function del(type, ids) {\n    console.log(ids)\n    return await axios\n        .delete('http://10.250.238.169:8096/api/v1/' + type + '/delete', {\n            headers: {'Content-Type': 'application/json'},\n            data: ids\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function delNormal(type, id) {\n    return await axios\n        .delete('http://10.250.238.169:8096/api/v1/' + type + '/delete', {\n            headers: {'Content-Type': 'application/json'},\n            data: id\n        })\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nasync function delAll(type) {\n    return await axios\n        .get('http://10.250.238.169:8096/api/v1/' + type + '/deleteAll')\n        .catch((error) => {\n            console.error(error)\n        })\n}\n\nexport const apiProvider = {\n    insert,\n    update,\n    del,\n    delNormal,\n    delAll,\n    getAllRedux,\n    getNormalizeRule,\n    getNormalizeRuleFilter,\n    getHead,\n    getReleaseForm,\n    releaseZk,\n    parse,\n    signalZk,\n    getAll,\n    getRow,\n    getTemp,\n    getTypes,\n    getVendors,\n    getModels,\n    getNodes,\n    getEna,\n    getEnd,\n    getNextVal,\n    setHistory,\n    insertLink,\n    getAds,\n    getAds2,\n    getLiveRules,\n    getLiveRulesFilter,\n    insertLiveDetect,\n    restore,\n    updateRelease,\n    insertNormal,\n    insertNormalTotal,\n    insertHead,\n    activeHead,\n    getHeadVer,\n    getRowCounts,\n    getFiltersCounts,\n    deActiveHead,\n    upsertAndHistory,\n    getNextId\n\n};","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/Pagination.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/GridFilters.js",["273"],"import HighlightCell from \"./HighlightCell\";\n\nfunction containsInsensitive(filter, row) {\n  return (\n    row[filter.id] == null ||\n    String(row[filter.id])\n      .toLowerCase()\n      .includes(filter.value.toLowerCase())\n  );\n}\n\nfunction getFiltered(gridState) {\n  return { filtered: gridState.filtered };\n}\n\nexport default {\n  Cell: HighlightCell,\n  filterable: true,\n  filterMethod: containsInsensitive,\n  getProps: getFiltered\n};\n//얘는 뭐지? 그냥 props value들 함수로 export 한거구나. 일단 grid table에 cell 인자로 주는게 뭔지 봐야겠다\n","/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/HighlightCell.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/ActionsCell.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/FormProvider.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/dataFactory.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/table/AvatarCell.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/services/Redux/actions/index.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/util/utils.js",[],"/home/yonggeon/workspace/admin-ui/handsover/frontend/src/components/popup/SelectConfirmsPopup.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop, openSelectConFieldPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {Field, change} from \"redux-form\";\nimport Table from \"react-table\";\n\nimport \"../table/style.scss\"\n\nexport default function SelectConfirmsPopup(props) {\n\n    //TODO:: submit 누르면 dispatch(change)) 하기.\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const [selField, setSelField] = React.useState(\"\")\n    const [selConType, setSelConType] = React.useState(\"\")\n\n\n    const [data, setData] = React.useState([])\n\n    const conType = [\"String\", \"Numeric\", \"IP\"]\n\n    const columns = [\n        {Header: \"Field\", accessor: \"field\"},\n        {Header: \"Condition Type\", accessor: \"conType\"}\n    ];\n\n    const condList = ({id, active, ruletype, keyfield, confirms, ...other}) => {\n        const li = Object.keys(other).filter(it => other[it] !== \"\")\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruletype\", \"keyfield\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    const dispatch = useDispatch();\n\n    const handleSelect = () => {\n        let res = []\n        data.forEach((it)=>{\n            res = [...res, it.conType !== \"String\" ? (it.conType.charAt(0) + \":\" + it.field) : it.field]\n        })\n        dispatch(change(\"inline\", \"confirms\", res.join(',')))\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const handleAdd = () => {\n        setData([...data, {field:selField, conType:selConType}])\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div className=\"popup__body\">\n\n                <button type=\"button\" className=\"btn\" onClick={(e) => (selField && selConType) && handleAdd()}>\n                    Add\n                </button>\n\n\n                <div\n                    className=\"table-wrapper\"\n                >\n                    <table className=\"signal-option-table\">\n                        <colgroup>\n                            <col style={{width: \"240px\"}}/>\n                            <col/>\n                            <col style={{width: \"30px\"}}/>\n                        </colgroup>\n                        <thead>\n                        <tr>\n                            <th>Select Field</th>\n                            <th>Select Condition Type</th>\n                            <th></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelField(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {condList(kfOb).map(\n                                        (item, index) => (\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelConType(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {conType.map(\n                                        (item, index)=>(\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"table-wrapper\">\n                    <Table\n                        columns={columns}\n                        data={data}\n                        defaultPageSize={5}\n                    >\n                    </Table>\n                </div>\n\n                <div className=\"popup__footer\">\n                    <button\n                        className=\"btn\"\n                        onClick={() => onClose()}\n                    >\n                        cancel\n                    </button>\n                    <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                        select\n                    </button>\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n",{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"296","line":2,"column":24,"nodeType":"294","messageId":"295","endLine":2,"endColumn":29},{"ruleId":"292","severity":1,"message":"297","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":14},{"ruleId":"292","severity":1,"message":"298","line":3,"column":16,"nodeType":"294","messageId":"295","endLine":3,"endColumn":21},{"ruleId":"292","severity":1,"message":"299","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":20},{"ruleId":"292","severity":1,"message":"300","line":7,"column":9,"nodeType":"294","messageId":"295","endLine":7,"endColumn":19},{"ruleId":"301","severity":1,"message":"302","line":157,"column":29,"nodeType":"303","messageId":"304","endLine":157,"endColumn":31},{"ruleId":"292","severity":1,"message":"305","line":2,"column":9,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"300","line":2,"column":18,"nodeType":"294","messageId":"295","endLine":2,"endColumn":28},{"ruleId":"292","severity":1,"message":"306","line":2,"column":30,"nodeType":"294","messageId":"295","endLine":2,"endColumn":40},{"ruleId":"292","severity":1,"message":"307","line":3,"column":8,"nodeType":"294","messageId":"295","endLine":3,"endColumn":16},{"ruleId":"292","severity":1,"message":"308","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":20},{"ruleId":"292","severity":1,"message":"309","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":18},{"ruleId":"292","severity":1,"message":"310","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":18},{"ruleId":"292","severity":1,"message":"311","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":17},{"ruleId":"292","severity":1,"message":"312","line":8,"column":8,"nodeType":"294","messageId":"295","endLine":8,"endColumn":12},{"ruleId":"292","severity":1,"message":"313","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":16},{"ruleId":"292","severity":1,"message":"314","line":11,"column":9,"nodeType":"294","messageId":"295","endLine":11,"endColumn":13},{"ruleId":"292","severity":1,"message":"315","line":16,"column":10,"nodeType":"294","messageId":"295","endLine":16,"endColumn":22},{"ruleId":"292","severity":1,"message":"316","line":49,"column":12,"nodeType":"294","messageId":"295","endLine":49,"endColumn":16},{"ruleId":"292","severity":1,"message":"317","line":53,"column":11,"nodeType":"294","messageId":"295","endLine":53,"endColumn":22},{"ruleId":"292","severity":1,"message":"318","line":2,"column":9,"nodeType":"294","messageId":"295","endLine":2,"endColumn":15},{"ruleId":"292","severity":1,"message":"319","line":2,"column":17,"nodeType":"294","messageId":"295","endLine":2,"endColumn":23},{"ruleId":"292","severity":1,"message":"320","line":2,"column":37,"nodeType":"294","messageId":"295","endLine":2,"endColumn":44},{"ruleId":"292","severity":1,"message":"321","line":27,"column":11,"nodeType":"294","messageId":"295","endLine":27,"endColumn":18},{"ruleId":"292","severity":1,"message":"322","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":14},{"ruleId":"292","severity":1,"message":"323","line":4,"column":24,"nodeType":"294","messageId":"295","endLine":4,"endColumn":32},{"ruleId":"292","severity":1,"message":"324","line":4,"column":34,"nodeType":"294","messageId":"295","endLine":4,"endColumn":47},{"ruleId":"292","severity":1,"message":"325","line":5,"column":9,"nodeType":"294","messageId":"295","endLine":5,"endColumn":15},{"ruleId":"292","severity":1,"message":"321","line":14,"column":11,"nodeType":"294","messageId":"295","endLine":14,"endColumn":18},{"ruleId":"292","severity":1,"message":"326","line":1,"column":26,"nodeType":"294","messageId":"295","endLine":1,"endColumn":32},{"ruleId":"292","severity":1,"message":"300","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":19},{"ruleId":"292","severity":1,"message":"327","line":7,"column":5,"nodeType":"294","messageId":"295","endLine":7,"endColumn":10},{"ruleId":"292","severity":1,"message":"328","line":9,"column":5,"nodeType":"294","messageId":"295","endLine":9,"endColumn":10},{"ruleId":"292","severity":1,"message":"329","line":10,"column":5,"nodeType":"294","messageId":"295","endLine":10,"endColumn":14},{"ruleId":"292","severity":1,"message":"330","line":11,"column":5,"nodeType":"294","messageId":"295","endLine":11,"endColumn":13},{"ruleId":"292","severity":1,"message":"331","line":12,"column":5,"nodeType":"294","messageId":"295","endLine":12,"endColumn":12},{"ruleId":"292","severity":1,"message":"332","line":16,"column":8,"nodeType":"294","messageId":"295","endLine":16,"endColumn":20},{"ruleId":"292","severity":1,"message":"333","line":19,"column":8,"nodeType":"294","messageId":"295","endLine":19,"endColumn":27},{"ruleId":"292","severity":1,"message":"334","line":27,"column":11,"nodeType":"294","messageId":"295","endLine":27,"endColumn":18},{"ruleId":"292","severity":1,"message":"335","line":29,"column":11,"nodeType":"294","messageId":"295","endLine":29,"endColumn":21},{"ruleId":"292","severity":1,"message":"336","line":30,"column":12,"nodeType":"294","messageId":"295","endLine":30,"endColumn":18},{"ruleId":"292","severity":1,"message":"337","line":30,"column":20,"nodeType":"294","messageId":"295","endLine":30,"endColumn":29},{"ruleId":"292","severity":1,"message":"338","line":32,"column":11,"nodeType":"294","messageId":"295","endLine":32,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":44,"column":8,"nodeType":"341","endLine":44,"endColumn":10,"suggestions":"342"},{"ruleId":"292","severity":1,"message":"343","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":11},{"ruleId":"292","severity":1,"message":"344","line":6,"column":13,"nodeType":"294","messageId":"295","endLine":6,"endColumn":15},{"ruleId":"292","severity":1,"message":"345","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":19},{"ruleId":"292","severity":1,"message":"346","line":9,"column":9,"nodeType":"294","messageId":"295","endLine":9,"endColumn":26},{"ruleId":"292","severity":1,"message":"347","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":20},{"ruleId":"292","severity":1,"message":"348","line":15,"column":8,"nodeType":"294","messageId":"295","endLine":15,"endColumn":16},{"ruleId":"292","severity":1,"message":"349","line":23,"column":5,"nodeType":"294","messageId":"295","endLine":23,"endColumn":26},{"ruleId":"292","severity":1,"message":"350","line":27,"column":8,"nodeType":"294","messageId":"295","endLine":27,"endColumn":18},{"ruleId":"292","severity":1,"message":"351","line":33,"column":8,"nodeType":"294","messageId":"295","endLine":33,"endColumn":13},{"ruleId":"301","severity":1,"message":"352","line":139,"column":59,"nodeType":"303","messageId":"304","endLine":139,"endColumn":61},{"ruleId":"301","severity":1,"message":"302","line":323,"column":31,"nodeType":"303","messageId":"304","endLine":323,"endColumn":33},{"ruleId":"301","severity":1,"message":"302","line":365,"column":39,"nodeType":"303","messageId":"304","endLine":365,"endColumn":41},{"ruleId":"301","severity":1,"message":"352","line":454,"column":46,"nodeType":"303","messageId":"304","endLine":454,"endColumn":48},{"ruleId":"292","severity":1,"message":"343","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":11},{"ruleId":"292","severity":1,"message":"353","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":15},{"ruleId":"292","severity":1,"message":"344","line":6,"column":13,"nodeType":"294","messageId":"295","endLine":6,"endColumn":15},{"ruleId":"292","severity":1,"message":"345","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":19},{"ruleId":"292","severity":1,"message":"354","line":8,"column":8,"nodeType":"294","messageId":"295","endLine":8,"endColumn":20},{"ruleId":"292","severity":1,"message":"346","line":9,"column":10,"nodeType":"294","messageId":"295","endLine":9,"endColumn":27},{"ruleId":"292","severity":1,"message":"355","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":19},{"ruleId":"292","severity":1,"message":"356","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":21},{"ruleId":"292","severity":1,"message":"357","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":19},{"ruleId":"292","severity":1,"message":"347","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":20},{"ruleId":"292","severity":1,"message":"348","line":15,"column":8,"nodeType":"294","messageId":"295","endLine":15,"endColumn":16},{"ruleId":"292","severity":1,"message":"331","line":17,"column":38,"nodeType":"294","messageId":"295","endLine":17,"endColumn":45},{"ruleId":"292","severity":1,"message":"350","line":20,"column":8,"nodeType":"294","messageId":"295","endLine":20,"endColumn":18},{"ruleId":"301","severity":1,"message":"352","line":70,"column":49,"nodeType":"303","messageId":"304","endLine":70,"endColumn":51},{"ruleId":"292","severity":1,"message":"358","line":99,"column":23,"nodeType":"294","messageId":"295","endLine":99,"endColumn":28},{"ruleId":"292","severity":1,"message":"359","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"360","line":2,"column":9,"nodeType":"294","messageId":"295","endLine":2,"endColumn":23},{"ruleId":"292","severity":1,"message":"347","line":3,"column":22,"nodeType":"294","messageId":"295","endLine":3,"endColumn":33},{"ruleId":"292","severity":1,"message":"361","line":5,"column":5,"nodeType":"294","messageId":"295","endLine":5,"endColumn":15},{"ruleId":"292","severity":1,"message":"362","line":5,"column":17,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"330","line":6,"column":5,"nodeType":"294","messageId":"295","endLine":6,"endColumn":13},{"ruleId":"292","severity":1,"message":"363","line":7,"column":5,"nodeType":"294","messageId":"295","endLine":7,"endColumn":12},{"ruleId":"292","severity":1,"message":"364","line":7,"column":14,"nodeType":"294","messageId":"295","endLine":7,"endColumn":28},{"ruleId":"292","severity":1,"message":"365","line":8,"column":5,"nodeType":"294","messageId":"295","endLine":8,"endColumn":12},{"ruleId":"292","severity":1,"message":"366","line":8,"column":27,"nodeType":"294","messageId":"295","endLine":8,"endColumn":48},{"ruleId":"292","severity":1,"message":"349","line":9,"column":5,"nodeType":"294","messageId":"295","endLine":9,"endColumn":26},{"ruleId":"292","severity":1,"message":"367","line":10,"column":5,"nodeType":"294","messageId":"295","endLine":10,"endColumn":18},{"ruleId":"292","severity":1,"message":"368","line":12,"column":9,"nodeType":"294","messageId":"295","endLine":12,"endColumn":20},{"ruleId":"292","severity":1,"message":"353","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"292","severity":1,"message":"369","line":13,"column":16,"nodeType":"294","messageId":"295","endLine":13,"endColumn":22},{"ruleId":"292","severity":1,"message":"370","line":14,"column":8,"nodeType":"294","messageId":"295","endLine":14,"endColumn":13},{"ruleId":"292","severity":1,"message":"359","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"360","line":2,"column":9,"nodeType":"294","messageId":"295","endLine":2,"endColumn":23},{"ruleId":"292","severity":1,"message":"361","line":5,"column":5,"nodeType":"294","messageId":"295","endLine":5,"endColumn":15},{"ruleId":"292","severity":1,"message":"362","line":5,"column":17,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"330","line":6,"column":5,"nodeType":"294","messageId":"295","endLine":6,"endColumn":13},{"ruleId":"292","severity":1,"message":"363","line":7,"column":5,"nodeType":"294","messageId":"295","endLine":7,"endColumn":12},{"ruleId":"292","severity":1,"message":"364","line":7,"column":14,"nodeType":"294","messageId":"295","endLine":7,"endColumn":28},{"ruleId":"292","severity":1,"message":"365","line":8,"column":5,"nodeType":"294","messageId":"295","endLine":8,"endColumn":12},{"ruleId":"292","severity":1,"message":"367","line":10,"column":5,"nodeType":"294","messageId":"295","endLine":10,"endColumn":18},{"ruleId":"292","severity":1,"message":"368","line":12,"column":9,"nodeType":"294","messageId":"295","endLine":12,"endColumn":20},{"ruleId":"292","severity":1,"message":"369","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":15},{"ruleId":"292","severity":1,"message":"371","line":13,"column":39,"nodeType":"294","messageId":"295","endLine":13,"endColumn":47},{"ruleId":"292","severity":1,"message":"372","line":14,"column":8,"nodeType":"294","messageId":"295","endLine":14,"endColumn":25},{"ruleId":"292","severity":1,"message":"373","line":21,"column":11,"nodeType":"294","messageId":"295","endLine":21,"endColumn":15},{"ruleId":"292","severity":1,"message":"374","line":23,"column":12,"nodeType":"294","messageId":"295","endLine":23,"endColumn":21},{"ruleId":"292","severity":1,"message":"375","line":23,"column":23,"nodeType":"294","messageId":"295","endLine":23,"endColumn":35},{"ruleId":"292","severity":1,"message":"359","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"360","line":6,"column":10,"nodeType":"294","messageId":"295","endLine":6,"endColumn":24},{"ruleId":"292","severity":1,"message":"347","line":7,"column":22,"nodeType":"294","messageId":"295","endLine":7,"endColumn":33},{"ruleId":"292","severity":1,"message":"330","line":8,"column":21,"nodeType":"294","messageId":"295","endLine":8,"endColumn":29},{"ruleId":"292","severity":1,"message":"363","line":8,"column":31,"nodeType":"294","messageId":"295","endLine":8,"endColumn":38},{"ruleId":"292","severity":1,"message":"365","line":8,"column":40,"nodeType":"294","messageId":"295","endLine":8,"endColumn":47},{"ruleId":"292","severity":1,"message":"368","line":9,"column":9,"nodeType":"294","messageId":"295","endLine":9,"endColumn":20},{"ruleId":"292","severity":1,"message":"376","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":15},{"ruleId":"292","severity":1,"message":"377","line":8,"column":9,"nodeType":"294","messageId":"295","endLine":8,"endColumn":16},{"ruleId":"292","severity":1,"message":"378","line":8,"column":18,"nodeType":"294","messageId":"295","endLine":8,"endColumn":26},{"ruleId":"292","severity":1,"message":"363","line":8,"column":28,"nodeType":"294","messageId":"295","endLine":8,"endColumn":35},{"ruleId":"292","severity":1,"message":"379","line":8,"column":46,"nodeType":"294","messageId":"295","endLine":8,"endColumn":51},{"ruleId":"292","severity":1,"message":"376","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":15},{"ruleId":"292","severity":1,"message":"373","line":16,"column":11,"nodeType":"294","messageId":"295","endLine":16,"endColumn":15},{"ruleId":"292","severity":1,"message":"380","line":17,"column":11,"nodeType":"294","messageId":"295","endLine":17,"endColumn":19},{"ruleId":"292","severity":1,"message":"381","line":18,"column":11,"nodeType":"294","messageId":"295","endLine":18,"endColumn":20},{"ruleId":"292","severity":1,"message":"382","line":19,"column":11,"nodeType":"294","messageId":"295","endLine":19,"endColumn":17},{"ruleId":"292","severity":1,"message":"383","line":20,"column":11,"nodeType":"294","messageId":"295","endLine":20,"endColumn":16},{"ruleId":"292","severity":1,"message":"384","line":7,"column":5,"nodeType":"294","messageId":"295","endLine":7,"endColumn":12},{"ruleId":"292","severity":1,"message":"379","line":10,"column":5,"nodeType":"294","messageId":"295","endLine":10,"endColumn":10},{"ruleId":"292","severity":1,"message":"385","line":11,"column":5,"nodeType":"294","messageId":"295","endLine":11,"endColumn":16},{"ruleId":"292","severity":1,"message":"386","line":14,"column":9,"nodeType":"294","messageId":"295","endLine":14,"endColumn":20},{"ruleId":"292","severity":1,"message":"387","line":17,"column":7,"nodeType":"294","messageId":"295","endLine":17,"endColumn":15},{"ruleId":"292","severity":1,"message":"388","line":166,"column":19,"nodeType":"294","messageId":"295","endLine":166,"endColumn":22},{"ruleId":"389","severity":1,"message":"390","line":245,"column":51,"nodeType":"303","messageId":"391","endLine":245,"endColumn":52},{"ruleId":"389","severity":1,"message":"390","line":245,"column":67,"nodeType":"303","messageId":"391","endLine":245,"endColumn":68},{"ruleId":"389","severity":1,"message":"390","line":254,"column":52,"nodeType":"303","messageId":"391","endLine":254,"endColumn":53},{"ruleId":"389","severity":1,"message":"390","line":254,"column":62,"nodeType":"303","messageId":"391","endLine":254,"endColumn":63},{"ruleId":"389","severity":1,"message":"390","line":277,"column":52,"nodeType":"303","messageId":"391","endLine":277,"endColumn":53},{"ruleId":"389","severity":1,"message":"390","line":277,"column":62,"nodeType":"303","messageId":"391","endLine":277,"endColumn":63},{"ruleId":"392","severity":1,"message":"393","line":16,"column":1,"nodeType":"394","endLine":21,"endColumn":3},{"ruleId":"292","severity":1,"message":"359","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"360","line":2,"column":9,"nodeType":"294","messageId":"295","endLine":2,"endColumn":23},{"ruleId":"292","severity":1,"message":"361","line":5,"column":5,"nodeType":"294","messageId":"295","endLine":5,"endColumn":15},{"ruleId":"292","severity":1,"message":"362","line":5,"column":17,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"330","line":6,"column":5,"nodeType":"294","messageId":"295","endLine":6,"endColumn":13},{"ruleId":"292","severity":1,"message":"363","line":7,"column":5,"nodeType":"294","messageId":"295","endLine":7,"endColumn":12},{"ruleId":"292","severity":1,"message":"364","line":7,"column":14,"nodeType":"294","messageId":"295","endLine":7,"endColumn":28},{"ruleId":"292","severity":1,"message":"365","line":8,"column":5,"nodeType":"294","messageId":"295","endLine":8,"endColumn":12},{"ruleId":"292","severity":1,"message":"349","line":9,"column":5,"nodeType":"294","messageId":"295","endLine":9,"endColumn":26},{"ruleId":"292","severity":1,"message":"367","line":10,"column":5,"nodeType":"294","messageId":"295","endLine":10,"endColumn":18},{"ruleId":"292","severity":1,"message":"368","line":12,"column":9,"nodeType":"294","messageId":"295","endLine":12,"endColumn":20},{"ruleId":"292","severity":1,"message":"353","line":13,"column":9,"nodeType":"294","messageId":"295","endLine":13,"endColumn":14},{"ruleId":"292","severity":1,"message":"374","line":23,"column":12,"nodeType":"294","messageId":"295","endLine":23,"endColumn":21},{"ruleId":"292","severity":1,"message":"375","line":23,"column":23,"nodeType":"294","messageId":"295","endLine":23,"endColumn":35},"no-native-reassign",["395"],"no-negated-in-lhs",["396"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'CssBaseline' is defined but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Divider' is defined but never used.","'Typography' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'PropTypes' is defined but never used.","'List' is defined but never used.","'Collapse' is defined but never used.","'Link' is defined but never used.","'ListItemLink' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'Toolbar' is defined but never used.","'classes' is assigned a value but never used.","'Asset' is defined but never used.","'Relation' is defined but never used.","'NormalizeRule' is defined but never used.","'Repeat' is defined but never used.","'useRef' is defined but never used.","'revAd' is defined but never used.","'revOp' is defined but never used.","'clickedOp' is defined but never used.","'currType' is defined but never used.","'getAllR' is defined but never used.","'ReleasePopup' is defined but never used.","'SelectKeyFieldPopup' is defined but never used.","'openPop' is assigned a value but never used.","'selectKPop' is assigned a value but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'version' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["397"],"'set' is defined but never used.","'BS' is defined but never used.","'initialData' is defined but never used.","'avatarColumnProps' is defined but never used.","'useSelector' is defined but never used.","'fetchAPI' is defined but never used.","'openSelectKeyFieldPop' is defined but never used.","'Pagination' is defined but never used.","'axios' is defined but never used.","Expected '===' and instead saw '=='.","'Field' is defined but never used.","'FormProvider' is defined but never used.","'ActionsCell' is defined but never used.","'HighlightCell' is defined but never used.","'GridFilters' is defined but never used.","'hisId' is assigned a value but never used.","'useEffect' is defined but never used.","'convertHex2Str' is defined but never used.","'addedField' is defined but never used.","'addTmp' is defined but never used.","'hisFlag' is defined but never used.","'keyFieldSelect' is defined but never used.","'openPop' is defined but never used.","'openSelectConFieldPop' is defined but never used.","'openSelectPop' is defined but never used.","'apiProvider' is defined but never used.","'change' is defined but never used.","'Table' is defined but never used.","'FormName' is defined but never used.","'formValueSelector' is defined but never used.","'data' is assigned a value but never used.","'selectKey' is assigned a value but never used.","'setSelectKey' is assigned a value but never used.","'isEqual' is defined but never used.","'delSave' is defined but never used.","'editZero' is defined but never used.","'revRe' is defined but never used.","'currData' is assigned a value but never used.","'savedData' is assigned a value but never used.","'editId' is assigned a value but never used.","'delId' is assigned a value but never used.","'getVens' is defined but never used.","'saveVersion' is defined but never used.","'useDispatch' is defined but never used.","'BASE_URL' is assigned a value but never used.","'res' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"398","fix":"399"},"Update the dependencies array to be: [dispatch]",{"range":"400","text":"401"},[1710,1712],"[dispatch]"]
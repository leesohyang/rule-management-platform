{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectKeyFieldPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { convertHex2Str } from \"../util/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addedField, addTmp, currType, hisFlag, keyFieldSelect, openPop, openSelectKeyFieldPop, openSelectPop } from \"../../services/Redux/actions\";\nimport { apiProvider } from \"../../services/Provider\";\nimport { change, Field } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectKeyFieldPopup(props) {\n  _s();\n\n  const kfOb = useSelector(state => state.fetchAPI.keyField);\n  console.log(kfOb);\n  const data = useSelector(state => state.fetchAPI.data);\n  const headers = useSelector(state => state.fetchAPI.header);\n  const [selectKey, setSelectKey] = React.useState(\"\");\n  const dispatch = useDispatch(); //TODO:: 전체가 없는 경우 new add 하는 경우 추가해야함 맞네  + 헤더가 값이 있는게 아무것도 없으면 알아서 없애야하나? + 값이 없던/아예 없던 새 필드에 값을 넣고 동시에 keyField 를 추가하려고 하면? 어떻게 되어야하지?\n  //멀 어캐 내 실제 condition field랑 new added field 합쳐서 keyfield select으로 줘야지 + version 빼고\n  //values 가져와서 쓰는것도 괜찮은 방법일듯. inline form 가져와서 밸류값 있으면 집어넣는거지. //-> redux form getFormValues\n\n  const condList = ({\n    id,\n    active,\n    ruleType,\n    keyField,\n    confirms,\n    ...other\n  }) => {\n    console.log(other);\n    const li = Object.keys(other).filter(it => other[it] !== \"\"); //이거 원본배열 바뀐다아\n\n    return !li.length ? headers.slice().map(({\n      Header\n    }) => Header).filter(it => [\"id\", \"active\", \"ruleType\", \"keyField\", \"confirms\"].indexOf(it) === -1) : li;\n  }; //for confirms_popup\n\n\n  const handleSelect = () => {\n    // kfOb.keyField=selectKey //keyField 가 셀렉되면,,\n    // dispatch(keyFieldSelect(kfOb)) //이럴 필요가 있나? 응 이썽\n    //\n    // console.log(kfOb)\n    // const nVal = data.slice().filter( ({id}) => id !== kfOb.id)\n    // dispatch(addTmp([kfOb, ...nVal]))\n    dispatch(openSelectKeyFieldPop(false));\n  };\n\n  const onClose = () => {\n    dispatch(openSelectKeyFieldPop(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup--dark\",\n    id: \"releaseOptionPopup\",\n    style: {\n      width: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"select Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: () => onClose()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__body release-option-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"release-option-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"release-option-tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Field to Add : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"keyField\",\n            component: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), condList(kfOb).map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item,\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onClose(),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--blue\",\n        onClick: () => handleSelect(),\n        children: \"select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectKeyFieldPopup, \"axSwooOm1m7NuLPx4saKF5VlIQ4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = SelectKeyFieldPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectKeyFieldPopup\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectKeyFieldPopup.js"],"names":["React","useEffect","convertHex2Str","useDispatch","useSelector","addedField","addTmp","currType","hisFlag","keyFieldSelect","openPop","openSelectKeyFieldPop","openSelectPop","apiProvider","change","Field","SelectKeyFieldPopup","props","kfOb","state","fetchAPI","keyField","console","log","data","headers","header","selectKey","setSelectKey","useState","dispatch","condList","id","active","ruleType","confirms","other","li","Object","keys","filter","it","length","slice","map","Header","indexOf","handleSelect","onClose","width","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {change, Field} from \"redux-form\";\n\nexport default function SelectKeyFieldPopup(props) {\n\n\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    console.log(kfOb)\n    const data = useSelector(state => state.fetchAPI.data)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const dispatch = useDispatch();\n\n    //TODO:: 전체가 없는 경우 new add 하는 경우 추가해야함 맞네  + 헤더가 값이 있는게 아무것도 없으면 알아서 없애야하나? + 값이 없던/아예 없던 새 필드에 값을 넣고 동시에 keyField 를 추가하려고 하면? 어떻게 되어야하지?\n    //멀 어캐 내 실제 condition field랑 new added field 합쳐서 keyfield select으로 줘야지 + version 빼고\n    //values 가져와서 쓰는것도 괜찮은 방법일듯. inline form 가져와서 밸류값 있으면 집어넣는거지. //-> redux form getFormValues\n    const condList = ({id, active, ruleType, keyField, confirms, ...other}) => {\n        console.log(other)\n        const li = Object.keys(other).filter(it => other[it] !== \"\") //이거 원본배열 바뀐다아\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruleType\", \"keyField\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    //for confirms_popup\n    const handleSelect = () => {\n        // kfOb.keyField=selectKey //keyField 가 셀렉되면,,\n        // dispatch(keyFieldSelect(kfOb)) //이럴 필요가 있나? 응 이썽\n        //\n        // console.log(kfOb)\n        // const nVal = data.slice().filter( ({id}) => id !== kfOb.id)\n        // dispatch(addTmp([kfOb, ...nVal]))\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectKeyFieldPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <Field name=\"keyField\" component=\"select\">\n                            <option/>\n                            {/*<option>{kfOb.keyField}</option>*/}\n                            {condList(kfOb).map(\n                                (item, index) => (\n                                    <option key={index} value={item}>{item}</option>\n                                )\n                            )}\n                        </Field>\n                    </div>\n                </div>\n                <hr/>\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                    select\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
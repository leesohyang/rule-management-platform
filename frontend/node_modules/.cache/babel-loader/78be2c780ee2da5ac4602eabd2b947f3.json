{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRule.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { apiProvider } from \"../../services/Provider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { revAd, revRe, revOp, clickedOp, currType, getAllR, openSelectPop, openSelectKeyFieldPop, openSelectConFieldPop, openSavePop, clearClicked } from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport \"./style.scss\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport GridTableNormal from \"../../components/table/gridTableNormal\";\nimport SlidingPane from \"react-sliding-pane\";\nimport FormProvider from \"../../components/table/FormProvider\";\nimport Table from \"react-table\";\nimport SelectConfirmsPopup from \"../../components/popup/SelectConfirmsPopup\";\nimport NormalizeRuleDetail from \"./NormalizeRuleDetailTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NormalizeRule = () => {\n  _s();\n\n  const isOpen = useSelector(state => state.SlidePop.isOpen);\n  const data = useSelector(state => state.fetchAPI.data);\n  const cData = useSelector(state => state.SlidePop.clickedData);\n  const dispatch = useDispatch();\n\n  const handleChange = () => {\n    dispatch(revOp(false)); // dispatch(revRe(true))\n    // dispatch(clearClicked(''))\n    // props.onChangeClose();\n  };\n\n  const columns = [{\n    Header: \"ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Use\",\n    accessor: \"use\"\n  }, {\n    Header: \"Classifier\",\n    accessor: \"classifier\"\n  }, {\n    Header: \"Vendors\",\n    accessor: \"vendors\"\n  }];\n  useEffect(() => {\n    handleData();\n  }, []);\n\n  const handleData = () => {\n    // dispatch(apiProvider.getAllRedux(\"normalizerule\"))\n    dispatch(apiProvider.getNormalizeRule(0, 2));\n  };\n\n  const handleCellClicked = row => {\n    // const arr = [{data:1, not: false}, {data:2, not: false}, {data:3, not:false}];\n    // const copied = arr.slice()\n    // copied[0].data = 5\n    //\n    // console.log(arr) //바뀌어있음.\n    !data.slice().filter(i => i.id === row.id).shift().hasOwnProperty(\"rules\") ? apiProvider.getRow(\"normalizerule\", row.id).then(data => {\n      dispatch(clickedOp(data, true));\n    }) : dispatch(clickedOp(data.slice().filter(i => i.id === row.id).shift(), true));\n  };\n\n  const handleAddTotal = ob => {\n    apiProvider.insertNormalTotal(ob); //뭐 따로 리프레시 안하니?\n  };\n\n  const handleAdd = ob => {\n    apiProvider.insertNormal(ob);\n  };\n\n  const handleDataH = () => {\n    dispatch(apiProvider.getAll(\"history/normalizerule\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component component-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"component__title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header__title\",\n          children: \" Live Detect Rule \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"binder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridTableNormal, {\n        columns: columns,\n        handleData: handleData,\n        handleRow: handleCellClicked,\n        handleAddTotal: handleAddTotal,\n        handleAdd: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridTableH, {\n        name: \"normalizerule\",\n        handleData: handleDataH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SlidingPane, {\n        className: \"component component-list\",\n        overlayClassName: \"some-custom-overlay-class\",\n        isOpen: isOpen,\n        title: \"Rules\",\n        onRequestClose: handleChange,\n        children: /*#__PURE__*/_jsxDEV(NormalizeRuleDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NormalizeRule, \"Ko1bO7cCNUC3tWkQW6ZauWz07ps=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = NormalizeRule;\nexport default _c2 = /*#__PURE__*/React.memo(NormalizeRule);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NormalizeRule\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/NormalizeRule/NormalizeRule.js"],"names":["React","useState","useRef","useEffect","apiProvider","makeStyles","useDispatch","useSelector","revAd","revRe","revOp","clickedOp","currType","getAllR","openSelectPop","openSelectKeyFieldPop","openSelectConFieldPop","openSavePop","clearClicked","ReleasePopup","GridTable","SelectFieldPopup","SelectKeyFieldPopup","GridTableLDR","SavePopup","GridTableH","SlideTmp","GridTableNormal","SlidingPane","FormProvider","Table","SelectConfirmsPopup","NormalizeRuleDetail","NormalizeRule","isOpen","state","SlidePop","data","fetchAPI","cData","clickedData","dispatch","handleChange","columns","Header","accessor","handleData","getNormalizeRule","handleCellClicked","row","slice","filter","i","id","shift","hasOwnProperty","getRow","then","handleAddTotal","ob","insertNormalTotal","handleAdd","insertNormal","handleDataH","getAll","memo"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    revAd,\n    revRe,\n    revOp,\n    clickedOp,\n    currType,\n    getAllR,\n    openSelectPop,\n    openSelectKeyFieldPop, openSelectConFieldPop, openSavePop, clearClicked\n} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport \"./style.scss\"\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport SelectKeyFieldPopup from \"../../components/popup/SelectKeyFieldPopup\";\nimport GridTableLDR from \"../../components/table/gridTableLDR\";\nimport SavePopup from \"../../components/popup/SavePopup\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport GridTableNormal from \"../../components/table/gridTableNormal\";\nimport SlidingPane from \"react-sliding-pane\";\nimport FormProvider from \"../../components/table/FormProvider\";\nimport Table from \"react-table\";\nimport SelectConfirmsPopup from \"../../components/popup/SelectConfirmsPopup\";\nimport NormalizeRuleDetail from \"./NormalizeRuleDetailTable\";\n\n\nconst NormalizeRule = () => {\n\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const data = useSelector(state=>state.fetchAPI.data)\n    const cData = useSelector(state=>state.SlidePop.clickedData)\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n\n        dispatch(revOp(false))\n        // dispatch(revRe(true))\n        // dispatch(clearClicked(''))\n\n        // props.onChangeClose();\n    }\n\n    const columns = [\n\n        { Header: \"ID\", accessor: \"id\" },\n        { Header: \"Use\", accessor: \"use\" },\n        { Header: \"Classifier\", accessor: \"classifier\" },\n        { Header: \"Vendors\", accessor: \"vendors\" },\n    ]\n\n    useEffect(()=>{\n        handleData()\n    }, [])\n\n    const handleData = () => {\n        // dispatch(apiProvider.getAllRedux(\"normalizerule\"))\n        dispatch(apiProvider.getNormalizeRule(0, 2))\n    }\n\n    const handleCellClicked = (row) => {\n        // const arr = [{data:1, not: false}, {data:2, not: false}, {data:3, not:false}];\n        // const copied = arr.slice()\n        // copied[0].data = 5\n        //\n        // console.log(arr) //바뀌어있음.\n        (!data.slice().filter(i=>i.id === row.id).shift().hasOwnProperty(\"rules\")) ? (\n        apiProvider.getRow(\"normalizerule\", row.id)\n            .then((data)=>{\n                dispatch(clickedOp(data, true))\n            })\n        ) : dispatch(clickedOp(data.slice().filter(i=>i.id ===row.id).shift(), true))\n\n    }\n    const handleAddTotal = (ob) => {\n        apiProvider.insertNormalTotal(ob) //뭐 따로 리프레시 안하니?\n    }\n    const handleAdd = (ob) =>{\n        apiProvider.insertNormal(ob)\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history/normalizerule\"))\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Live Detect Rule </span>\n                    <div className=\"binder\" />\n                </div>\n                <GridTableNormal\n                    columns={columns}\n                    handleData={handleData}\n                    handleRow={handleCellClicked}\n                    handleAddTotal={handleAddTotal}\n                    handleAdd={handleAdd}\n                >\n\n                </GridTableNormal>\n\n                <GridTableH\n                    name=\"normalizerule\"\n                    handleData={handleDataH}\n                ></GridTableH>\n\n                <SlidingPane\n                    className=\"component component-list\"\n                    overlayClassName=\"some-custom-overlay-class\"\n                    isOpen = {isOpen}\n                    title= {\"Rules\"}\n                    onRequestClose= {handleChange}\n                >\n                    <NormalizeRuleDetail></NormalizeRuleDetail>\n                </SlidingPane>\n                {/*{ openPop && <ReleasePopup addf={addOrEdit}> </ReleasePopup>}*/}\n\n            </div>\n\n\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(NormalizeRule);"]},"metadata":{},"sourceType":"module"}
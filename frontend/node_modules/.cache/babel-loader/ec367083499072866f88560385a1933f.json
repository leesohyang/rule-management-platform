{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/components/forceGraph.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { runForceGraph } from \"./ForceGraphGenerator\";\nimport styles from \"./ForceGraph.module.css\";\nimport { useSelector } from \"react-redux\"; // import {getGraphs} from \"../services/Redux/actions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ForceGraph({\n  nodeHoverTooltip,\n  handleData\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const containerRef = React.useRef(null); //create Ref\n\n  const dataTmp = useSelector(state => state.fetchAPI.dataTmp); // const refresh = useSelector(state=>state.fetchAPI)\n  // const curr = useSelector(state => state.SlidePop.clickedData)\n  // const dispatch = useDispatch();\n\n  function useEffectSkipFirst(fn, arr) {\n    _s();\n\n    const isFirst = React.useRef(true);\n    useEffect(() => {\n      if (isFirst.current) {\n        isFirst.current = false;\n        return;\n      }\n\n      return fn();\n    }, arr);\n  } // useEffect(()=>{\n  //     handleData(curr.i)\n  //     return () => {\n  //         dispatch(getGraphs([], []))\n  //     }\n  // }, [refresh.refre])\n\n\n  _s(useEffectSkipFirst, \"x0DIufxRLPW/5DynbDxfl2fdtNU=\");\n\n  useEffect(() => {}, [dataTmp]);\n  useEffectSkipFirst(() => {\n    let destroyFn;\n\n    if (containerRef.current) {\n      console.log(\"runForceGraph render\");\n      console.log(dataTmp.links);\n      const {\n        destroy\n      } = runForceGraph(containerRef.current, dataTmp.links, dataTmp.nodes, nodeHoverTooltip);\n      destroyFn = destroy;\n    }\n\n    return destroyFn; //when component unmount 겠지?\n  }, [dataTmp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this); // return <div ref={containerRef} className=\"svg-canvas\"  />;\n}\n\n_s2(ForceGraph, \"BibdKtcJMtGCxzXtPgKQnZnW99c=\", true, function () {\n  return [useSelector];\n});\n\n_c = ForceGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForceGraph\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/components/forceGraph.js"],"names":["React","useEffect","runForceGraph","styles","useSelector","ForceGraph","nodeHoverTooltip","handleData","containerRef","useRef","dataTmp","state","fetchAPI","useEffectSkipFirst","fn","arr","isFirst","current","destroyFn","console","log","links","destroy","nodes","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA2B,aAA3B,C,CACA;;;AAEA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAApB,EAAsD;AAAA;;AAAA;;AACzD,QAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAa,IAAb,CAArB,CADyD,CAChB;;AACzC,QAAMC,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,QAAN,CAAeF,OAAvB,CAA3B,CAFyD,CAGzD;AACA;AACA;;AAEA,WAASG,kBAAT,CAA4BC,EAA5B,EAAgCC,GAAhC,EAAoC;AAAA;;AAChC,UAAMC,OAAO,GAAGhB,KAAK,CAACS,MAAN,CAAa,IAAb,CAAhB;AAEAR,IAAAA,SAAS,CAAC,MAAI;AACV,UAAGe,OAAO,CAACC,OAAX,EAAmB;AACfD,QAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACH;;AACD,aAAOH,EAAE,EAAT;AACH,KANQ,EAMNC,GANM,CAAT;AAOH,GAjBwD,CAoBzD;AACA;AACA;AACA;AACA;AACA;;;AAzByD,KAOhDF,kBAPgD;;AA2BzDZ,EAAAA,SAAS,CAAC,MAAI,CACb,CADQ,EACN,CAACS,OAAD,CADM,CAAT;AAGAG,EAAAA,kBAAkB,CAAC,MAAM;AACrB,QAAIK,SAAJ;;AAEA,QAAIV,YAAY,CAACS,OAAjB,EAA0B;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACW,KAApB;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAcpB,aAAa,CAACM,YAAY,CAACS,OAAd,EAAuBP,OAAO,CAACW,KAA/B,EAAsCX,OAAO,CAACa,KAA9C,EAAqDjB,gBAArD,CAAjC;AACAY,MAAAA,SAAS,GAAGI,OAAZ;AACH;;AAGD,WAAOJ,SAAP,CAZqB,CAYH;AACrB,GAbiB,EAaf,CAACR,OAAD,CAbe,CAAlB;AAiBA,sBAAO;AAAK,IAAA,GAAG,EAAEF,YAAV;AAAwB,IAAA,SAAS,EAAEL,MAAM,CAACqB;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP,CA/CyD,CAgDzD;AACH;;IAjDenB,U;UAEID,W;;;KAFJC,U","sourcesContent":["import React, {useEffect} from \"react\";\nimport {runForceGraph} from \"./ForceGraphGenerator\";\nimport styles from \"./ForceGraph.module.css\";\nimport { useSelector} from \"react-redux\";\n// import {getGraphs} from \"../services/Redux/actions\";\n\nexport function ForceGraph({ nodeHoverTooltip, handleData }) {\n    const containerRef = React.useRef(null); //create Ref\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n    // const refresh = useSelector(state=>state.fetchAPI)\n    // const curr = useSelector(state => state.SlidePop.clickedData)\n    // const dispatch = useDispatch();\n\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n\n    // useEffect(()=>{\n    //     handleData(curr.i)\n    //     return () => {\n    //         dispatch(getGraphs([], []))\n    //     }\n    // }, [refresh.refre])\n\n    useEffect(()=>{\n    }, [dataTmp])\n\n    useEffectSkipFirst(() => {\n        let destroyFn;\n\n        if (containerRef.current) {\n            console.log(\"runForceGraph render\")\n            console.log(dataTmp.links)\n\n            const { destroy } = runForceGraph(containerRef.current, dataTmp.links, dataTmp.nodes, nodeHoverTooltip);\n            destroyFn = destroy;\n        }\n\n\n        return destroyFn; //when component unmount 겠지?\n    }, [dataTmp]);\n\n\n\n    return <div ref={containerRef} className={styles.container} />;\n    // return <div ref={containerRef} className=\"svg-canvas\"  />;\n}"]},"metadata":{},"sourceType":"module"}
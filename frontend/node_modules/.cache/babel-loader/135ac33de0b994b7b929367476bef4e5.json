{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetAddForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nfunction AssetAddForm(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles(); // const [data, setData] = React.useState(props.clickedData);\n\n  const data = useSelector(state => state.SlidePop.clickedData);\n  const memTemp = useSelector(state => state.fetchAPI.temp);\n  const [ex, setEx] = React.useState(data != '' ? true : false); //조건 다시\n\n  const [entityTypes, setEntityTypes] = React.useState([]);\n  const mounted = React.useRef(false);\n  const validate = {}; //todo::validation만들기\n\n  const initialFValues = {\n    id: ex ? data.id : '1',\n    name: ex ? data.name : '',\n    desc: ex ? data.desc : '',\n    entityType: ex ? data.entityType : '',\n    props: ex ? data.props : {},\n    createdAt: ex ? data.createdAt : '1',\n    updatedAt: ex ? data.updatedAt : '1'\n  };\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, false, validate);\n  const [entityTemplate, setEntityTemplate] = React.useState(ex ? JSON.parse(memTemp.filter(item => item.entityType === values.entityType)[0][\"templateString\"]) : ''); // console.log(ex? values.props : '')\n\n  const [tmp, setTmp] = useState(ex ? JSON.parse(values.props) : {});\n\n  const handlePropChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTmp({ ...tmp,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //props가 안바꼈을때 useEffect가 안돌아서 그랫음 = name만 변경했을 경우\n\n    values.props === JSON.stringify(tmp) ? props.handleUpdate(values) : setValues({ ...values,\n      props: JSON.stringify(tmp)\n    });\n  }; //custom hook\n\n\n  function useEffectSkipFirst(fn, arr) {\n    _s();\n\n    const isFirst = React.useRef(true);\n    useEffect(() => {\n      if (isFirst.current) {\n        isFirst.current = false;\n        return;\n      }\n\n      return fn();\n    }, arr);\n  }\n\n  _s(useEffectSkipFirst, \"x0DIufxRLPW/5DynbDxfl2fdtNU=\");\n\n  useEffect(() => {\n    if (mounted.current) {\n      if (props.handleUpdate) props.handleUpdate(values);else {\n        props.onclose(false);\n        props.add(values);\n      }\n    } // mounted.current=true\n\n  }, [values.props]);\n  useEffectSkipFirst(() => {\n    let tmpList = {};\n    Object.keys(entityTemplate).forEach(item => [tmpList[item] = '']);\n    setTmp(tmpList);\n  }, [entityTemplate]);\n  useEffect(() => {\n    if (mounted.current) {\n      setEntityTemplate(getTemp);\n    } else mounted.current = true;\n  }, [values.entityType]);\n  const components = {\n    TextField: Input,\n    Select: Select\n  };\n\n  const getTemp = () => {\n    let mTmp = memTemp.find(item => item.entityType === values.entityType);\n    return mTmp ? JSON.parse(mTmp[\"templateString\"]) : '';\n  };\n\n  const GenParam = item => {\n    let tmpObj = {};\n    Object.keys(item).filter(key => key !== \"value\").map((key, index) => {\n      tmpObj[key] = item[key];\n    });\n    return tmpObj;\n  };\n\n  useEffect(() => {\n    let completed = false;\n\n    async function get() {\n      const result = await axios.get(\"http://10.250.250.208:8096/api/v1/template/entitytypes?node=\" + \"asset\");\n      if (!completed) setEntityTypes(result.data);\n    }\n\n    get();\n    return () => {\n      completed = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"name\",\n          label: \"name\",\n          value: values.name,\n          ...(props.editable || props.editable == undefined ? {\n            onChange: handleInputChange\n          } : {})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"entityType\",\n          label: \"Entity Type\",\n          value: values.entityType,\n          ...(props.editable || props.editable == undefined ? {\n            onChange: handleInputChange\n          } : {}),\n          options: entityTypes // error={errors.departmentId}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), ex && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Asset ID\",\n          readonly: true,\n          name: \"id\",\n          value: values.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          readonly: true,\n          name: \"created1\",\n          label: \"createdAt\",\n          value: values.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"updated1\",\n          readonly: true,\n          label: \"updatedAt\",\n          value: values.updatedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \" Properties \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), Object.keys(entityTemplate).map((item, index) => {\n        const pv = entityTemplate[item][\"type\"];\n        const Pv = components[pv];\n        return /*#__PURE__*/_jsxDEV(Pv, {\n          name: item,\n          label: item,\n          value: tmp[item] || '',\n          ...GenParam(entityTemplate[item]),\n          ...(props.editable || props.editable == undefined ? {\n            onChange: handlePropChange\n          } : {})\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"desc\",\n        label: \"desc\",\n        value: values.desc || '',\n        ...(props.editable || props.editable == undefined ? {\n          onChange: handleInputChange\n        } : {})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AssetAddForm, \"F04ODjtIPBVwGoKVJCNM/d5AF/Q=\", false, function () {\n  return [useStyles, useSelector, useSelector, useForm, useEffectSkipFirst];\n});\n\n_c = AssetAddForm;\nexport default _c2 = /*#__PURE__*/React.memo(AssetAddForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AssetAddForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/pages/Asset/AssetAddForm.js"],"names":["React","useState","useEffect","Grid","useForm","Form","Controls","Input","Select","makeStyles","Typography","axios","useSelector","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","AssetAddForm","props","classes","data","state","SlidePop","clickedData","memTemp","fetchAPI","temp","ex","setEx","entityTypes","setEntityTypes","mounted","useRef","validate","initialFValues","id","name","desc","entityType","createdAt","updatedAt","values","setValues","errors","setErrors","handleInputChange","resetForm","entityTemplate","setEntityTemplate","JSON","parse","filter","item","tmp","setTmp","handlePropChange","e","value","target","handleSubmit","preventDefault","stringify","handleUpdate","useEffectSkipFirst","fn","arr","isFirst","current","onclose","add","tmpList","Object","keys","forEach","getTemp","components","TextField","mTmp","find","GenParam","tmpObj","key","map","index","completed","get","result","editable","undefined","onChange","pv","Pv","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAsB,mBAAtB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,0BAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAIA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,OADL;AAEJC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFP,GAD6B;AAKrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,CADC;AAETG,IAAAA,QAAQ,EAAE;AAFD;AALwB,CAAZ,CAAD,CAA5B;;AAWA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA;;AACzB,QAAMC,OAAO,GAAGX,SAAS,EAAzB,CADyB,CAGzB;;AACA,QAAMY,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,WAAzB,CAAxB;AACA,QAAMC,OAAO,GAAGjB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,IAAzB,CAA3B;AAEA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcjC,KAAK,CAACC,QAAN,CAAewB,IAAI,IAAI,EAAR,GAAa,IAAb,GAAoB,KAAnC,CAApB,CAPyB,CAOsC;;AAC/D,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCnC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AAGA,QAAMmC,OAAO,GAAGpC,KAAK,CAACqC,MAAN,CAAa,KAAb,CAAhB;AAGA,QAAMC,QAAQ,GAAG,EAAjB,CAdyB,CAcL;;AAEpB,QAAMC,cAAc,GAAG;AACnBC,IAAAA,EAAE,EAAGR,EAAE,GAAGP,IAAI,CAACe,EAAR,GAAa,GADD;AAEnBC,IAAAA,IAAI,EAAGT,EAAE,GAAGP,IAAI,CAACgB,IAAR,GAAe,EAFL;AAGnBC,IAAAA,IAAI,EAAGV,EAAE,GAAGP,IAAI,CAACiB,IAAR,GAAe,EAHL;AAInBC,IAAAA,UAAU,EAAGX,EAAE,GAAGP,IAAI,CAACkB,UAAR,GAAqB,EAJjB;AAKnBpB,IAAAA,KAAK,EAAGS,EAAE,GAAIP,IAAI,CAACF,KAAT,GAAkB,EALT;AAMnBqB,IAAAA,SAAS,EAAGZ,EAAE,GAAGP,IAAI,CAACmB,SAAR,GAAoB,GANf;AAOnBC,IAAAA,SAAS,EAAGb,EAAE,GAAGP,IAAI,CAACoB,SAAR,GAAoB;AAPf,GAAvB;AAUA,QAAM;AACFC,IAAAA,MADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOF/C,OAAO,CAACmC,cAAD,EAAiB,KAAjB,EAAwBD,QAAxB,CAPX;AASA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCrD,KAAK,CAACC,QAAN,CAAe+B,EAAE,GAAEsB,IAAI,CAACC,KAAL,CAAW1B,OAAO,CAAC2B,MAAR,CAAeC,IAAI,IAAEA,IAAI,CAACd,UAAL,KAAkBG,MAAM,CAACH,UAA9C,EAA0D,CAA1D,EAA6D,gBAA7D,CAAX,CAAF,GAA+F,EAAhH,CAA5C,CAnCyB,CAoCzB;;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgB1D,QAAQ,CAAE+B,EAAE,GAAGsB,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACvB,KAAlB,CAAH,GAA8B,EAAlC,CAA9B;;AACA,QAAMqC,gBAAgB,GAAGC,CAAC,IAAI;AAC1B,UAAM;AAACpB,MAAAA,IAAD;AAAOqB,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAxB;AACAJ,IAAAA,MAAM,CAAC,EACH,GAAGD,GADA;AAEH,OAACjB,IAAD,GAAOqB;AAFJ,KAAD,CAAN;AAKH,GAPD;;AASA,QAAME,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF,GADsB,CAEtB;;AACAnB,IAAAA,MAAM,CAACvB,KAAP,KAAiB+B,IAAI,CAACY,SAAL,CAAeR,GAAf,CAAjB,GAAuCnC,KAAK,CAAC4C,YAAN,CAAmBrB,MAAnB,CAAvC,GAAoEC,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYvB,MAAAA,KAAK,EAAE+B,IAAI,CAACY,SAAL,CAAeR,GAAf;AAAnB,KAAD,CAA7E;AAEH,GALD,CA/CyB,CAsDzB;;;AACA,WAASU,kBAAT,CAA4BC,EAA5B,EAAgCC,GAAhC,EAAoC;AAAA;;AAChC,UAAMC,OAAO,GAAGvE,KAAK,CAACqC,MAAN,CAAa,IAAb,CAAhB;AAEAnC,IAAAA,SAAS,CAAC,MAAI;AACV,UAAGqE,OAAO,CAACC,OAAX,EAAmB;AACfD,QAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACH;;AACD,aAAOH,EAAE,EAAT;AACH,KANQ,EAMNC,GANM,CAAT;AAOH;;AAjEwB,KAuDhBF,kBAvDgB;;AAmEzBlE,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGkC,OAAO,CAACoC,OAAX,EAAoB;AAChB,UAAIjD,KAAK,CAAC4C,YAAV,EAAwB5C,KAAK,CAAC4C,YAAN,CAAmBrB,MAAnB,EAAxB,KACK;AACDvB,QAAAA,KAAK,CAACkD,OAAN,CAAc,KAAd;AACAlD,QAAAA,KAAK,CAACmD,GAAN,CAAU5B,MAAV;AACH;AACJ,KAPS,CAQV;;AACH,GATQ,EASN,CAACA,MAAM,CAACvB,KAAR,CATM,CAAT;AAWA6C,EAAAA,kBAAkB,CAAC,MAAM;AACrB,QAAIO,OAAO,GAAG,EAAd;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYzB,cAAZ,EAA4B0B,OAA5B,CAAqCrB,IAAD,IAAU,CAC1CkB,OAAO,CAAClB,IAAD,CAAP,GAAgB,EAD0B,CAA9C;AAGAE,IAAAA,MAAM,CAACgB,OAAD,CAAN;AACH,GANiB,EAOd,CAACvB,cAAD,CAPc,CAAlB;AAWAlD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGkC,OAAO,CAACoC,OAAX,EAAmB;AACfnB,MAAAA,iBAAiB,CAAC0B,OAAD,CAAjB;AACH,KAFD,MAGK3C,OAAO,CAACoC,OAAR,GAAgB,IAAhB;AACR,GALQ,EAKN,CAAC1B,MAAM,CAACH,UAAR,CALM,CAAT;AAOA,QAAMqC,UAAU,GAAG;AACfC,IAAAA,SAAS,EAAE1E,KADI;AAEfC,IAAAA,MAAM,EAAEA;AAFO,GAAnB;;AAMA,QAAMuE,OAAO,GAAG,MAAM;AAClB,QAAIG,IAAI,GAAGrD,OAAO,CAACsD,IAAR,CAAa1B,IAAI,IAAEA,IAAI,CAACd,UAAL,KAAkBG,MAAM,CAACH,UAA5C,CAAX;AACA,WAAOuC,IAAI,GAAG5B,IAAI,CAACC,KAAL,CAAW2B,IAAI,CAAC,gBAAD,CAAf,CAAH,GAAwC,EAAnD;AAEH,GAJD;;AAMA,QAAME,QAAQ,GAAI3B,IAAD,IAAU;AACvB,QAAI4B,MAAM,GAAG,EAAb;AACAT,IAAAA,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBD,MAAlB,CAAyB8B,GAAG,IAAIA,GAAG,KAAK,OAAxC,EAAiDC,GAAjD,CAAqD,CAACD,GAAD,EAAME,KAAN,KAAgB;AACjEH,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAc7B,IAAI,CAAC6B,GAAD,CAAlB;AACH,KAFD;AAGA,WAAOD,MAAP;AAEH,GAPD;;AAUAnF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIuF,SAAS,GAAG,KAAhB;;AACA,mBAAeC,GAAf,GAAqB;AACjB,YAAMC,MAAM,GAAG,MAAMhF,KAAK,CAAC+E,GAAN,CAAU,iEAAkE,OAA5E,CAArB;AACA,UAAI,CAACD,SAAL,EAAgBtD,cAAc,CAACwD,MAAM,CAAClE,IAAR,CAAd;AACnB;;AACDiE,IAAAA,GAAG;AAEH,WAAO,MAAM;AACTD,MAAAA,SAAS,GAAG,IAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEzB,YAAhB;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAC,MAFV;AAGI,UAAA,KAAK,EAAElB,MAAM,CAACL,IAHlB;AAAA,cAISlB,KAAK,CAACqE,QAAN,IAAkBrE,KAAK,CAACqE,QAAN,IAAkBC,SAApC,GAAgD;AAACC,YAAAA,QAAQ,EAAE5C;AAAX,WAAhD,GAAgF,EAJzF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,QAAD,CAAU,MAAV;AACI,UAAA,IAAI,EAAC,YADT;AAEI,UAAA,KAAK,EAAC,aAFV;AAGI,UAAA,KAAK,EAAEJ,MAAM,CAACH,UAHlB;AAAA,cAISpB,KAAK,CAACqE,QAAN,IAAkBrE,KAAK,CAACqE,QAAN,IAAkBC,SAApC,GAAgD;AAACC,YAAAA,QAAQ,EAAE5C;AAAX,WAAhD,GAAgF,EAJzF;AAKI,UAAA,OAAO,EAAEhB,WALb,CAMI;;AANJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAkBKF,EAAE,iBACC,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCAEI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,QAAQ,EAAE,IAFd;AAGI,UAAA,IAAI,EAAC,IAHT;AAII,UAAA,KAAK,EAAEc,MAAM,CAACN;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,KAAD;AACI,UAAA,QAAQ,EAAE,IADd;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,KAAK,EAAC,WAHV;AAII,UAAA,KAAK,EAAEM,MAAM,CAACF;AAJlB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,QAAQ,EAAE,IAFd;AAGI,UAAA,KAAK,EAAC,WAHV;AAII,UAAA,KAAK,EAAEE,MAAM,CAACD;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBR,eA2CI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ,EA8CQ+B,MAAM,CAACC,IAAP,CAAYzB,cAAZ,EAA4BmC,GAA5B,CAAgC,CAAC9B,IAAD,EAAO+B,KAAP,KAAe;AAC3C,cAAMO,EAAE,GAAG3C,cAAc,CAACK,IAAD,CAAd,CAAqB,MAArB,CAAX;AACA,cAAMuC,EAAE,GAAGhB,UAAU,CAACe,EAAD,CAArB;AACA,4BACI,QAAC,EAAD;AACI,UAAA,IAAI,EAAEtC,IADV;AAEI,UAAA,KAAK,EAAEA,IAFX;AAGI,UAAA,KAAK,EAAIC,GAAG,CAACD,IAAD,CAAH,IAAa,EAH1B;AAAA,aAKQ2B,QAAQ,CAAChC,cAAc,CAACK,IAAD,CAAf,CALhB;AAAA,cAMSlC,KAAK,CAACqE,QAAN,IAAkBrE,KAAK,CAACqE,QAAN,IAAkBC,SAApC,GAAgD;AAACC,YAAAA,QAAQ,EAAElC;AAAX,WAAhD,GAA+E,EANxF;AAAA,WAIS4B,KAJT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAfD,CA9CR,eAiEI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,KAAK,EAAE1C,MAAM,CAACJ,IAAP,IAAe,EAH1B;AAAA,YAISnB,KAAK,CAACqE,QAAN,IAAkBrE,KAAK,CAACqE,QAAN,IAAkBC,SAApC,GAAgD;AAACC,UAAAA,QAAQ,EAAE5C;AAAX,SAAhD,GAAgF,EAJzF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEJ,eAyEI;AAAA,+BACQ,QAAC,QAAD,CAAU,MAAV;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,IAAI,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cAzEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuFH;;IA1NQ5B,Y;UACWT,S,EAGHD,W,EACGA,W,EA4BZR,O,EA6CJgE,kB;;;KA9EK9C,Y;AA4NT,kCAAetB,KAAK,CAACiG,IAAN,CAAW3E,YAAX,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"../../components/useForm\"\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nfunction AssetAddForm(props) {\n    const classes = useStyles();\n\n    // const [data, setData] = React.useState(props.clickedData);\n    const data = useSelector(state => state.SlidePop.clickedData)\n    const memTemp = useSelector(state => state.fetchAPI.temp)\n\n    const [ex, setEx] = React.useState(data != '' ? true : false); //조건 다시\n    const [entityTypes, setEntityTypes] = React.useState([]);\n\n\n    const mounted = React.useRef(false)\n\n\n    const validate = {} //todo::validation만들기\n\n    const initialFValues = {\n        id: (ex ? data.id : '1'),\n        name: (ex ? data.name : ''),\n        desc: (ex ? data.desc : ''),\n        entityType: (ex ? data.entityType : ''),\n        props: (ex ? (data.props) : {}),\n        createdAt: (ex ? data.createdAt : '1'),\n        updatedAt: (ex ? data.updatedAt : '1')\n\n    }\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, false, validate, )\n\n    const [entityTemplate, setEntityTemplate] = React.useState(ex? JSON.parse(memTemp.filter(item=>item.entityType===values.entityType)[0][\"templateString\"]) : '')\n    // console.log(ex? values.props : '')\n    const [tmp, setTmp] = useState( ex ? JSON.parse(values.props) : {})\n    const handlePropChange = e => {\n        const {name, value} = e.target\n        setTmp({\n            ...tmp,\n            [name]:value\n        })\n\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        //props가 안바꼈을때 useEffect가 안돌아서 그랫음 = name만 변경했을 경우\n        values.props === JSON.stringify(tmp) ? props.handleUpdate(values) : setValues({...values, props:(JSON.stringify(tmp))})\n\n    }\n\n    //custom hook\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffect(()=>{\n        if(mounted.current) {\n            if (props.handleUpdate) props.handleUpdate(values)\n            else {\n                props.onclose(false)\n                props.add(values)\n            }\n        }\n        // mounted.current=true\n    }, [values.props])\n\n    useEffectSkipFirst(() => {\n        let tmpList = {}\n        Object.keys(entityTemplate).forEach((item) => [\n            tmpList[item] = ''\n        ])\n        setTmp(tmpList)\n    },\n        [entityTemplate]\n    );\n\n\n    useEffect(()=>{\n        if(mounted.current){\n            setEntityTemplate(getTemp)\n        }\n        else mounted.current=true;\n    }, [values.entityType])\n\n    const components = {\n        TextField: Input,\n        Select: Select\n    }\n\n\n    const getTemp = () => {\n        let mTmp = memTemp.find(item=>item.entityType===values.entityType)\n        return mTmp ? JSON.parse(mTmp[\"templateString\"]) : ''\n\n    }\n\n    const GenParam = (item) => {\n        let tmpObj = {}\n        Object.keys(item).filter(key => key !== \"value\").map((key, index) => {\n            tmpObj[key] = item[key]\n        })\n        return tmpObj\n\n    }\n\n\n    useEffect(()=>{\n        let completed = false;\n        async function get() {\n            const result = await axios.get(\"http://10.250.250.208:8096/api/v1/template/entitytypes?node=\" +  \"asset\")\n            if (!completed) setEntityTypes(result.data);\n        }\n        get();\n\n        return () => {\n            completed = true;\n        }\n    }, [])\n\n    return(\n        <Form onSubmit={handleSubmit}>\n\n            <Grid container>\n                <Grid item xs={6}>\n                    <Input\n                        name=\"name\"\n                        label=\"name\"\n                        value={values.name}\n                        {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                    />\n                    <Controls.Select\n                        name=\"entityType\"\n                        label=\"Entity Type\"\n                        value={values.entityType}\n                        {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                        options={entityTypes}\n                        // error={errors.departmentId}\n                    />\n\n                </Grid>\n                {ex && (\n                    <Grid item xs={6}>\n\n                        <Input\n                            label=\"Asset ID\"\n                            readonly={true}\n                            name=\"id\"\n                            value={values.id}\n                        />\n                        <Input\n                            readonly={true}\n                            name=\"created1\"\n                            label=\"createdAt\"\n                            value={values.createdAt}\n                        />\n                        <Input\n                            name=\"updated1\"\n                            readonly={true}\n                            label=\"updatedAt\"\n                            value={values.updatedAt}\n                        />\n\n                    </Grid>)\n                }\n\n                <Typography> Properties </Typography>\n\n                {\n                    Object.keys(entityTemplate).map((item, index)=>{\n                        const pv = entityTemplate[item][\"type\"]\n                        const Pv = components[pv]\n                        return (\n                            <Pv\n                                name={item}\n                                label={item}\n                                value = {tmp[item] || ''}\n                                key={index}\n                                {...GenParam(entityTemplate[item])}\n                                {...(props.editable || props.editable == undefined ? {onChange: handlePropChange} : {})}\n                            >\n                            </Pv>\n                        )\n\n                    })\n\n                }\n\n                <Input\n                    name=\"desc\"\n                    label=\"desc\"\n                    value={values.desc || ''}\n                    {...(props.editable || props.editable == undefined ? {onChange: handleInputChange} : {})}\n                />\n\n\n                <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\"\n                            />\n                    </div>\n\n            </Grid>\n        </Form>\n\n    )\n}\n\nexport default React.memo(AssetAddForm)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js\";\nimport React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\n\nimport { Field } from \"redux-form\"; // import Table from \"react-table\";\n\nimport Table from \"react-table\";\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport { avatarColumnProps } from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport { useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport { addedField, addSave, currEd, dataSave, deleteTmp, delSave, editSave, editZero, getAllR, hisFlag, keyFieldSelect, openSelectKeyFieldPop, restoreHead, restoreVersion, saveVersion, selectHead, startHis } from \"../../services/Redux/actions\";\nimport { bindActionCreators } from 'redux';\nimport { addTmp, revRe, openPop } from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport { apiProvider } from \"../../services/Provider\";\nimport \"./style.scss\";\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GridTableLDR extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: null,\n      selected: {},\n      selectAll: 0,\n      adding: false,\n      columns: [],\n      selectEdit: false,\n      willRemoved: [],\n      temps: false,\n      pages: null,\n      pagesH: null,\n      loading: true,\n      sorted: [],\n      totalRows: 0,\n      tableProps: {}\n    };\n    this.selectList = {\n      typeList: [\"String\", \"Numeric\", \"IP\"],\n      groupList: [\"Required\", \"Additional\"]\n    };\n\n    this.getSelect = (type, curr) => {\n      const v = this.selectList[type].filter(i => i !== curr);\n      return v;\n    };\n\n    this.resetColumn = () => {\n      this.setState(state => {\n        return { ...state,\n          columns: [{\n            columns: [{\n              id: \"checkbox\",\n              accessor: \"\",\n              Cell: ({\n                original\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  checked: this.state.selected[original.id] === true,\n                  onChange: () => this.toggleRow(original.id),\n                  disabled: this.props.delId.indexOf(original.id) !== -1 //있으면\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this);\n              },\n              Header: x => {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  checked: this.state.selectAll === 1,\n                  ref: input => {\n                    if (input) {\n                      input.indeterminate = this.state.selectAll === 2;\n                    }\n                  },\n                  onChange: () => this.toggleSelectAll()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this);\n              },\n              sortable: false,\n              width: 45\n            }]\n          }].concat(this.props.columns.slice().map(item => {\n            return { ...item,\n              ...this.editableColumnProps\n            };\n          })).concat({\n            Header: \"\",\n            maxWidth: 90,\n            filterable: false,\n            getProps: this.getActionProps,\n            Cell: ActionsCell\n          })\n        };\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      const restore = prevProps.edited !== this.props.edited;\n      const ver = prevProps.version !== this.props.version;\n      const resHead = prevProps.headRestore !== this.props.headRestore;\n      const cond = prevProps.refre !== this.props.refre;\n      const nField = prevProps.newField !== this.props.newField;\n      const col = prevProps.header !== this.props.header;\n\n      if (cond && this.props.refre && this.props.edited == 0) {\n        this.setState({\n          editing: null\n        });\n        this.adjustColumn(true);\n      }\n\n      if (this.props.edited !== 0 && restore) {\n        this.adjustColumn(false);\n      }\n\n      if (col) {\n        this.resetColumn();\n      }\n\n      if (cond) {\n        this.props.handleHeadVer(this.props.version);\n        this.resetColumn();\n        this.props.handleData();\n      }\n\n      if (resHead && this.props.headRestore) {\n        console.log(this.props.data[0].ver);\n        this.props.restoreVer(this.props.data[0].ver);\n        this.props.handleHeadVer(this.props.data[0].ver);\n        this.props.resHead(false);\n      }\n\n      if (nField) {\n        const nCol = this.state.columns;\n        nCol.splice(-1, 0, {\n          Header: this.props.newField,\n          accessor: this.props.newField,\n          ...this.editableColumnProps\n        });\n        this.setState(state => {\n          return { ...state,\n            columns: nCol\n          };\n        });\n      }\n\n      if (ver) {\n        this.handleSaveNewVer();\n      }\n    };\n\n    this.selectableComponent = ({\n      input,\n      editing,\n      value,\n      ...rest\n    }) => {\n      const result = Object.keys(rest).reduce((prev, current) => ({ ...prev,\n        [current.toLowerCase()]: rest[current]\n      }), {});\n      const Component = editing ? 'select' : 'p';\n\n      const children = //여기 value 에 직접 넣을 수 있으면 좋을텐데.\n      !editing && /*#__PURE__*/_jsxDEV(HighlightCell, {\n        value: value,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 26\n      }, this) || /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), this.getSelect(\"typeList\", value).map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 72\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...input,\n        ...result,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.editableComponent = ({\n      input,\n      editing,\n      value,\n      ...rest\n    }) => {\n      const result = Object.keys(rest).reduce((prev, current) => ({ ...prev,\n        [current.toLowerCase()]: rest[current]\n      }), {}); //input안에 name있음 이거 가지고 action넣으면 되지 않을까\n\n      const Component = editing ? 'input' : 'p';\n      const children = !editing && /*#__PURE__*/_jsxDEV(HighlightCell, {\n        value: value,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 26\n      }, this) || undefined;\n      return /*#__PURE__*/_jsxDEV(Component, { ...input,\n        ...result,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.isSelectField = col => [\"type\", \"group\"].indexOf(col) !== -1;\n\n    this.editableColumnProps = { ...GridFilters,\n      Cell: props => {\n        const editing = this.state.editing === props.original;\n        const fieldProps = {\n          component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n          editing,\n          props\n        };\n        return /*#__PURE__*/_jsxDEV(Field, {\n          name: props.column.id,\n          ...fieldProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.handleCellClick = data => {// this.props.handleRow(data)\n    };\n\n    this.getActionProps = (gridState, rowProps) => rowProps && {\n      mode: this.state.editing === rowProps.original ? this.state.adding ? \"add\" : \"edit\" : \"view\",\n      actions: {\n        onEdit: () => {\n          !this.state.adding && this.setState({\n            editing: rowProps.original,\n            adding: false\n          });\n        },\n        onCancel: () => {\n          this.setState({\n            editing: null,\n            adding: false\n          });\n          this.state.adding && this.props.delTmp(this.props.data.length);\n        }\n      }\n    } || {};\n\n    this.handleSubmit = values => {\n      !this.props.addId.indexOf(values.id) && this.props.editSave([values.id, ...this.props.editId]);\n      this.props.dataSave([values, ...this.props.savedData]);\n      console.log(\"why not cancel?\"); //TODO::cancel이 일로가는구나 버튼이 작아서 잘리네 잘 눌러야함..\n\n      this.setState(state => {\n        this.props.addTmp(this.props.data.map(item => {\n          return item.id === values.id ? values : item;\n        }));\n        return state.adding ? { ...state,\n          adding: false\n        } : { ...state\n        };\n      });\n    };\n\n    this.adjustColumn = flag => {\n      const last = this.state.columns[this.state.columns.length - 1];\n      const tmp = this.state.columns.slice().splice(0, this.state.columns.length - 1);\n      last.show = flag;\n      this.setState({\n        columns: [...tmp, last]\n      });\n    };\n\n    this.handleConFieldSelect = ob => {\n      this.props.setKfOb(ob); //TODO::\n\n      this.props.openConSelectPopup();\n    };\n\n    this.handleKeyFieldSelect = ob => {\n      console.log(ob);\n      this.props.setKfOb(ob);\n      this.props.openKeySelectPopup();\n    };\n\n    this.handleFieldAdd = () => {\n      this.props.openSelectPopup();\n    };\n\n    this.handleGridData = async version => {\n      this.state.willRemoved.length && this.state.willRemoved.forEach(id => {\n        apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({\n          willRemoved: []\n        }));\n      }); //upsert 로직 추가\n\n      this.adjustColumn(true); //--\n      // apiProvider.delAll('rules').then(\n      //     await Promise.all(this.props.data.map((item) => { //사실 여기서 버전을 제외하고는 업데이트가 되어 있을 것.\n      //         this.props.addf(item, version)\n      //     }))\n      // )\n      // const history = {\n      //     id: \"1\",\n      //     desc: \"temp\",\n      //     user: \"admin\",\n      //     released: \"false\",\n      //     value: {\n      //         field: this.props.data.map(({ver, ...other}) => {\n      //             return Object.assign({}, other, {ver: version})\n      //         })\n      //     }\n      // }\n      // apiProvider.insert('history/livedetectrule', history).then(() => {\n      //     this.props.hisFlag(true)\n      // })\n    };\n\n    this.handleSaveNewVer = () => {\n      console.log(this.props.version);\n      const temp = this.state.columns.slice();\n      temp.splice(0, 1);\n      temp.splice(-1, 1);\n      console.log(temp.map(({\n        Header\n      }) => Header));\n      const header = {\n        ver: this.props.version,\n        type: \"live\",\n        header: temp.map(({\n          Header\n        }) => Header)\n      }; // apiProvider.insertHead(header).then()\n\n      apiProvider.deActiveHead().then(() => apiProvider.insertHead(header).then(() => this.handleGridData(this.props.version))); // this.props.insertHead(header)\n      // this.handleGridData()\n    };\n\n    this.handleSaveSameVer = version => {\n      // this.props.activeHead(version)\n      apiProvider.deActiveHead().then(apiProvider.activeHead(version).then(() => this.handleGridData(version))); // this.handleGridData()\n    };\n\n    this.handleSave = () => {\n      // const temp = this.state.columns\n      // temp.splice(0, 1)\n      // temp.splice(-1, 1)\n      //밑에 조건 둘 중 무조건 하나만 실행됨. 그래야함..\n      if (this.props.columns.length != this.state.columns.length - 2) this.props.openSave();else if (this.props.versionTmp !== \"\") this.handleSaveSameVer(this.props.versionTmp);else this.handleGridData(this.props.version);\n    };\n\n    this.handleDelete = () => {\n      console.log(Object.keys(this.state.selected));\n      Object.keys(this.state.selected).forEach(i => {\n        this.props.delTmp(i);\n        this.props.delSave([i, ...this.props.delId]);\n      });\n      this.setState(state => {\n        return { ...state,\n          selected: {},\n          willRemoved: [...Object.keys(this.state.selected), ...this.state.willRemoved]\n        };\n      });\n    };\n\n    this.handleAdd = () => {\n      const addTemp = this.state.columns.slice();\n      addTemp.splice(-1, 1);\n      addTemp.splice(0, 1);\n      const tp = {};\n      addTemp.forEach(({\n        accessor\n      }) => {\n        tp[accessor] = \"\";\n      });\n      tp.id = this.props.data.length + 1;\n      console.log(this.props.data.length);\n      this.setState(state => {\n        return { ...state,\n          editing: tp,\n          adding: true\n        };\n      });\n      console.log(tp);\n      this.props.addTmp([tp, ...this.props.data]);\n      this.props.addSave([tp.id, ...this.props.addId]);\n    };\n\n    this.handleClickPopUp = (columnId, data) => {\n      switch (columnId) {\n        case \"keyField\":\n          return this.handleKeyFieldSelect(data);\n\n        case \"confirms\":\n          return this.handleConFieldSelect(data);\n\n        default:\n          return;\n      }\n    };\n\n    this.fetchData = (state, instance) => {\n      apiProvider.getRowCounts(\"rules\").then(res => this.setState({\n        totalRows: res\n      }));\n      this.setState({\n        loading: true\n      });\n      const offset = state.page * state.pageSize;\n      const limit = state.pageSize;\n      state.filtered.length ? this.sendWithQuery(state.filtered, offset, limit, state.pageSize) : this.props.getData(offset, limit).then(res => {\n        this.setState({\n          loading: false,\n          pages: Math.ceil(this.state.totalRows / state.pageSize)\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    //for test\n    this.resetColumn();\n    this.props.handleData();\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n    console.log(this.state.selected);\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n    console.log(this.state.selected);\n\n    if (this.state.selectAll === 0) {\n      this.props.data.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  render() {\n    const tableProps = this.props.edited == 0 ? {\n      manual: true,\n      pages: this.state.pages,\n      onFetchData: this.fetchData\n    } : {\n      manual: false\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleAdd,\n          disabled: this.props.edited !== 0,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleDelete,\n          disabled: this.props.edited !== 0,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            this.props.editZero();\n            this.props.revRe(true);\n          },\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seperate-bar-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            this.handleFieldAdd();\n          },\n          children: \"Field Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => this.props.openPop(true),\n          disabled: this.props.edited !== 0,\n          children: \"\\uBC30\\uD3EC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Fixed\",\n          children: /*#__PURE__*/_jsxDEV(FormProvider, {\n            form: \"inline\",\n            onSubmit: this.handleSubmit,\n            onSubmitSuccess: () => this.setState({\n              editing: null\n            }),\n            initialValues: this.state.editing,\n            enableReinitialize: true,\n            children: formProps => {\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formProps.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  getTdProps: (state, rowInfo, column) => ({\n                    onClick: () => rowInfo !== undefined && this.state.editing ? this.handleClickPopUp(column.id, rowInfo.original) : undefined\n                  }),\n                  columns: this.state.columns,\n                  ...tableProps,\n                  defaultPageSize: 2,\n                  data: this.props.data // PaginationComponent={Pagination}\n                  // pageSizeOptions={[1, 10, 500, 1000]}\n                  // defaultPageSize={10}\n                  ,\n                  sorted: [{\n                    id: 'id'\n                  }] // defaultPageSize={10}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 41\n                }, this), this.props.selectKPop && /*#__PURE__*/_jsxDEV(SelectKeyFieldPopup, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 67\n                }, this), this.props.selectCPop && /*#__PURE__*/_jsxDEV(SelectConfirmsPopup, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 37\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  version: state.fetchAPI.headVersion,\n  versionTmp: state.fetchAPI.headVersionTmp,\n  selectKPop: state.fetchAPI.openKeyField,\n  selectCPop: state.fetchAPI.openConField,\n  kfOb: state.fetchAPI.keyField,\n  data: state.fetchAPI.data,\n  refre: state.fetchAPI.refre,\n  add: state.fetchAPI.ad,\n  hflag: state.fetchAPI.hflag,\n  newField: state.fetchAPI.addedField,\n  header: state.fetchAPI.header,\n  headRestore: state.fetchAPI.headRestore,\n  his: state.fetchAPI.startHistory,\n  edited: state.fetchAPI.edited,\n  addId: state.editOperator.addId,\n  delId: state.editOperator.delId,\n  editId: state.editOperator.editId,\n  savedData: state.editOperator.savedData\n}), dispatch => {\n  return bindActionCreators({\n    setKfOb: keyFieldSelect,\n    addTmp: addTmp,\n    revRe: revRe,\n    openPop: openPop,\n    delTmp: deleteTmp,\n    currEd: currEd,\n    hisFlag: hisFlag,\n    addedField: addedField,\n    setHead: selectHead,\n    resHead: restoreHead,\n    saveVer: saveVersion,\n    restoreVer: restoreVersion,\n    startHis: startHis,\n    editZero: editZero,\n    getData: apiProvider.getLiveRules,\n    addSave: addSave,\n    delSave: delSave,\n    editSave: editSave,\n    dataSave: dataSave\n  }, dispatch);\n})(GridTableLDR);","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js"],"names":["React","set","Field","Table","BS","initialData","FormProvider","avatarColumnProps","ActionsCell","HighlightCell","GridFilters","useSelector","connect","fetchAPI","addedField","addSave","currEd","dataSave","deleteTmp","delSave","editSave","editZero","getAllR","hisFlag","keyFieldSelect","openSelectKeyFieldPop","restoreHead","restoreVersion","saveVersion","selectHead","startHis","bindActionCreators","addTmp","revRe","openPop","Pagination","apiProvider","SelectKeyFieldPopup","SelectConfirmsPopup","GridTableLDR","Component","state","editing","selected","selectAll","adding","columns","selectEdit","willRemoved","temps","pages","pagesH","loading","sorted","totalRows","tableProps","selectList","typeList","groupList","getSelect","type","curr","v","filter","i","resetColumn","setState","id","accessor","Cell","original","toggleRow","props","delId","indexOf","Header","x","input","indeterminate","toggleSelectAll","sortable","width","concat","slice","map","item","editableColumnProps","maxWidth","filterable","getProps","getActionProps","componentDidUpdate","prevProps","restore","edited","ver","version","resHead","headRestore","cond","refre","nField","newField","col","header","adjustColumn","handleHeadVer","handleData","console","log","data","restoreVer","nCol","splice","handleSaveNewVer","selectableComponent","value","rest","result","Object","keys","reduce","prev","current","toLowerCase","children","index","editableComponent","undefined","isSelectField","fieldProps","component","column","handleCellClick","gridState","rowProps","mode","actions","onEdit","onCancel","delTmp","length","handleSubmit","values","addId","editId","savedData","flag","last","tmp","show","handleConFieldSelect","ob","setKfOb","openConSelectPopup","handleKeyFieldSelect","openKeySelectPopup","handleFieldAdd","openSelectPopup","handleGridData","forEach","delNormal","parseInt","then","temp","deActiveHead","insertHead","handleSaveSameVer","activeHead","handleSave","openSave","versionTmp","handleDelete","handleAdd","addTemp","tp","handleClickPopUp","columnId","fetchData","instance","getRowCounts","res","offset","page","pageSize","limit","filtered","sendWithQuery","getData","Math","ceil","componentDidMount","newSelected","assign","render","manual","onFetchData","formProps","rowInfo","onClick","selectKPop","selectCPop","headVersion","headVersionTmp","openKeyField","openConField","kfOb","keyField","add","ad","hflag","his","startHistory","editOperator","dispatch","setHead","saveVer","getLiveRules"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport {Field} from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport {avatarColumnProps} from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport {\n    addedField, addSave,\n    currEd, dataSave,\n    deleteTmp, delSave, editSave, editZero,\n    getAllR,\n    hisFlag,\n    keyFieldSelect,\n    openSelectKeyFieldPop, restoreHead, restoreVersion, saveVersion, selectHead, startHis\n} from \"../../services/Redux/actions\";\nimport {bindActionCreators} from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\n\n\nclass GridTableLDR extends React.Component {\n    state = {\n        editing: null,\n        selected: {},\n        selectAll: 0,\n        adding: false,\n        columns: [],\n        selectEdit: false,\n        willRemoved: [],\n        temps:false,\n        pages:null,\n        pagesH:null,\n        loading:true,\n        sorted:[],\n        totalRows:0,\n        tableProps:{}\n    };\n\n    selectList = {\n        typeList: [\"String\", \"Numeric\", \"IP\"],\n        groupList: [\"Required\", \"Additional\"]\n    }\n\n    getSelect = (type, curr) => {\n        const v = this.selectList[type].filter(i => i !== curr)\n        return v\n    }\n\n    resetColumn = () => {\n        this.setState((state) => {\n            return {\n                ...state, columns:\n                    [{\n                        columns: [\n                            {\n                                id: \"checkbox\",\n                                accessor: \"\",\n                                Cell: ({original}) => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selected[original.id] === true}\n                                            onChange={() => this.toggleRow(original.id)}\n                                            disabled={this.props.delId.indexOf(original.id) !== -1} //있으면\n                                        />\n                                    );\n                                },\n                                Header: x => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selectAll === 1}\n                                            ref={input => {\n                                                if (input) {\n                                                    input.indeterminate = this.state.selectAll === 2;\n                                                }\n                                            }}\n                                            onChange={() => this.toggleSelectAll()}\n                                        />\n                                    );\n                                },\n                                sortable: false,\n                                width: 45\n                            },\n                        ]\n                    }].concat(\n                        this.props.columns.slice().map((item) => {\n                            return {...item, ...this.editableColumnProps}\n                        })\n                    )\n                        .concat(\n                            {\n                                Header: \"\",\n                                maxWidth: 90,\n                                filterable: false,\n                                getProps: this.getActionProps,\n                                Cell: ActionsCell\n                            }\n                        )\n            }\n        })\n    }\n\n    componentDidMount() {\n//for test\n        this.resetColumn()\n        this.props.handleData()\n    }\n\n    componentDidUpdate = (prevProps) => {\n\n        const restore = (prevProps.edited !== this.props.edited)\n        const ver = (prevProps.version !== this.props.version)\n        const resHead = (prevProps.headRestore !== this.props.headRestore)\n        const cond = (prevProps.refre !== this.props.refre)\n        const nField = (prevProps.newField !== this.props.newField)\n        const col = (prevProps.header !== this.props.header)\n\n        if (cond && this.props.refre && this.props.edited == 0) {\n            this.setState({editing: null})\n            this.adjustColumn(true)\n        }\n        if (this.props.edited !== 0 && restore) {\n            this.adjustColumn(false)\n        }\n        if (col) {\n            this.resetColumn()\n        }\n        if (cond) {\n            this.props.handleHeadVer(this.props.version)\n            this.resetColumn()\n            this.props.handleData()\n        }\n        if (resHead && this.props.headRestore) {\n            console.log(this.props.data[0].ver)\n            this.props.restoreVer(this.props.data[0].ver)\n            this.props.handleHeadVer(this.props.data[0].ver)\n            this.props.resHead(false)\n        }\n        if (nField) {\n            const nCol = this.state.columns\n            nCol.splice(-1, 0, {\n                Header: this.props.newField,\n                accessor: this.props.newField, ...this.editableColumnProps\n            })\n            this.setState((state) => {\n                return {\n                    ...state, columns: nCol\n                }\n            })\n        }\n        if (ver) {\n            this.handleSaveNewVer()\n        }\n    }\n\n\n    selectableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'select' : 'p';\n        const children = //여기 value 에 직접 넣을 수 있으면 좋을텐데.\n            (!editing && <HighlightCell value={value} {...rest} />) || <React.Fragment>\n                <option>{value}</option>\n                {this.getSelect(\"typeList\", value).map(\n                    (item, index) => (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                )}\n            </React.Fragment>;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n\n    editableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        //input안에 name있음 이거 가지고 action넣으면 되지 않을까\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    isSelectField = (col) => [\"type\", \"group\"].indexOf(col) !== -1\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n    handleCellClick = (data) => {\n        // this.props.handleRow(data)\n    }\n\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(this.props.data.length)\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) {\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n        console.log(this.state.selected)\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        console.log(this.state.selected)\n        if (this.state.selectAll === 0) {\n            this.props.data.forEach(x => {\n                newSelected[x.id] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    handleSubmit = (values) => {\n\n        !this.props.addId.indexOf(values.id) && this.props.editSave([values.id, ...this.props.editId])\n\n        this.props.dataSave([values, ...this.props.savedData])\n\n        console.log(\"why not cancel?\") //TODO::cancel이 일로가는구나 버튼이 작아서 잘리네 잘 눌러야함..\n        this.setState((state) => {\n            this.props.addTmp(this.props.data.map((item) => {\n                return item.id === values.id ? values : item\n            }))\n\n            return state.adding ? {...state, adding: false} : {...state}\n\n        });\n    };\n\n    adjustColumn = (flag) => {\n        const last = this.state.columns[this.state.columns.length - 1]\n        const tmp = this.state.columns.slice().splice(0, this.state.columns.length - 1)\n        last.show = flag\n        this.setState({\n            columns: [\n                ...tmp,\n                last\n            ]\n        })\n    }\n    handleConFieldSelect = (ob) => {\n        this.props.setKfOb(ob) //TODO::\n        this.props.openConSelectPopup()\n    }\n    handleKeyFieldSelect = (ob) => {\n        console.log(ob)\n        this.props.setKfOb(ob)\n        this.props.openKeySelectPopup()\n    }\n\n    handleFieldAdd = () => {\n        this.props.openSelectPopup()\n    }\n\n    handleGridData = async (version) => {\n\n        this.state.willRemoved.length && this.state.willRemoved.forEach((id) => {\n            apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({willRemoved: []}))\n        })\n        //upsert 로직 추가\n        this.adjustColumn(true)\n\n\n        //--\n        // apiProvider.delAll('rules').then(\n        //     await Promise.all(this.props.data.map((item) => { //사실 여기서 버전을 제외하고는 업데이트가 되어 있을 것.\n        //         this.props.addf(item, version)\n        //     }))\n        // )\n        // const history = {\n        //     id: \"1\",\n        //     desc: \"temp\",\n        //     user: \"admin\",\n        //     released: \"false\",\n        //     value: {\n        //         field: this.props.data.map(({ver, ...other}) => {\n        //             return Object.assign({}, other, {ver: version})\n        //         })\n        //     }\n        // }\n        // apiProvider.insert('history/livedetectrule', history).then(() => {\n        //     this.props.hisFlag(true)\n        // })\n\n    }\n\n    handleSaveNewVer = () => {\n        console.log(this.props.version)\n        const temp = this.state.columns.slice()\n        temp.splice(0, 1)\n        temp.splice(-1, 1)\n        console.log(temp.map(({Header}) => Header))\n        const header = {\n            ver: this.props.version,\n            type: \"live\",\n            header: temp.map(({Header}) => Header)\n        }\n        // apiProvider.insertHead(header).then()\n        apiProvider.deActiveHead().then(\n            () => apiProvider.insertHead(header).then(() => this.handleGridData(this.props.version))\n        )\n        // this.props.insertHead(header)\n        // this.handleGridData()\n    }\n\n    handleSaveSameVer = (version) => {\n        // this.props.activeHead(version)\n        apiProvider.deActiveHead().then(\n            apiProvider.activeHead(version).then(\n                () => this.handleGridData(version)\n            ))\n        // this.handleGridData()\n    }\n    //체크해야 되는게 291라인과 298라인 아닌가?\n    handleSave = () => {\n        // const temp = this.state.columns\n        // temp.splice(0, 1)\n        // temp.splice(-1, 1)\n        //밑에 조건 둘 중 무조건 하나만 실행됨. 그래야함..\n        if (this.props.columns.length != this.state.columns.length - 2) this.props.openSave()\n        else if (this.props.versionTmp !== \"\") this.handleSaveSameVer(this.props.versionTmp)\n        else this.handleGridData(this.props.version)\n\n    }\n\n    handleDelete = () => {\n        console.log(Object.keys(this.state.selected))\n        Object.keys(this.state.selected).forEach((i) => {\n            this.props.delTmp(i);\n            this.props.delSave([i, ...this.props.delId])\n        })\n        this.setState((state) => {\n            return {\n                ...state,\n                selected: {},\n                willRemoved: [...Object.keys(this.state.selected), ...this.state.willRemoved]\n            }\n        })\n\n    }\n\n    //TODO::add 여러번 하게하면 안됨. + 자동으로 index 생성되게 해야되는데 + livedetectrule add row가 이상한곳에 생김. 왠진 모르겠는데 해결됨.\n    handleAdd = () => {\n        const addTemp = this.state.columns.slice()\n        addTemp.splice(-1, 1)\n        addTemp.splice(0, 1)\n        const tp = {};\n        addTemp.forEach(({accessor}) => {\n            tp[accessor] = \"\"\n        })\n        tp.id = this.props.data.length + 1\n        console.log(this.props.data.length)\n        this.setState((state) => {\n            return {...state, editing: tp, adding: true}\n        })\n        console.log(tp)\n        this.props.addTmp([tp, ...this.props.data])\n        this.props.addSave([tp.id, ...this.props.addId])\n    }\n\n\n    handleClickPopUp = (columnId, data) => {\n        switch (columnId) {\n            case \"keyField\" :\n                return this.handleKeyFieldSelect(data)\n            case \"confirms\" :\n                return this.handleConFieldSelect(data)\n            default:\n                return\n        }\n    }\n\n    fetchData = (state, instance) => {\n\n        apiProvider.getRowCounts(\"rules\").then((res) => this.setState({totalRows: res}))\n        this.setState({loading: true})\n        const offset = state.page * state.pageSize\n        const limit = state.pageSize\n\n        state.filtered.length ? (\n            this.sendWithQuery(state.filtered, offset, limit, state.pageSize)\n        ) : (\n            this.props.getData(offset, limit).then((res) => { \n                this.setState({loading: false, pages: Math.ceil(this.state.totalRows / state.pageSize)})\n            }))\n    }\n\n    render() {\n        const tableProps = this.props.edited == 0 ? {\n            manual: true,\n            pages: this.state.pages,\n            onFetchData: this.fetchData\n        } : {\n            manual: false\n        }\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                    <button className=\"btn\" onClick={this.handleAdd} disabled={this.props.edited !== 0}>\n                        Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleDelete} disabled={this.props.edited !== 0}>\n                        Delete\n                    </button>\n                    <button className=\"btn\" onClick={() => {\n                        this.props.editZero();\n                        this.props.revRe(true)\n                    }}>\n                        Refresh\n                    </button>\n\n                    <div className=\"seperate-bar-100\"/>\n\n                    <button className=\"btn\" onClick={() => {\n                        this.handleFieldAdd()\n                    }}>\n                        Field Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleSave}>\n                        Save\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.openPop(true)} disabled={this.props.edited !== 0}>\n                        배포\n                    </button>\n                </div>\n                <div className=\"table-wrapper\">\n                    <div className=\"Fixed\">\n\n                        <FormProvider\n                            form=\"inline\"\n                            onSubmit={this.handleSubmit}\n                            onSubmitSuccess={() => this.setState({editing: null})}\n                            initialValues={this.state.editing}\n                            enableReinitialize\n                        >\n                            {(formProps) => {\n                                return (\n                                    <form onSubmit={formProps.handleSubmit}>\n                                        <Table\n                                            getTdProps={(state, rowInfo, column) => ({\n                                                onClick: () => (rowInfo !== undefined && this.state.editing) ? this.handleClickPopUp(column.id, rowInfo.original) : undefined\n                                            })}\n                                            columns={\n                                                this.state.columns\n                                            }\n                                            {...tableProps}\n                                            defaultPageSize={2}\n                                            data={this.props.data}\n                                            // PaginationComponent={Pagination}\n                                            // pageSizeOptions={[1, 10, 500, 1000]}\n                                            // defaultPageSize={10}\n                                            sorted={[{id: 'id'}]}\n\n                                            // defaultPageSize={10}\n                                        />\n                                        {this.props.selectKPop && <SelectKeyFieldPopup></SelectKeyFieldPopup>}\n                                        {this.props.selectCPop && <SelectConfirmsPopup></SelectConfirmsPopup>}\n                                    </form>\n                                );\n                            }}\n                        </FormProvider>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        version: state.fetchAPI.headVersion,\n        versionTmp: state.fetchAPI.headVersionTmp,\n        selectKPop: state.fetchAPI.openKeyField,\n        selectCPop: state.fetchAPI.openConField,\n        kfOb: state.fetchAPI.keyField,\n        data: state.fetchAPI.data,\n        refre: state.fetchAPI.refre,\n        add: state.fetchAPI.ad,\n        hflag: state.fetchAPI.hflag,\n        newField: state.fetchAPI.addedField,\n        header: state.fetchAPI.header,\n        headRestore: state.fetchAPI.headRestore,\n        his: state.fetchAPI.startHistory,\n\n        edited: state.fetchAPI.edited,\n\n        addId: state.editOperator.addId,\n        delId: state.editOperator.delId,\n        editId: state.editOperator.editId,\n        savedData: state.editOperator.savedData\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                setKfOb: keyFieldSelect,\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                addedField: addedField,\n                setHead: selectHead,\n                resHead: restoreHead,\n                saveVer: saveVersion,\n                restoreVer: restoreVersion,\n                startHis: startHis,\n\n                editZero: editZero,\n                getData: apiProvider.getLiveRules,\n\n                addSave: addSave,\n                delSave: delSave,\n                editSave: editSave,\n                dataSave: dataSave\n            },\n            dispatch\n        )\n    }\n)(GridTableLDR)"]},"metadata":{},"sourceType":"module"}
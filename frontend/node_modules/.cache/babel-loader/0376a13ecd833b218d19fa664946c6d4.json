{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableH.js\";\nimport React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\n\nimport { Field } from \"redux-form\"; // import Table from \"react-table\";\n\nimport Table from \"react-table\";\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport { avatarColumnProps } from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport { useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\"; // import 'react-table/react-table.css';\n\nimport { currEd, deleteTmp, getAllR, hisFlag, restoreHead } from \"../../services/Redux/actions\";\nimport { bindActionCreators } from 'redux';\nimport { addTmp, revRe, openPop } from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GridTableH extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: null,\n      selected: {},\n      selectAll: 0,\n      adding: false\n    };\n\n    this.componentDidUpdate = prevProps => {\n      const ref = prevProps.refre !== this.props.refre;\n      const cond = this.props.hflag && prevProps.hflag !== this.props.hflag; //TODO::고치고\n\n      if (cond) {\n        this.props.handleData(); //history data reload\n\n        this.props.hisFlag(false);\n      } // if(ref){\n      //checkbox 해제해놓기\n      // }\n\n    };\n\n    this.columns = [{\n      Header: \"No\",\n      // accessor:\"id\",\n      Cell: ({\n        row\n      }) => {\n        // console.log(flatRows)\n        return row._viewIndex + 1;\n      }\n    }, {\n      Header: \"Type\",\n      accessor: \"type\"\n    }, {\n      Header: \"User\",\n      accessor: \"user\"\n    }, {\n      Header: \"Desc\",\n      accessor: \"desc\"\n    }, {\n      Header: \"UpdatedAt\",\n      accessor: \"updatedAt\"\n    }, {\n      Header: \"released\",\n      accessor: \"released\"\n    }, {\n      id: \"checkbox\",\n      accessor: \"\",\n      Header: \"Edited\",\n      Cell: ({\n        row\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox\" // checked={this.state.selected[original.id] === true}\n          ,\n          checked: row._viewIndex == this.props.curr // checked={true}\n          // onChange={() => this.toggleRow(original.id)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      }\n    }, {\n      Header: \"\",\n      maxWidth: 90,\n      filterable: false,\n      Cell: ({\n        row,\n        flatRow\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => this.handleRestore(row, flatRow),\n        children: \"restore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }];\n\n    this.handleRestore = (cell, test) => {\n      this.props.currEd(cell._viewIndex, cell._original);\n\n      switch (this.props.name) {\n        case \"normalizerule\":\n          return this.props.addTmp(cell._original.value.field.map(({\n            vendors,\n            ...other\n          }) => {\n            return {\n              vendors: vendors.join(',').toString(),\n              ...other\n            };\n          }));\n        //TODO:: history 읽어올 로직 바꾸기 여기서 savedData에도 저장해야함\n\n        case \"livedetectrule\":\n          this.props.addTmp(cell._original.value.map(item => {\n            const con = [];\n\n            const res = (({\n              id,\n              active,\n              ruleType,\n              keyField,\n              confirms,\n              ver,\n              ...other\n            }) => {\n              Object.keys(other).filter(it => other[it] !== \"\").forEach(it => {\n                con.push({\n                  field: it,\n                  value: other[it]\n                });\n              });\n              return {\n                id,\n                active,\n                ruleType,\n                keyField,\n                confirms,\n                ver: item.ver\n              };\n            })(item);\n\n            res['conditions'] = con;\n            return res;\n          }));\n          return this.props.resHead(true);\n\n        default:\n          return this.props.addTmp(cell._original.value.field);\n      }\n    };\n\n    this.historyCond = name => {\n      switch (name) {\n        case \"field\":\n          return this.props.history;\n\n        case \"livedetectrule\":\n          return this.props.historyLive;\n\n        case \"normalizerule\":\n          return this.props.historyNormal;\n\n        default:\n          return;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleData();\n  }\n\n  render() {\n    console.log(this.historyCond(this.props.name));\n    console.log(this.props.curr);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Fixed\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"-striped -highlight\",\n            getTdProps: (state, rowInfo, column) => ({\n              style: {\n                height: '40px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center'\n              }\n            }),\n            columns: this.columns // data={this.props.history}\n            ,\n            data: this.historyCond(this.props.name),\n            sorted: [{\n              id: 'updatedAt',\n              desc: true\n            }] // PaginationComponent={Pagination}\n            ,\n            defaultPageSize: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  history: state.fetchAPI.history,\n  historyLive: state.fetchAPI.historyLive,\n  historyNormal: state.fetchAPI.historyNormal,\n  curr: state.fetchAPI.edited,\n  currOr: state.fetchAPI.editedOrigin,\n  hflag: state.fetchAPI.hflag,\n  data: state.fetchAPI.data\n}), dispatch => {\n  return bindActionCreators({\n    addTmp: addTmp,\n    revRe: revRe,\n    openPop: openPop,\n    delTmp: deleteTmp,\n    currEd: currEd,\n    hisFlag: hisFlag,\n    resHead: restoreHead\n  }, dispatch);\n})(GridTableH);","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableH.js"],"names":["React","set","Field","Table","BS","initialData","FormProvider","avatarColumnProps","ActionsCell","HighlightCell","GridFilters","useSelector","connect","fetchAPI","currEd","deleteTmp","getAllR","hisFlag","restoreHead","bindActionCreators","addTmp","revRe","openPop","Pagination","GridTableH","Component","state","editing","selected","selectAll","adding","componentDidUpdate","prevProps","ref","refre","props","cond","hflag","handleData","columns","Header","Cell","row","_viewIndex","accessor","id","curr","maxWidth","filterable","flatRow","handleRestore","cell","test","_original","name","value","field","map","vendors","other","join","toString","item","con","res","active","ruleType","keyField","confirms","ver","Object","keys","filter","it","forEach","push","resHead","historyCond","history","historyLive","historyNormal","componentDidMount","render","console","log","rowInfo","column","style","height","display","flexDirection","justifyContent","desc","edited","currOr","editedOrigin","data","dispatch","delTmp"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport { Field } from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport { avatarColumnProps } from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\n// import 'react-table/react-table.css';\nimport {currEd, deleteTmp, getAllR, hisFlag, restoreHead} from \"../../services/Redux/actions\";\nimport { bindActionCreators } from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport \"./style.scss\"\n\n\nclass GridTableH extends React.Component {\n    state = { editing: null, selected:{}, selectAll:0, adding:false};\n    componentDidMount() {\n        this.props.handleData()\n    }\n\n    componentDidUpdate = (prevProps) => {\n\n        const ref = (prevProps.refre !== this.props.refre)\n        const cond = (this.props.hflag && (prevProps.hflag !== this.props.hflag)) //TODO::고치고\n        if(cond){\n            this.props.handleData() //history data reload\n            this.props.hisFlag(false)\n        }\n        // if(ref){\n            //checkbox 해제해놓기\n        // }\n    }\n    //TODO:: history data 없을때는 no row가 떠야하는뎁..\n    columns = [\n        { Header: \"No\",\n            // accessor:\"id\",\n            Cell: ({row}) => {\n            // console.log(flatRows)\n            return row._viewIndex + 1;\n            }\n        },\n        { Header: \"Type\", accessor: \"type\"},\n        { Header: \"User\", accessor: \"user\" },\n        { Header: \"Desc\", accessor: \"desc\"},\n        { Header: \"UpdatedAt\", accessor: \"updatedAt\"},\n        { Header: \"released\", accessor: \"released\" },\n        {\n            id: \"checkbox\",\n            accessor: \"\",\n            Header: \"Edited\",\n            Cell: ({row}) => {\n                return (\n                    <input\n                        type=\"checkbox\"\n                        className=\"checkbox\"\n                        // checked={this.state.selected[original.id] === true}\n                        checked={row._viewIndex == this.props.curr}\n                        // checked={true}\n                        // onChange={() => this.toggleRow(original.id)}\n                    />\n                );\n            }},\n\n        {\n            Header: \"\",\n            maxWidth: 90,\n            filterable: false,\n            Cell: ({row, flatRow})=>(\n                <button className=\"btn\" onClick={()=>this.handleRestore(row, flatRow)}>\n                    restore\n                </button>\n            )\n        },\n    ];\n\n    handleRestore = (cell, test) => {\n        this.props.currEd(cell._viewIndex, cell._original)\n        switch (this.props.name) {\n            case \"normalizerule\":\n                return this.props.addTmp(cell._original.value.field.map(\n                    ({vendors, ...other})=>{\n                        return {vendors:vendors.join(',').toString(), ...other}\n                    }\n                ))\n            //TODO:: history 읽어올 로직 바꾸기 여기서 savedData에도 저장해야함\n            case \"livedetectrule\":\n\n                this.props.addTmp(cell._original.value.map((item)=>{\n                    const con = []\n                    const res = (({id, active, ruleType, keyField, confirms, ver, ...other})=>{\n                        Object.keys(other)\n                            .filter(it => other[it] !== \"\")\n                            .forEach(it => {\n                                con.push({field:it, value: other[it]})\n                            })\n                        return ({id, active, ruleType, keyField, confirms, ver:item.ver})\n                    })(item)\n                    res['conditions'] = con\n                    return res\n                }))\n\n                return this.props.resHead(true)\n\n            default:\n                return this.props.addTmp(cell._original.value.field)\n        }\n\n    }\n\n    historyCond = (name) => {\n        switch (name) {\n            case \"field\" :\n               return this.props.history\n            case \"livedetectrule\":\n                return this.props.historyLive\n            case \"normalizerule\":\n                return this.props.historyNormal\n            default:\n                return\n        }\n    }\n\n\n    render() {\n        console.log(this.historyCond(this.props.name))\n        console.log(this.props.curr)\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                </div>\n                <div className=\"table-wrapper\">\n                    <div className=\"Fixed\">\n                        <Table\n                            className=\"-striped -highlight\"\n                            getTdProps={(state, rowInfo, column) => ({\n                                style: {\n                                    height:'40px',\n                                    display:'flex',\n                                    flexDirection:'column',\n                                    justifyContent:'center'\n                                },\n                            })}\n                            columns={this.columns}\n                            // data={this.props.history}\n                            data={this.historyCond(this.props.name)}\n                            sorted={[{id:'updatedAt', desc: true}]}\n                            // PaginationComponent={Pagination}\n                            defaultPageSize={10}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        history: state.fetchAPI.history,\n        historyLive: state.fetchAPI.historyLive,\n        historyNormal: state.fetchAPI.historyNormal,\n        curr: state.fetchAPI.edited,\n        currOr: state.fetchAPI.editedOrigin,\n        hflag: state.fetchAPI.hflag,\n        data: state.fetchAPI.data\n\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                resHead: restoreHead\n            },\n            dispatch\n        )\n    }\n\n)(GridTableH)"]},"metadata":{},"sourceType":"module"}
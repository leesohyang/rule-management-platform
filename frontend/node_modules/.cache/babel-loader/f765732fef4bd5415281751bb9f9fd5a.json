{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/components/graph.js\",\n    _s2 = $RefreshSig$();\n\nimport pic from \"../responsive.svg\";\nimport { Graph } from \"react-d3-graph\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect } from \"react\";\nimport { Divider, Grid, Popover } from \"@material-ui/core\";\nimport Input from \"./controls/Input\";\nimport Controls from \"./controls/Controls\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from \"@material-ui/core/List\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Check, CompareArrows, SaveAlt } from \"@material-ui/icons\";\nimport { apiProvider } from \"../services/Provider\";\nimport axios from \"axios\";\nimport { currType, getGraphs, revRe } from \"../services/Redux/actions\";\nimport MultiSelect from \"./controls/MultiSelect\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReleasePopup from \"./popup/ReleasePopup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Form } from \"./useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    // minWidth: 1000,\n    display: \"flex\"\n  },\n  list: {// backgroundColor: theme.palette.background.paper,\n  },\n  relations: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  re_input: {\n    flexGrow: 1,\n    margin: 10\n  },\n  form: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction GraphD(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const classes = useStyles2();\n  const dataTmp = useSelector(state => state.fetchAPI.dataTmp);\n  const refresh = useSelector(state => state.fetchAPI);\n  const curr = useSelector(state => state.SlidePop.clickedData);\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [mouse, setMouse] = React.useState({});\n  const [mouseDetail, setMouseDetail] = React.useState({});\n\n  const decorateGraphNodesWithInitialPositioning = nodes => {\n    return nodes.map(n => Object.assign({}, n, {\n      x: n.x || Math.floor(Math.random() * 500),\n      y: n.y || Math.floor(Math.random() * 500)\n    }));\n  };\n\n  function useEffectSkipFirst(fn, arr) {\n    _s();\n\n    const isFirst = React.useRef(true);\n    useEffect(() => {\n      if (isFirst.current) {\n        isFirst.current = false;\n        return;\n      }\n\n      return fn();\n    }, arr);\n  }\n\n  _s(useEffectSkipFirst, \"x0DIufxRLPW/5DynbDxfl2fdtNU=\");\n\n  useEffect(() => {\n    props.handleData(curr.i);\n    return () => {\n      // when component unmount\n      dispatch(getGraphs([], []));\n    };\n  }, [refresh.refre, refresh.ad]);\n\n  const onClickNode = function (nodeId, node) {\n    setAnchorEl(null);\n    props.expandData(node.id);\n  };\n\n  const onMouseNode = function (event, nodeId, node) {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setMouse(node);\n  };\n\n  const outMouseNode = function (event) {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const handleClose1 = () => {\n    setAnchorEl(null);\n  };\n\n  useEffectSkipFirst(() => {\n    apiProvider.getRow(mouse.type, mouse.id).then(data => {\n      setMouseDetail(data.data);\n    });\n  }, [mouse]);\n  const myConfig = {\n    \"automaticRearrangeAfterDropNode\": true,\n    \"collapsible\": false,\n    \"directed\": false,\n    \"focusAnimationDuration\": 0.75,\n    \"focusZoom\": 1,\n    \"freezeAllDragEvents\": false,\n    \"height\": 700,\n    \"highlightDegree\": 1,\n    \"highlightOpacity\": 1,\n    \"linkHighlightBehavior\": false,\n    \"maxZoom\": 8,\n    \"minZoom\": 0.1,\n    \"nodeHighlightBehavior\": false,\n    \"panAndZoom\": false,\n    \"staticGraph\": true,\n    \"staticGraphWithDragAndDrop\": true,\n    \"width\": \"100%\",\n    \"d3\": {\n      \"alphaTarget\": 0.05,\n      \"gravity\": -100,\n      \"linkLength\": 100,\n      \"linkStrength\": 1,\n      \"disableLinkForce\": false\n    },\n    \"node\": {\n      \"color\": \"#d3d3d3\",\n      \"fontColor\": \"black\",\n      \"fontSize\": 8,\n      \"fontWeight\": \"normal\",\n      \"highlightColor\": \"SAME\",\n      \"highlightFontSize\": 8,\n      \"highlightFontWeight\": \"normal\",\n      \"highlightStrokeColor\": \"SAME\",\n      \"highlightStrokeWidth\": \"SAME\",\n      \"mouseCursor\": \"pointer\",\n      \"opacity\": 1,\n      \"renderLabel\": true,\n      \"size\": 200,\n      \"strokeColor\": \"none\",\n      \"strokeWidth\": 1.5,\n      \"svg\": \"\",\n      \"symbolType\": \"circle\",\n      \"labelProperty\": \"name\"\n    },\n    \"link\": {\n      \"color\": \"#d3d3d3\",\n      \"fontColor\": \"black\",\n      \"fontSize\": 8,\n      \"fontWeight\": \"normal\",\n      \"highlightColor\": \"SAME\",\n      \"highlightFontSize\": 8,\n      \"highlightFontWeight\": \"normal\",\n      \"labelProperty\": \"label\",\n      \"mouseCursor\": \"pointer\",\n      \"opacity\": 1,\n      \"renderLabel\": false,\n      \"semanticStrokeWidth\": false,\n      \"strokeWidth\": 1.5,\n      \"markerHeight\": 6,\n      \"markerWidth\": 6,\n      \"strokeDasharray\": 0,\n      \"strokeDashoffset\": 0,\n      \"strokeLinecap\": \"butt\"\n    }\n  };\n\n  const handleRefresh = () => {\n    dispatch(revRe(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleRefresh,\n      children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Graph, {\n        className: classes.root,\n        id: \"graph-id\",\n        data: dataTmp,\n        config: myConfig,\n        onClickNode: onClickNode,\n        onMouseOverNode: onMouseNode,\n        onMouseOutNode: outMouseNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        style: {\n          pointerEvents: 'none'\n        },\n        id: \"mouse-over-popover\",\n        open: Boolean(anchorEl),\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        onClose: handleClose1,\n        disableRestoreFocus: true // PaperProps={{onMouseOver:onMouseNode, onMouseOut:outMouseNode}}\n        ,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.heading,\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: [\" \", mouseDetail.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.heading,\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: [\" \", mouseDetail.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.heading,\n              children: \"nodeType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondaryHeading,\n              children: [\" \", mouse.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(GraphD, \"poybEqyy5dTnv1avEtj/e/Rcgyw=\", false, function () {\n  return [useStyles2, useSelector, useSelector, useSelector, useDispatch, useEffectSkipFirst];\n});\n\n_c = GraphD;\nexport default GraphD;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphD\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/components/graph.js"],"names":["Graph","makeStyles","Button","SearchIcon","React","useEffect","Divider","Grid","Popover","Input","Controls","AddIcon","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","List","useDispatch","useSelector","DeleteIcon","Check","CompareArrows","SaveAlt","apiProvider","axios","currType","getGraphs","revRe","MultiSelect","RefreshIcon","Menu","MenuItem","ReleasePopup","Typography","Form","useStyles2","theme","root","display","list","relations","flexDirection","re_input","flexGrow","margin","form","width","maxWidth","backgroundColor","palette","background","paper","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","text","secondary","GraphD","props","classes","dataTmp","state","fetchAPI","refresh","curr","SlidePop","clickedData","dispatch","anchorEl","setAnchorEl","useState","open","setOpen","mouse","setMouse","mouseDetail","setMouseDetail","decorateGraphNodesWithInitialPositioning","nodes","map","n","Object","assign","x","Math","floor","random","y","useEffectSkipFirst","fn","arr","isFirst","useRef","current","handleData","i","refre","ad","onClickNode","nodeId","node","expandData","id","onMouseNode","event","stopPropagation","currentTarget","outMouseNode","handleClose1","getRow","type","then","data","myConfig","handleRefresh","pointerEvents","Boolean","vertical","horizontal","name"],"mappings":"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","sourcesContent":["import pic from '../responsive.svg'\nimport { Graph } from \"react-d3-graph\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, {useEffect} from \"react\";\nimport {Divider, Grid, Popover} from \"@material-ui/core\";\nimport Input from \"./controls/Input\";\nimport Controls from \"./controls/Controls\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from \"@material-ui/core/List\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {Check, CompareArrows, SaveAlt} from \"@material-ui/icons\";\nimport {apiProvider} from \"../services/Provider\";\nimport axios from \"axios\";\nimport {currType, getGraphs, revRe} from \"../services/Redux/actions\";\nimport MultiSelect from \"./controls/MultiSelect\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReleasePopup from \"./popup/ReleasePopup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Form} from \"./useForm\";\n\nconst useStyles2 = makeStyles((theme)=>({\n    root: {\n        // minWidth: 1000,\n        display: \"flex\"\n    },\n    list:{\n        // backgroundColor: theme.palette.background.paper,\n    },\n    relations: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    re_input: {\n        flexGrow: 1,\n        margin: 10,\n    },\n    form:{\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    heading:{\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0\n    },\n    secondaryHeading:{\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n\n}));\n\n\nfunction GraphD(props){\n    const classes = useStyles2();\n\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n    const refresh = useSelector(state=>state.fetchAPI)\n    const curr = useSelector(state => state.SlidePop.clickedData)\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const [open, setOpen] = React.useState(false);\n    const [mouse, setMouse] = React.useState({});\n    const [mouseDetail, setMouseDetail] = React.useState({})\n\n\n    const decorateGraphNodesWithInitialPositioning = nodes => {\n        return nodes.map(n =>\n            Object.assign({}, n, {\n                x: n.x || Math.floor(Math.random() * 500),\n                y: n.y || Math.floor(Math.random() * 500),\n            })\n        );\n    };\n\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffect(()=>{\n        props.handleData(curr.i)\n        return ()=>{ // when component unmount\n            dispatch(getGraphs([], []))\n        }\n    }, [refresh.refre, refresh.ad])\n\n    const onClickNode = function(nodeId, node) {\n        setAnchorEl(null)\n        props.expandData(node.id)\n    };\n\n    const onMouseNode = function(event, nodeId, node) {\n        event.stopPropagation();\n        setAnchorEl(event.currentTarget)\n        setMouse(node)\n    };\n    const outMouseNode = function(event) {\n        setAnchorEl(null)\n        setOpen(false)\n\n    }\n    const handleClose1 = () => {\n        setAnchorEl(null);\n    };\n\n    useEffectSkipFirst(()=>{\n        apiProvider.getRow(mouse.type, mouse.id).then((data)=>{\n            setMouseDetail(data.data)\n        })\n    }, [mouse])\n\n\n    const myConfig =\n        {\n            \"automaticRearrangeAfterDropNode\": true,\n            \"collapsible\": false,\n            \"directed\": false,\n            \"focusAnimationDuration\": 0.75,\n            \"focusZoom\": 1,\n            \"freezeAllDragEvents\": false,\n            \"height\": 700,\n            \"highlightDegree\": 1,\n            \"highlightOpacity\": 1,\n            \"linkHighlightBehavior\": false,\n            \"maxZoom\": 8,\n            \"minZoom\": 0.1,\n            \"nodeHighlightBehavior\": false,\n            \"panAndZoom\": false,\n            \"staticGraph\": true,\n            \"staticGraphWithDragAndDrop\": true,\n            \"width\": \"100%\",\n            \"d3\": {\n                \"alphaTarget\": 0.05,\n                \"gravity\": -100,\n                \"linkLength\": 100,\n                \"linkStrength\": 1,\n                \"disableLinkForce\": false\n            },\n            \"node\": {\n                \"color\": \"#d3d3d3\",\n                \"fontColor\": \"black\",\n                \"fontSize\": 8,\n                \"fontWeight\": \"normal\",\n                \"highlightColor\": \"SAME\",\n                \"highlightFontSize\": 8,\n                \"highlightFontWeight\": \"normal\",\n                \"highlightStrokeColor\": \"SAME\",\n                \"highlightStrokeWidth\": \"SAME\",\n                \"mouseCursor\": \"pointer\",\n                \"opacity\": 1,\n                \"renderLabel\": true,\n                \"size\": 200,\n                \"strokeColor\": \"none\",\n                \"strokeWidth\": 1.5,\n                \"svg\": \"\",\n                \"symbolType\": \"circle\",\n                \"labelProperty\": \"name\"\n\n            },\n            \"link\": {\n                \"color\": \"#d3d3d3\",\n                \"fontColor\": \"black\",\n                \"fontSize\": 8,\n                \"fontWeight\": \"normal\",\n                \"highlightColor\": \"SAME\",\n                \"highlightFontSize\": 8,\n                \"highlightFontWeight\": \"normal\",\n                \"labelProperty\": \"label\",\n                \"mouseCursor\": \"pointer\",\n                \"opacity\": 1,\n                \"renderLabel\": false,\n                \"semanticStrokeWidth\": false,\n                \"strokeWidth\": 1.5,\n                \"markerHeight\": 6,\n                \"markerWidth\": 6,\n                \"strokeDasharray\": 0,\n                \"strokeDashoffset\": 0,\n                \"strokeLinecap\": \"butt\"\n            }\n        }\n    const handleRefresh = () => {\n        dispatch(revRe(true))\n    }\n\n    return (\n        <div>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleRefresh}>\n                <RefreshIcon>\n                </RefreshIcon>\n            </Button>\n\n            <div\n                // style={{\n                // height: '400px',\n                // width: '1000px',\n                // border: \"0.05px dotted #000000\"\n                // }}\n            >\n\n                <Graph\n                    className={classes.root}\n                    id=\"graph-id\"\n                    data={dataTmp}\n                    config={myConfig}\n                    onClickNode={onClickNode}\n                    onMouseOverNode={onMouseNode}\n                    onMouseOutNode={outMouseNode}\n                />\n                <Popover\n                    style={{pointerEvents:'none'}}\n                    id=\"mouse-over-popover\"\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    onClose={handleClose1}\n                    disableRestoreFocus\n                    // PaperProps={{onMouseOver:onMouseNode, onMouseOut:outMouseNode}}\n                >\n                    <List className={classes.form}>\n                        <ListItemText>\n                            <Typography className={classes.heading}>id</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouseDetail.id}</Typography>\n                        </ListItemText>\n                        <Divider/>\n                        <ListItemText>\n                            <Typography className={classes.heading}>name</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouseDetail.name}</Typography>\n                        </ListItemText>\n                        <Divider/>\n\n                        <ListItemText>\n                            <Typography className={classes.heading}>nodeType</Typography>\n                            <Typography className={classes.secondaryHeading}> {mouse.type}</Typography>\n                        </ListItemText>\n                    </List>\n                </Popover>\n\n\n            </div>\n\n        </div>\n\n\n)\n}\nexport default GraphD\n"]},"metadata":{},"sourceType":"module"}
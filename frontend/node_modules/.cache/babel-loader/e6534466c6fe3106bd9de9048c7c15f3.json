{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/components/popup/ReleasePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\n\nimport { convertHex2Str } from \"../util/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editZero, hisFlag, openPop, revRe } from \"../../services/Redux/actions\";\nimport { apiProvider } from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReleasePopup(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.fetchAPI.data);\n  const currData = useSelector(state => state.fetchAPI.editedOrigin);\n  const savedData = useSelector(state => state.editOperator.savedData);\n  const [state, setState] = React.useState({\n    releasePath: \"\",\n    nodeSize: \"\",\n    makeSubNode: false,\n    separator: \"\"\n  });\n  const [signals, setSignals] = React.useState([]);\n  const [sigDef, setSigDef] = React.useState([]);\n  React.useEffect(() => {\n    apiProvider.getReleaseForm(\"Field\").then(res => {\n      setState(res.data.value);\n      setSigDef(res.data.signal);\n    } // console.log(res)\n    );\n  }, []);\n\n  const onChange = (key, value) => {\n    setState({ ...state,\n      [key]: value\n    });\n  };\n\n  const onClose = () => {\n    dispatch(openPop(false));\n  };\n\n  const handleRelease = () => {\n    //field 테이블에 넣는 것.\n    // props.deleteAll()\n    // data.forEach((item) => {\n    //     props.addf(item)\n    // })\n    //TODO:: 이 전에 savedData 있으면 저장 하고 upsert 해놔야지. savedData 가 없다?(바뀐게 없다?) => updateRelease 해놔야함. saveData가 없다는건 history 0번이랑 같다는 얘기. <==무조건 성립해야함 -> 그럼 그냥 배포 유무만 update 하면 됨.\n    if (!savedData.length) {\n      apiProvider.updateRelease().then(() => {\n        dispatch(revRe(true));\n        dispatch(editZero());\n      }); //사실 마지막 dispatch는 없어도 됨.\n    } else {\n      this.state.willRemoved.length && this.state.willRemoved.forEach(id => {\n        apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({\n          willRemoved: []\n        }));\n      });\n      apiProvider.upsertAndHistory(\"true\", savedData.map(item => {\n        const con = [];\n\n        const res = (({\n          id,\n          active,\n          ruletype,\n          keyfield,\n          confirms,\n          ver,\n          updatedat,\n          ...other\n        }) => {\n          Object.keys(other).filter(it => other[it] !== \"\").forEach(it => {\n            con.push({\n              field: it,\n              valule: other[it]\n            });\n          });\n          return {\n            id,\n            active,\n            ruletype,\n            keyfield,\n            confirms,\n            ver: ver\n          };\n        })(item);\n\n        res['conditions'] = con;\n        return res;\n      })).then(() => {\n        this.props.dataSave([]);\n        this.props.revRe(true);\n      });\n    } //TODO:: 비동기처리 할 것.\n\n\n    apiProvider.releaseZk(state).then(apiProvider.signalZk(signals)); // const history = {\n    //     id: \"1\",\n    //     desc: \"temp\",\n    //     user: \"admin\",\n    //     released: \"true\",\n    //     value: {field: data}\n    // }\n    // //hitory 테이블에 넣는것.\n    // isEqual(data, currData.value.field)\n    //     ? apiProvider.update(props.name, currData).then(() => {\n    //         dispatch(hisFlag(true));\n    //         dispatch(openPop(false))\n    //     })\n    //     : apiProvider.insert(props.name, history).then(() => {\n    //         dispatch(hisFlag(true));\n    //         dispatch(openPop(false))\n    //     })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup--dark\",\n    id: \"releaseOptionPopup\",\n    style: {\n      width: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"release option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: () => onClose()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__body release-option-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"release-option-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"release-option-tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Release Path : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // value={state[tab].releasePath}\n            // defaultValue={\"default\"}\n            ,\n            value: state.releasePath,\n            className: \"form-control\",\n            style: {\n              width: \"455px\"\n            },\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              onChange(\"releasePath\", value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Node Size : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // value={state[tab].releasePath}\n            ,\n            value: state.nodeSize,\n            className: \"form-control\",\n            style: {\n              width: \"155px\"\n            },\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              onChange(\"nodeSize\", value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Make Sub Node : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // value={state[tab].releasePath}\n            ,\n            value: state.makeSubNode,\n            className: \"form-control\",\n            style: {\n              width: \"155px\"\n            },\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              onChange(\"makeSubNode\", value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Separator : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: state.separator,\n            className: \"form-control\",\n            style: {\n              width: \"140px\"\n            },\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              onChange(\"separator\", value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: \"15px\"\n            },\n            children: \"Convert : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\\"\" + convertHex2Str(state.separator) + \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signal-option-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signal Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--blue\",\n          style: {\n            marginLeft: \"430px\"\n          },\n          onClick: () => {\n            if (signals.length > 0 && !signals.slice(-1)[0].signal && !signals.slice(-1)[0].path) {\n              return;\n            } // setSignals([...signals, {signal: '', path: ''}]);\n\n\n            setSignals([...signals, sigDef]);\n          },\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"signal-option-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n              children: [/*#__PURE__*/_jsxDEV(\"col\", {\n                style: {\n                  width: \"240px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"col\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                style: {\n                  width: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Signal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Path\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: signals && signals.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.signal,\n                    className: \"form-control\",\n                    onChange: e => {\n                      const {\n                        value\n                      } = e.target;\n                      setSignals([...signals.slice(0, idx), { ...item,\n                        signal: value\n                      }, ...signals.slice(idx + 1)]);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: item.path,\n                    className: \"form-control\",\n                    onChange: e => {\n                      const {\n                        value\n                      } = e.target;\n                      setSignals([...signals.slice(0, idx), { ...item,\n                        path: value\n                      }, ...signals.slice(idx + 1)]);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    onClick: () => {\n                      setSignals([...signals.slice(0, idx), ...signals.slice(idx + 1)]);\n                    },\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this)]\n              }, \"signal-option-popup-\" + idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onClose(),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--blue\",\n        onClick: () => handleRelease(),\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReleasePopup, \"mBediXtxr9BeEdCq+vC9vQ9OjNI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ReleasePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReleasePopup\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/components/popup/ReleasePopup.js"],"names":["React","convertHex2Str","useDispatch","useSelector","editZero","hisFlag","openPop","revRe","apiProvider","isEqual","ReleasePopup","props","dispatch","data","state","fetchAPI","currData","editedOrigin","savedData","editOperator","setState","useState","releasePath","nodeSize","makeSubNode","separator","signals","setSignals","sigDef","setSigDef","useEffect","getReleaseForm","then","res","value","signal","onChange","key","onClose","handleRelease","length","updateRelease","willRemoved","forEach","id","delNormal","parseInt","upsertAndHistory","map","item","con","active","ruletype","keyfield","confirms","ver","updatedat","other","Object","keys","filter","it","push","field","valule","dataSave","releaseZk","signalZk","width","e","target","marginLeft","slice","path","idx"],"mappings":"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","sourcesContent":["import React from 'react'\n// import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editZero, hisFlag, openPop, revRe} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\n\nexport default function ReleasePopup(props) {\n\n    const dispatch = useDispatch();\n\n    const data = useSelector(state => state.fetchAPI.data)\n    const currData = useSelector(state => state.fetchAPI.editedOrigin)\n    const savedData = useSelector(state=>state.editOperator.savedData)\n\n    const [state, setState] = React.useState({\n        releasePath: \"\",\n        nodeSize: \"\",\n        makeSubNode: false,\n        separator: \"\",\n    })\n\n    const [signals, setSignals] = React.useState([]);\n    const [sigDef, setSigDef] = React.useState([]);\n\n    React.useEffect(() => {\n        apiProvider.getReleaseForm(\"Field\").then((res) => {\n                setState(res.data.value);\n                setSigDef(res.data.signal);\n            }\n            // console.log(res)\n        )\n    }, [])\n\n    const onChange = (key, value) => {\n        setState({\n            ...state,\n            [key]: value,\n        });\n    }\n    const onClose = () => {\n        dispatch(openPop(false))\n    }\n    const handleRelease = () => {\n        //field 테이블에 넣는 것.\n        // props.deleteAll()\n        // data.forEach((item) => {\n        //     props.addf(item)\n        // })\n        //TODO:: 이 전에 savedData 있으면 저장 하고 upsert 해놔야지. savedData 가 없다?(바뀐게 없다?) => updateRelease 해놔야함. saveData가 없다는건 history 0번이랑 같다는 얘기. <==무조건 성립해야함 -> 그럼 그냥 배포 유무만 update 하면 됨.\n        if(!savedData.length){\n            apiProvider.updateRelease().then(()=>{dispatch(revRe(true)); dispatch(editZero())}) //사실 마지막 dispatch는 없어도 됨.\n        }\n        else {\n\n            this.state.willRemoved.length && this.state.willRemoved.forEach((id) => {\n                apiProvider.delNormal(\"rules\", parseInt(id)).then(() => this.setState({willRemoved: []}))\n            })\n            apiProvider.upsertAndHistory(\"true\", savedData.map((item)=>{\n                const con = []\n                const res = (({id, active, ruletype, keyfield, confirms, ver, updatedat, ...other})=>{\n                    Object.keys(other)\n                        .filter(it=>other[it] !== \"\")\n                        .forEach(it=>{\n                            con.push({field:it, valule:other[it]})\n                        })\n                    return ({id, active, ruletype, keyfield, confirms, ver:ver})\n                })(item)\n                res['conditions']=con\n                return res\n            })).then(() => {this.props.dataSave([]); this.props.revRe(true)})\n        }\n        //TODO:: 비동기처리 할 것.\n        apiProvider.releaseZk(state).then(apiProvider.signalZk(signals))\n        // const history = {\n        //     id: \"1\",\n        //     desc: \"temp\",\n        //     user: \"admin\",\n        //     released: \"true\",\n        //     value: {field: data}\n        // }\n\n        // //hitory 테이블에 넣는것.\n        // isEqual(data, currData.value.field)\n        //     ? apiProvider.update(props.name, currData).then(() => {\n        //         dispatch(hisFlag(true));\n        //         dispatch(openPop(false))\n        //     })\n        //     : apiProvider.insert(props.name, history).then(() => {\n        //         dispatch(hisFlag(true));\n        //         dispatch(openPop(false))\n        //     })\n\n    }\n    return (\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    {/*<IntlMessages id=\"field.release.option\" />*/}\n                    release option\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Release Path : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            // defaultValue={\"default\"}\n                            value={state.releasePath}\n                            className=\"form-control\"\n                            style={{width: \"455px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"releasePath\", value);\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label>Node Size : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            value={state.nodeSize}\n                            className=\"form-control\"\n                            style={{width: \"155px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"nodeSize\", value);\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label>Make Sub Node : </label>\n                        <input\n                            type=\"text\"\n                            // value={state[tab].releasePath}\n                            value={state.makeSubNode}\n                            className=\"form-control\"\n                            style={{width: \"155px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"makeSubNode\", value);\n                            }}\n                        />\n                    </div>\n\n                    <div>\n                        <label>Separator : </label>\n                        <input\n                            type=\"text\"\n                            value={state.separator}\n                            className=\"form-control\"\n                            style={{width: \"140px\"}}\n                            onChange={e => {\n                                const {value} = e.target;\n                                onChange(\"separator\", value);\n                            }}\n                        />\n                        <label style={{marginLeft: \"15px\"}}>Convert : </label>\n                        <strong>{\"\\\"\" + convertHex2Str(state.separator) + \"\\\"\"}</strong>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"signal-option-wrapper\">\n                    <strong>Signal Option</strong>\n                    <button\n                        className=\"btn btn--blue\"\n                        style={{marginLeft: \"430px\"}}\n                        onClick={() => {\n                            if (signals.length > 0 && (!signals.slice(-1)[0].signal && !signals.slice(-1)[0].path)) {\n                                return;\n                            }\n                            // setSignals([...signals, {signal: '', path: ''}]);\n                            setSignals([...signals, sigDef]);\n                        }}\n                    >ADD\n                    </button>\n                    <div\n                        className=\"table-wrapper\"\n                    >\n                        <table className=\"signal-option-table\">\n                            <colgroup>\n                                <col style={{width: \"240px\"}}/>\n                                <col/>\n                                <col style={{width: \"30px\"}}/>\n                            </colgroup>\n                            <thead>\n                            <tr>\n                                <th>Signal</th>\n                                <th>Path</th>\n                                <th></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {signals &&\n                            signals.map((item, idx) => (\n                                <tr key={\"signal-option-popup-\" + idx}>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            value={item.signal}\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                const {value} = e.target;\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    {\n                                                        ...item,\n                                                        signal: value,\n                                                    },\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        />\n                                    </td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            value={item.path}\n                                            className=\"form-control\"\n                                            onChange={e => {\n                                                const {value} = e.target;\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    {\n                                                        ...item,\n                                                        path: value,\n                                                    },\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        />\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"btn\"\n                                            onClick={() => {\n                                                setSignals([\n                                                    ...signals.slice(0, idx),\n                                                    ...signals.slice(idx + 1),\n                                                ]);\n                                            }}\n                                        >X\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    {/*<IntlMessages id=\"cancel\" />*/}\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={() => handleRelease()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
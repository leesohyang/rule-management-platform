{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectConfirmsPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { convertHex2Str } from \"../util/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addedField, addTmp, currType, hisFlag, keyFieldSelect, openPop, openSelectConFieldPop, openSelectKeyFieldPop, openSelectPop } from \"../../services/Redux/actions\";\nimport { apiProvider } from \"../../services/Provider\";\nimport { Field, change } from \"redux-form\";\nimport Table from \"react-table\";\nimport \"../table/style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectConfirmsPopup(props) {\n  _s();\n\n  //TODO:: submit 누르면 dispatch(change)) 하기.\n  const kfOb = useSelector(state => state.fetchAPI.keyField);\n  const headers = useSelector(state => state.fetchAPI.header);\n  const [selectKey, setSelectKey] = React.useState(\"\");\n  const [selField, setSelField] = React.useState(\"\");\n  const [selConType, setSelConType] = React.useState(\"\");\n  const [data, setData] = React.useState([]);\n  const conType = [\"String\", \"Numeric\", \"IP\"];\n  const columns = [{\n    Header: \"Field\",\n    accessor: \"field\"\n  }, {\n    Header: \"Condition Type\",\n    accessor: \"conType\"\n  }];\n\n  const condList = ({\n    id,\n    active,\n    ruleType,\n    keyField,\n    confirms,\n    ...other\n  }) => {\n    const li = Object.keys(other).filter(it => other[it] !== \"\");\n    return !li.length ? headers.slice().map(({\n      Header\n    }) => Header).filter(it => [\"id\", \"active\", \"ruleType\", \"keyField\", \"confirms\"].indexOf(it) === -1) : li;\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSelect = () => {\n    let res = [];\n    data.forEach(it => {\n      res = [...res, it.conType !== \"String\" ? it.conType.charAt(0) + \":\" + it.field : it.field];\n    });\n    dispatch(change(\"inline\", \"confirms\", res.join(',')));\n    dispatch(openSelectConFieldPop(false));\n  };\n\n  const onClose = () => {\n    dispatch(openSelectConFieldPop(false));\n  };\n\n  const handleAdd = () => {\n    setData([...data, {\n      field: selField,\n      conType: selConType\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup--dark\",\n    id: \"releaseOptionPopup\",\n    style: {\n      width: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"select Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: () => onClose()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: e => selField && selConType && handleAdd(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"signal-option-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n            children: [/*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: \"240px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              style: {\n                width: \"30px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select Condition Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  onChange: e => {\n                    setSelField(e.target.value);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 37\n                  }, this), condList(kfOb).map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  onChange: e => {\n                    setSelConType(e.target.value);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 37\n                  }, this), conType.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item,\n                    children: item\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          defaultPageSize: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => onClose(),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--blue\",\n          onClick: () => handleSelect(),\n          children: \"select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectConfirmsPopup, \"Bf+/blH7sBPMoWRrKKRMrqVzgy0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = SelectConfirmsPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectConfirmsPopup\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectConfirmsPopup.js"],"names":["React","useEffect","convertHex2Str","useDispatch","useSelector","addedField","addTmp","currType","hisFlag","keyFieldSelect","openPop","openSelectConFieldPop","openSelectKeyFieldPop","openSelectPop","apiProvider","Field","change","Table","SelectConfirmsPopup","props","kfOb","state","fetchAPI","keyField","headers","header","selectKey","setSelectKey","useState","selField","setSelField","selConType","setSelConType","data","setData","conType","columns","Header","accessor","condList","id","active","ruleType","confirms","other","li","Object","keys","filter","it","length","slice","map","indexOf","dispatch","handleSelect","res","forEach","charAt","field","join","onClose","handleAdd","width","e","target","value","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {convertHex2Str} from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {\n    addedField, addTmp,\n    currType,\n    hisFlag, keyFieldSelect,\n    openPop, openSelectConFieldPop,\n    openSelectKeyFieldPop,\n    openSelectPop\n} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport {Field, change} from \"redux-form\";\nimport Table from \"react-table\";\n\nimport \"../table/style.scss\"\n\nexport default function SelectConfirmsPopup(props) {\n\n    //TODO:: submit 누르면 dispatch(change)) 하기.\n    const kfOb = useSelector(state => state.fetchAPI.keyField)\n    const headers = useSelector(state => state.fetchAPI.header)\n    const [selectKey, setSelectKey] = React.useState(\"\")\n\n    const [selField, setSelField] = React.useState(\"\")\n    const [selConType, setSelConType] = React.useState(\"\")\n\n\n    const [data, setData] = React.useState([])\n\n    const conType = [\"String\", \"Numeric\", \"IP\"]\n\n    const columns = [\n        {Header: \"Field\", accessor: \"field\"},\n        {Header: \"Condition Type\", accessor: \"conType\"}\n    ];\n\n    const condList = ({id, active, ruleType, keyField, confirms, ...other}) => {\n        const li = Object.keys(other).filter(it => other[it] !== \"\")\n        return !li.length ?\n            headers.slice().map(({Header}) => Header).filter(it => [\"id\", \"active\", \"ruleType\", \"keyField\", \"confirms\"].indexOf(it) === -1) : li\n    }\n\n    const dispatch = useDispatch();\n\n    const handleSelect = () => {\n        let res = []\n        data.forEach((it)=>{\n            res = [...res, it.conType !== \"String\" ? (it.conType.charAt(0) + \":\" + it.field) : it.field]\n        })\n        dispatch(change(\"inline\", \"confirms\", res.join(',')))\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectConFieldPop(false))\n    }\n\n    const handleAdd = () => {\n        setData([...data, {field:selField, conType:selConType}])\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div className=\"popup__body\">\n\n                <button type=\"button\" className=\"btn\" onClick={(e) => (selField && selConType) && handleAdd()}>\n                    Add\n                </button>\n\n\n                <div\n                    className=\"table-wrapper\"\n                >\n                    <table className=\"signal-option-table\">\n                        <colgroup>\n                            <col style={{width: \"240px\"}}/>\n                            <col/>\n                            <col style={{width: \"30px\"}}/>\n                        </colgroup>\n                        <thead>\n                        <tr>\n                            <th>Select Field</th>\n                            <th>Select Condition Type</th>\n                            <th></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelField(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {condList(kfOb).map(\n                                        (item, index) => (\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                            <td>\n                                <select\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setSelConType(e.target.value);\n                                    }}\n                                >\n                                    <option></option>\n                                    {conType.map(\n                                        (item, index)=>(\n                                            <option key={index} value={item}>{item}</option>\n                                        )\n                                    )}\n                                </select>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"table-wrapper\">\n                    <Table\n                        columns={columns}\n                        data={data}\n                        defaultPageSize={5}\n                    >\n                    </Table>\n                </div>\n\n                <div className=\"popup__footer\">\n                    <button\n                        className=\"btn\"\n                        onClick={() => onClose()}\n                    >\n                        cancel\n                    </button>\n                    <button className=\"btn btn--blue\" onClick={() => handleSelect()}>\n                        select\n                    </button>\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
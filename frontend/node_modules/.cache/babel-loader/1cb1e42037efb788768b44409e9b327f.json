{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectFieldPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\n\nimport { convertHex2Str } from \"../util/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addedField, currType, hisFlag, openPop, openSelectPop } from \"../../services/Redux/actions\";\nimport { apiProvider } from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal'; // const useStyles = makeStyles(theme => ({\n//     dialogWrapper: {\n//         padding: theme.spacing(2),\n//         position: 'absolute',\n//         top: theme.spacing(5),\n//         maxWidth: 450\n//     },\n//     dialogTitle: {\n//         paddingRight: '0px'\n//     }\n// }))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectFieldPopup(props) {\n  _s();\n\n  const colList = [\"test1\", \"test2\", \"test3\", \"test4\"]; //field list api\n\n  const [addField, setAddField] = React.useState();\n  const dispatch = useDispatch(); //TODO::list는 kfob에서 가져오고, save하면 어캐 저장하지\n\n  const handleSelect = () => {\n    dispatch(addedField(addField));\n    dispatch(openSelectPop(false));\n  };\n\n  const onClose = () => {\n    dispatch(openSelectPop(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup popup--dark\",\n    id: \"releaseOptionPopup\",\n    style: {\n      width: '600px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"select Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-close\",\n        onClick: () => onClose()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__body release-option-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"release-option-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"release-option-tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Field to Add : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => setAddField(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), colList.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item,\n              children: [\" \", item, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onClose(),\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--blue\",\n        onClick: () => handleSelect(),\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectFieldPopup, \"qf65TBu0+2dMiHf8ATDuAEW2bJQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SelectFieldPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectFieldPopup\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/popup/SelectFieldPopup.js"],"names":["React","useEffect","convertHex2Str","useDispatch","useSelector","addedField","currType","hisFlag","openPop","openSelectPop","apiProvider","isEqual","SelectFieldPopup","props","colList","addField","setAddField","useState","dispatch","handleSelect","onClose","width","event","target","value","map","item"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\n// import { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\n// import { makeStyles } from \"@material-ui/core\";\n// import Controls from \"./controls/Controls\";\n// import CloseIcon from '@material-ui/icons/Close';\nimport { convertHex2Str } from \"../util/utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addedField, currType, hisFlag, openPop, openSelectPop} from \"../../services/Redux/actions\";\nimport {apiProvider} from \"../../services/Provider\";\nimport isEqual from 'lodash.isequal';\n// const useStyles = makeStyles(theme => ({\n//     dialogWrapper: {\n//         padding: theme.spacing(2),\n//         position: 'absolute',\n//         top: theme.spacing(5),\n//         maxWidth: 450\n//     },\n//     dialogTitle: {\n//         paddingRight: '0px'\n//     }\n// }))\n\nexport default function SelectFieldPopup(props) {\n\n\n    const colList = [\"test1\", \"test2\", \"test3\", \"test4\"]; //field list api\n    const [addField, setAddField] = React.useState();\n\n    const dispatch = useDispatch();\n\n    //TODO::list는 kfob에서 가져오고, save하면 어캐 저장하지\n\n    const handleSelect = () => {\n        dispatch(addedField(addField))\n        dispatch(openSelectPop(false))\n    }\n\n    const onClose = () => {\n        dispatch(openSelectPop(false))\n    }\n\n    return (\n\n        <div\n            className=\"popup popup--dark\"\n            id=\"releaseOptionPopup\"\n            style={{ width: '600px'}}\n        >\n            <div className=\"popup__header\">\n                <h5>\n                    select Field\n                </h5>\n                <button\n                    className=\"btn btn-close\"\n                    onClick={() => onClose()}\n                />\n            </div>\n            <div\n                className=\"popup__body release-option-popup\"\n            >\n                <div className=\"release-option-wrap\">\n                    <div className=\"release-option-tab\"></div>\n                    <div>\n                        <label>Select Field to Add : </label>\n                        <select\n                            onChange = { (event) => setAddField(event.target.value)}\n                        >\n                            <option></option>\n                            {colList.map(item=>(\n                                <option value={item}> {item} </option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <hr />\n\n            </div>\n            <div className=\"popup__footer\">\n                <button\n                    className=\"btn\"\n                    onClick={() => onClose()}\n                >\n                    cancel\n                </button>\n                <button className=\"btn btn--blue\" onClick={()=>handleSelect()}>\n                    {/*<IntlMessages id=\"save\" />*/}\n                    save\n                </button>\n            </div>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/components/main/MainAppBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { AppBar, Button, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Route } from \"react-router\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport { breadcrumbNameMap } from \"../controls/BreadcrumbNameMap\";\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinkRouter = props => /*#__PURE__*/_jsxDEV(Link, { ...props,\n  component: RouterLink\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 31\n}, this);\n\n_c = LinkRouter;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // display: 'flex',\n    flexDirection: 'column'\n  },\n  appBar: {\n    // display: \"flex\",\n    flexDirection: 'row',\n    position: \"static\"\n  },\n  path: {\n    flexGrow: 1\n  }\n}));\nexport default function MainAppBar(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: ({\n        location\n      }) => {\n        const pathnames = location.pathname.split('/').filter(x => x);\n        return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          color: \"inherit\",\n          children: pathnames.map((value, index) => {\n            const last = index === pathnames.length - 1;\n            const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n            return last ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"inherit\",\n              children: breadcrumbNameMap[to]\n            }, to, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(LinkRouter, {\n              color: \"inherit\",\n              to: to,\n              children: breadcrumbNameMap[to]\n            }, to, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 38\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this) // <div className={classes.root}>\n  //     <AppBar className={classes.appBar} >\n  //         <Toolbar className={classes.path}>\n  //             <Route>\n  //                 {({ location }) => {\n  //                     const pathnames = location.pathname.split('/').filter((x) => x);\n  //\n  //                     return (\n  //                         <Breadcrumbs color=\"inherit\">\n  //                             {pathnames.map((value, index) => {\n  //                                 const last = index === pathnames.length - 1;\n  //                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n  //\n  //                                 return last ? (\n  //                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n  //                                         {breadcrumbNameMap[to]}\n  //                                     </Typography>\n  //                                 ) : (\n  //                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n  //                                         {breadcrumbNameMap[to]}\n  //                                     </LinkRouter>\n  //                                 );\n  //                             })}\n  //                         </Breadcrumbs>\n  //                     );\n  //                 }}\n  //             </Route>\n  //         </Toolbar>\n  //         <Button color=\"inherit\">Login</Button>\n  //     </AppBar>\n  // </div>\n  ;\n}\n\n_s(MainAppBar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = MainAppBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkRouter\");\n$RefreshReg$(_c2, \"MainAppBar\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/components/main/MainAppBar.js"],"names":["React","AppBar","Button","makeStyles","Toolbar","Typography","Link","RouterLink","Route","Breadcrumbs","breadcrumbNameMap","LinkRouter","props","useStyles","theme","root","flexDirection","appBar","position","path","flexGrow","MainAppBar","classes","location","pathnames","pathname","split","filter","x","map","value","index","last","length","to","slice","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,UAA7C,QAA8D,mBAA9D;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;AACA,OAAOD,IAAP,MAAiB,wBAAjB;AACA,SAAQE,KAAR,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAO,cAAP;;;AACA,MAAMC,UAAU,GAAIC,KAAD,iBAAW,QAAC,IAAD,OAAUA,KAAV;AAAiB,EAAA,SAAS,EAAEL;AAA5B;AAAA;AAAA;AAAA;AAAA,QAA9B;;KAAMI,U;AAEN,MAAME,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF;AACAC,IAAAA,aAAa,EAAC;AAFZ,GAD+B;AAKrCC,EAAAA,MAAM,EAAE;AACJ;AACAD,IAAAA,aAAa,EAAE,KAFX;AAGJE,IAAAA,QAAQ,EAAE;AAHN,GAL6B;AAUrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAV+B,CAAZ,CAAD,CAA5B;AAeA,eAAe,SAASC,UAAT,CAAoBT,KAApB,EAA2B;AAAA;;AACtC,QAAMU,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACK,QAAC,KAAD;AAAA,gBACK,CAAC;AAAEU,QAAAA;AAAF,OAAD,KAAkB;AACf,cAAMC,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,CAAqCC,CAAD,IAAOA,CAA3C,CAAlB;AAEA,4BACI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,SAAnB;AAAA,oBACKJ,SAAS,CAACK,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,kBAAMC,IAAI,GAAGD,KAAK,KAAKP,SAAS,CAACS,MAAV,GAAmB,CAA1C;AACA,kBAAMC,EAAE,GAAI,IAAGV,SAAS,CAACW,KAAV,CAAgB,CAAhB,EAAmBJ,KAAK,GAAG,CAA3B,EAA8BK,IAA9B,CAAmC,GAAnC,CAAwC,EAAvD;AAEA,mBAAOJ,IAAI,gBACP,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,KAAK,EAAC,SAA/B;AAAA,wBACKtB,iBAAiB,CAACwB,EAAD;AADtB,eAA8CA,EAA9C;AAAA;AAAA;AAAA;AAAA,oBADO,gBAKP,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,SAAlB;AAA4B,cAAA,EAAE,EAAEA,EAAhC;AAAA,wBACKxB,iBAAiB,CAACwB,EAAD;AADtB,eAAyCA,EAAzC;AAAA;AAAA;AAAA;AAAA,oBALJ;AASH,WAbA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH;AAtBL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ,CA4BI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DJ;AA6DH;;GAhEuBb,U;UACJR,S;;;MADIQ,U","sourcesContent":["import React from \"react\";\nimport {AppBar, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport {Route} from \"react-router\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport {breadcrumbNameMap} from \"../controls/BreadcrumbNameMap\";\nimport './style.scss'\nconst LinkRouter = (props) => <Link {...props} component={RouterLink}/>;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // display: 'flex',\n        flexDirection:'column',\n    },\n    appBar: {\n        // display: \"flex\",\n        flexDirection: 'row',\n        position: \"static\"\n    },\n    path: {\n        flexGrow: 1\n    },\n}))\n\nexport default function MainAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n             <Route>\n                 {({ location }) => {\n                     const pathnames = location.pathname.split('/').filter((x) => x);\n\n                     return (\n                         <Breadcrumbs color=\"inherit\">\n                             {pathnames.map((value, index) => {\n                                 const last = index === pathnames.length - 1;\n                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                                 return last ? (\n                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </Typography>\n                                 ) : (\n                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n                                         {breadcrumbNameMap[to]}\n                                     </LinkRouter>\n                                 );\n                             })}\n                         </Breadcrumbs>\n                     );\n                 }}\n             </Route>\n        </React.Fragment>\n\n        // <div className={classes.root}>\n        //     <AppBar className={classes.appBar} >\n        //         <Toolbar className={classes.path}>\n        //             <Route>\n        //                 {({ location }) => {\n        //                     const pathnames = location.pathname.split('/').filter((x) => x);\n        //\n        //                     return (\n        //                         <Breadcrumbs color=\"inherit\">\n        //                             {pathnames.map((value, index) => {\n        //                                 const last = index === pathnames.length - 1;\n        //                                 const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n        //\n        //                                 return last ? (\n        //                                     <Typography variant=\"h6\" color=\"inherit\" key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </Typography>\n        //                                 ) : (\n        //                                     <LinkRouter color=\"inherit\" to={to} key={to}>\n        //                                         {breadcrumbNameMap[to]}\n        //                                     </LinkRouter>\n        //                                 );\n        //                             })}\n        //                         </Breadcrumbs>\n        //                     );\n        //                 }}\n        //             </Route>\n        //         </Toolbar>\n        //         <Button color=\"inherit\">Login</Button>\n        //     </AppBar>\n        // </div>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}
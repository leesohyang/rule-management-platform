{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/DetailRel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"../Asset/AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\nimport { apiProvider } from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { revAd, revRe, revOp, clickedOp, currType, getGraphs } from \"../../services/Redux/actions\";\nimport GraphD from \"../../components/graph\";\nimport RelForm from \"../Asset/RelForm\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport { ForceGraph } from \"../../components/forceGraph\";\nimport data from \"../../components/forcegraph-data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {// marginLeft: theme.spacing(30),\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst DetailRel = props => {\n  _s();\n\n  const refresh2 = useSelector(state => state.fetchAPI.refre);\n  const add2 = useSelector(state => state.fetchAPI.ad);\n  const data2 = useSelector(state => state.fetchAPI.data);\n  const isOpen = useSelector(state => state.SlidePop.isOpen);\n  const clickedData = useSelector(state => state.SlidePop.clickedData);\n  const dataTmp = useSelector(state => state.fetchAPI.dataTmp);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    clickedTab: '',\n    title: 'Relation'\n  });\n  const classes = useStyles(); //relation table에 대한 crud\n\n  const addOrEdit = ob => {\n    // dispatch(revRe(false))\n    apiProvider.insertLink(ob).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const editOrDelete = id => {\n    apiProvider.del(\"link\", id).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const decorateGraphNodesWithInitialPositioning = nodes => {\n    return nodes.map(n => Object.assign({}, n, {\n      x: n.x || Math.floor(Math.random() * 500),\n      y: n.y || Math.floor(Math.random() * 500)\n    }));\n  };\n\n  const handleData = () => {\n    apiProvider.getAds2(clickedData.id).then(results => {\n      dispatch(getGraphs([...decorateGraphNodesWithInitialPositioning(results.nodes.map(i => ({\n        name: i.name,\n        id: i.id,\n        type: i.nodeType.toLowerCase()\n      })))], [...results.links.map(i => ({\n        id: i.id,\n        relation: \"Contain\",\n        source: i.fromNodeID,\n        target: i.toNodeID\n      }))]));\n    });\n  };\n\n  const expandData = nodeId => {\n    apiProvider.getAds2(nodeId).then(results => {\n      dispatch(getGraphs([...(dataTmp.nodes.length > 0 ? dataTmp.nodes.filter(item => !results.nodes.map(t => t.id).includes(item.id)) : []), ...results.nodes.map(i => ({\n        name: i.name,\n        id: i.id,\n        type: i.nodeType.toLowerCase()\n      }))], [...(dataTmp.links.length > 0 ? dataTmp.links.filter(item => !results.links.map(t => t.id).includes(item.id)) : []), ...results.links.map(i => ({\n        id: i.id,\n        relation: \"Contain\",\n        source: i.fromNodeID,\n        target: i.toNodeID\n      }))]));\n    });\n  };\n\n  const nodeHoverTooltip = React.useCallback(node => {\n    return `<div>${node.name}</div>`;\n  }, []);\n  useEffect(() => {\n    handleData(clickedData.i);\n    return () => {\n      dispatch(getGraphs([], []));\n    };\n  }, [refresh2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(ForceGraph, {\n        nodeHoverTooltip: nodeHoverTooltip,\n        handleData: handleData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(TabletoolbarRel, {\n        handleData: handleData,\n        title: \"Relations\",\n        adde: addOrEdit,\n        delete: editOrDelete,\n        children: /*#__PURE__*/_jsxDEV(RelForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailRel, \"5Uw76CdNcZGg/1cI1XheQMxrj1U=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useStyles];\n});\n\n_c = DetailRel;\nexport default _c2 = /*#__PURE__*/React.memo(DetailRel);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DetailRel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/DetailRel.js"],"names":["React","useState","useRef","useEffect","SlideTmp","AssetAddForm","TabletoolbarTmp","apiProvider","makeStyles","axios","useDispatch","useSelector","revAd","revRe","revOp","clickedOp","currType","getGraphs","GraphD","RelForm","TabletoolbarRel","ForceGraph","data","useStyles","theme","root","flexGrow","menuButton","title","DetailRel","props","refresh2","state","fetchAPI","refre","add2","ad","data2","isOpen","SlidePop","clickedData","dataTmp","dispatch","setState","clickedTab","classes","addOrEdit","ob","insertLink","then","editOrDelete","id","del","decorateGraphNodesWithInitialPositioning","nodes","map","n","Object","assign","x","Math","floor","random","y","handleData","getAds2","results","i","name","type","nodeType","toLowerCase","links","relation","source","fromNodeID","target","toNodeID","expandData","nodeId","length","filter","item","t","includes","nodeHoverTooltip","useCallback","node","memo"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"../Asset/AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\n\nimport {apiProvider} from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType, getGraphs} from \"../../services/Redux/actions\";\nimport GraphD from \"../../components/graph\";\nimport RelForm from \"../Asset/RelForm\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport {ForceGraph} from \"../../components/forceGraph\";\nimport data from \"../../components/forcegraph-data.json\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst DetailRel = (props) => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n    const dataTmp = useSelector(state=>state.fetchAPI.dataTmp)\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        clickedTab: '',\n        title: 'Relation'\n    });\n\n    const classes = useStyles();\n\n    //relation table에 대한 crud\n    const addOrEdit = (ob) => {\n        // dispatch(revRe(false))\n        apiProvider.insertLink(ob).then(()=>{dispatch(revRe(true))})\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"link\",id)\n            .then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const decorateGraphNodesWithInitialPositioning = nodes => {\n        return nodes.map(n =>\n            Object.assign({}, n, {\n                x: n.x || Math.floor(Math.random() * 500),\n                y: n.y || Math.floor(Math.random() * 500),\n            })\n        );\n    };\n\n\n    const handleData = () => {\n        apiProvider.getAds2(clickedData.id).then((results)=>{\n            dispatch(getGraphs(\n                [...(decorateGraphNodesWithInitialPositioning(results.nodes.map((i)=>({name:i.name, id:i.id, type:i.nodeType.toLowerCase()}))))],\n                [...(results.links.map((i)=>({id:i.id, relation: \"Contain\", source:i.fromNodeID, target:i.toNodeID})))])\n            );\n        })\n\n    }\n    const expandData = (nodeId) => {\n        apiProvider.getAds2(nodeId).then((results)=>{\n            dispatch(getGraphs(\n                [\n                    ...(dataTmp.nodes.length > 0 ? dataTmp.nodes.filter((item)=>!results.nodes.map((t)=>(t.id)).includes(item.id)): []),\n                    ...(results.nodes.map((i)=>({name:i.name, id:i.id, type:i.nodeType.toLowerCase()})))\n                ],\n                [\n                    ...(dataTmp.links.length > 0 ? dataTmp.links.filter((item)=>!results.links.map((t)=>(t.id)).includes(item.id)): []),\n                    ...(results.links.map((i)=>({id:i.id, relation:\"Contain\", source:i.fromNodeID, target:i.toNodeID})))\n                ])\n            )\n        })\n    }\n\n    const nodeHoverTooltip = React.useCallback((node) => {\n        return `<div>${node.name}</div>`;\n    }, []);\n\n    useEffect(()=>{\n        handleData(clickedData.i)\n        return () => {\n            dispatch(getGraphs([], []))\n        }\n    }, [refresh2])\n\n\n    return (\n        <div>\n            {/*<GraphD handleData={handleData} expandData={expandData}></GraphD>*/}\n            <section>\n                <ForceGraph nodeHoverTooltip={nodeHoverTooltip} handleData={handleData}/>\n            </section>\n            <section>\n                {/*<Col></Col>*/}\n                <TabletoolbarRel handleData={handleData} title={\"Relations\"} adde={addOrEdit} delete={editOrDelete}>\n                    <RelForm></RelForm>\n                </TabletoolbarRel>\n            </section>\n        </div>\n    );\n};\n\n\nexport default React.memo(DetailRel);"]},"metadata":{},"sourceType":"module"}
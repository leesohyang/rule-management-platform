{"ast":null,"code":"//유효값 검사(undefined, null, 공백값 체크)\nexport const isValid = value => typeof value !== 'undefined' && value !== null && value !== '';\n/**\n * 페이징, 정렬, 필터링 처리를 위한 params for axios\n * @param {*} react-table onFetchData호출 시 전달받는 state\n * @param {*} externalParams 추가적으로 요청할 데이터\n */\n\nexport const getPagingParams = ({\n  page,\n  pageSize,\n  sorted,\n  filtered\n}, externalParams) => {\n  const params = {\n    page,\n    size: pageSize,\n    ...externalParams\n  }; //sorting parameter\n\n  let sorts = [];\n\n  for (let i = 0, length = sorted.length; i < length; i++) {\n    const sort = sorted[i];\n    sorts.push(`${sort.id},${sort.desc ? 'desc' : 'asc'}`);\n  }\n\n  params['sort'] = sorts; //filtering parameter\n\n  for (let i = 0, length = filtered.length; i < length; i++) {\n    const filter = filtered[i];\n    params[filter.id] = filter.value;\n  }\n\n  return params;\n};\n/** IP유효성 검사 */\n\nexport const isIp = ip => /^(?=.*[^.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.?){4}$/.test(ip);\n/** Port유효성 검사 */\n\nexport const isPort = port => {\n  if (isNaN(port)) {\n    return false;\n  }\n\n  const toInt = Number.parseInt(port, 10);\n\n  if (0 <= toInt && toInt <= 65535) {\n    return true;\n  } else {\n    return false;\n  }\n};\n/** 리눅스경로유효성 검사 */\n\nexport const isLinuxPath = path => /^(\\/[^\\\\/:*?\"<>| ]*)+\\/?$/.test(path);\nexport const objectDeepCopy = obj => {\n  let clone = Object.entries(obj).reduce((acc, [key, val]) => {\n    if (typeof val === \"object\" && val !== null) {\n      acc[key] = objectDeepCopy(val);\n    } else {\n      acc[key] = val;\n    }\n\n    return acc;\n  }, {});\n  return clone;\n};\n/**\n * @param {Date} date ex: new Date()\n */\n\nexport const makeDateString = date => {\n  const d = new Date(date);\n  const dateArr = [d.getFullYear(), d.getMonth() + 1, d.getDate()].map(n => {\n    return (\"\" + n).length === 1 ? \"0\" + n : n;\n  });\n  return dateArr.join(\"-\");\n};\n/**\n * @param {Date} date ex: new Date()\n */\n\nexport const makeDateTimeString = date => {\n  const d = new Date(date);\n  const dateArr = [d.getFullYear(), d.getMonth() + 1, d.getDate()].map(n => {\n    return (\"\" + n).length === 1 ? \"0\" + n : n;\n  });\n  const timeArr = [d.getHours(), d.getMinutes(), d.getSeconds()].map(n => {\n    return (\"\" + n).length === 1 ? \"0\" + n : n;\n  });\n  return `${dateArr.join(\"-\")} ${timeArr.join(\":\")}`;\n};\nexport const convertHex2Str = hex => {\n  try {\n    if (hex.length % 4 !== 0) return \"Error\";\n    return hex.split(/(.{4})/g).filter(_ => _).map(str => String.fromCharCode(parseInt(str))).join(\"\");\n  } catch {\n    return \"Error\";\n  }\n};","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/components/util/utils.js"],"names":["isValid","value","getPagingParams","page","pageSize","sorted","filtered","externalParams","params","size","sorts","i","length","sort","push","id","desc","filter","isIp","ip","test","isPort","port","isNaN","toInt","Number","parseInt","isLinuxPath","path","objectDeepCopy","obj","clone","Object","entries","reduce","acc","key","val","makeDateString","date","d","Date","dateArr","getFullYear","getMonth","getDate","map","n","join","makeDateTimeString","timeArr","getHours","getMinutes","getSeconds","convertHex2Str","hex","split","_","str","String","fromCharCode"],"mappings":"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","sourcesContent":["//유효값 검사(undefined, null, 공백값 체크)\nexport const isValid = value =>\n  typeof value !== 'undefined' && value !== null && value !== '';\n\n/**\n * 페이징, 정렬, 필터링 처리를 위한 params for axios\n * @param {*} react-table onFetchData호출 시 전달받는 state\n * @param {*} externalParams 추가적으로 요청할 데이터\n */\nexport const getPagingParams = (\n  { page, pageSize, sorted, filtered },\n  externalParams,\n) => {\n  const params = {\n    page,\n    size: pageSize,\n    ...externalParams,\n  };\n\n  //sorting parameter\n  let sorts = [];\n  for (let i = 0, length = sorted.length; i < length; i++) {\n    const sort = sorted[i];\n    sorts.push(`${sort.id},${sort.desc ? 'desc' : 'asc'}`);\n  }\n  params['sort'] = sorts;\n\n  //filtering parameter\n  for (let i = 0, length = filtered.length; i < length; i++) {\n    const filter = filtered[i];\n    params[filter.id] = filter.value;\n  }\n\n  return params;\n};\n\n/** IP유효성 검사 */\nexport const isIp = ip =>\n  /^(?=.*[^.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.?){4}$/.test(ip);\n/** Port유효성 검사 */\nexport const isPort = port => {\n  if (isNaN(port)) {\n    return false;\n  }\n  const toInt = Number.parseInt(port, 10);\n  if (0 <= toInt && toInt <= 65535) {\n    return true;\n  } else {\n    return false;\n  }\n};\n/** 리눅스경로유효성 검사 */\nexport const isLinuxPath = path => /^(\\/[^\\\\/:*?\"<>| ]*)+\\/?$/.test(path);\n\nexport const objectDeepCopy = (obj) => {\n  let clone = Object.entries(obj).reduce((acc, [key, val]) => {\n    if(typeof(val) === \"object\" && val !== null) {\n      acc[key] = objectDeepCopy(val);\n    }\n    else {\n      acc[key] = val;\n    }\n    return acc;\n  }, {});\n  return clone;\n}\n\n/**\n * @param {Date} date ex: new Date()\n */\nexport const makeDateString = (date) => {\n  const d = new Date(date);\n  const dateArr = [d.getFullYear(), d.getMonth() + 1, d.getDate()].map(n => {\n    return (\"\" + n).length === 1? \"0\" + n : n;\n  });\n  return dateArr.join(\"-\");\n}\n\n/**\n * @param {Date} date ex: new Date()\n */\nexport const makeDateTimeString = (date) => {\n  const d = new Date(date);\n  const dateArr = [d.getFullYear(), d.getMonth() + 1, d.getDate()].map(n => {\n    return (\"\" + n).length === 1? \"0\" + n : n;\n  });\n  const timeArr = [d.getHours(), d.getMinutes(), d.getSeconds()].map(n => {\n    return (\"\" + n).length === 1? \"0\" + n : n;\n  });\n  return `${dateArr.join(\"-\")} ${timeArr.join(\":\")}`;\n}\n\nexport const convertHex2Str = hex => {\n  try {\n    if(hex.length % 4 !== 0) return \"Error\";\n    return hex.split(/(.{4})/g)\n              .filter(_=>_)\n              .map(str => String.fromCharCode(parseInt(str)))\n              .join(\"\");\n  }\n  catch {\n    return \"Error\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
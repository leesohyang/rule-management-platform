{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js\";\nimport React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\n\nimport { Field } from \"redux-form\"; // import Table from \"react-table\";\n\nimport Table from \"react-table\";\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport { avatarColumnProps } from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport { useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport { addedField, currEd, deleteTmp, getAllR, hisFlag, keyFieldSelect, openSelectKeyFieldPop, restoreHead, restoreVersion, saveVersion, selectHead, startHis } from \"../../services/Redux/actions\";\nimport { bindActionCreators } from 'redux';\nimport { addTmp, revRe, openPop } from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport { apiProvider } from \"../../services/Provider\";\nimport \"./style.scss\";\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GridTableLDR extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: null,\n      selected: {},\n      selectAll: 0,\n      adding: false,\n      columns: [],\n      selectEdit: false\n    };\n    this.selectList = {\n      typeList: [\"String\", \"Numeric\", \"IP\"],\n      groupList: [\"Required\", \"Additional\"]\n    };\n\n    this.getSelect = (type, curr) => {\n      const v = this.selectList[type].filter(i => i !== curr);\n      return v;\n    };\n\n    this.resetColumn = () => {\n      this.setState(state => {\n        return { ...state,\n          columns: [{\n            columns: [{\n              id: \"checkbox\",\n              accessor: \"\",\n              Cell: ({\n                original\n              }) => {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  checked: this.state.selected[original.id] === true,\n                  onChange: () => this.toggleRow(original.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this);\n              },\n              Header: x => {\n                return /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"checkbox\",\n                  checked: this.state.selectAll === 1,\n                  ref: input => {\n                    if (input) {\n                      input.indeterminate = this.state.selectAll === 2;\n                    }\n                  },\n                  onChange: () => this.toggleSelectAll()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this);\n              },\n              sortable: false,\n              width: 45\n            }]\n          }].concat(this.props.columns.slice().map(item => {\n            return { ...item,\n              ...this.editableColumnProps\n            };\n          })).concat({\n            Header: \"\",\n            maxWidth: 90,\n            filterable: false,\n            getProps: this.getActionProps,\n            Cell: ActionsCell\n          })\n        };\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      const ver = prevProps.version !== this.props.version;\n      const resHead = prevProps.headRestore !== this.props.headRestore;\n      const cond = prevProps.refre !== this.props.refre; //addtmp 바꾸ㅕㅅ을때\n\n      const nField = prevProps.newField !== this.props.newField;\n      const col = prevProps.header !== this.props.header;\n      const his = prevProps.his !== this.props.his;\n\n      if (this.props.his && his) {\n        const history = {\n          id: \"1\",\n          desc: \"temp\",\n          user: \"admin\",\n          released: \"false\",\n          value: {\n            field: this.props.data\n          } //props 수정이 덜 되어서..\n\n        };\n        apiProvider.insert('history/livedetectrule', history).then(() => {\n          this.props.hisFlag(true);\n          this.props.startHis(false);\n        });\n      }\n\n      if (col) {\n        this.resetColumn();\n      }\n\n      if (cond) {\n        // this.props.handleHead()\n        this.resetColumn();\n        this.props.handleData(); //이거 없어도 될거같은데\n      }\n\n      if (resHead && this.props.headRestore) {\n        //restore 버튼\n        console.log(this.props.data[0].ver);\n        this.props.restoreVer(this.props.data[0].ver);\n        this.props.handleHeadVer(this.props.data[0].ver);\n        this.props.resHead(false);\n      }\n\n      if (nField) {\n        const nCol = this.state.columns;\n        nCol.splice(-1, 0, {\n          Header: this.props.newField,\n          accessor: this.props.newField,\n          ...this.editableColumnProps\n        });\n        this.setState(state => {\n          return { ...state,\n            columns: nCol\n          };\n        });\n      }\n\n      if (ver) {\n        console.log(\"hi?\");\n        this.handleSaveNewVer();\n      }\n    };\n\n    this.selectableComponent = ({\n      input,\n      editing,\n      value,\n      ...rest\n    }) => {\n      const result = Object.keys(rest).reduce((prev, current) => ({ ...prev,\n        [current.toLowerCase()]: rest[current]\n      }), {});\n      const Component = editing ? 'select' : 'p';\n\n      const children = //여기 value 에 직접 넣을 수 있으면 좋을텐데.\n      !editing && /*#__PURE__*/_jsxDEV(HighlightCell, {\n        value: value,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 26\n      }, this) || /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), this.getSelect(\"typeList\", value).map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 72\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...input,\n        ...result,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.editableComponent = ({\n      input,\n      editing,\n      value,\n      ...rest\n    }) => {\n      const result = Object.keys(rest).reduce((prev, current) => ({ ...prev,\n        [current.toLowerCase()]: rest[current]\n      }), {}); //input안에 name있음 이거 가지고 action넣으면 되지 않을까\n\n      const Component = editing ? 'input' : 'p';\n      const children = !editing && /*#__PURE__*/_jsxDEV(HighlightCell, {\n        value: value,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 26\n      }, this) || undefined;\n      return /*#__PURE__*/_jsxDEV(Component, { ...input,\n        ...result,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.isSelectField = col => [\"type\", \"group\"].indexOf(col) !== -1;\n\n    this.editableColumnProps = { ...GridFilters,\n      Cell: props => {\n        const editing = this.state.editing === props.original;\n        const fieldProps = {\n          component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n          editing,\n          props\n        };\n        return /*#__PURE__*/_jsxDEV(Field, {\n          name: props.column.id,\n          ...fieldProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.handleCellClick = data => {// this.props.handleRow(data)\n    };\n\n    this.getActionProps = (gridState, rowProps) => rowProps && {\n      mode: this.state.editing === rowProps.original ? this.state.adding ? \"add\" : \"edit\" : \"view\",\n      actions: {\n        onEdit: () => {\n          !this.state.adding && this.setState({\n            editing: rowProps.original,\n            adding: false\n          });\n        },\n        onCancel: () => {\n          this.setState({\n            editing: null,\n            adding: false\n          });\n          this.state.adding && this.props.delTmp(this.props.data.length);\n        }\n      }\n    } || {};\n\n    this.handleSubmit = values => {\n      console.log(\"why not cancel?\"); //TODO::cancel이 일로가는구나 버튼이 작아서 잘리네 잘 눌러야함..\n\n      this.setState(state => {\n        this.props.addTmp(this.props.data.map(item => {\n          return item.id === values.id ? values : item;\n        }));\n        return state.adding ? { ...state,\n          adding: false\n        } : { ...state\n        };\n      });\n    };\n\n    this.handleConFieldSelect = ob => {\n      this.props.setKfOb(ob); //TODO:: state 분리하기 -> setCfOb 로 해야겠지\n\n      this.props.openConSelectPopup();\n    };\n\n    this.handleKeyFieldSelect = ob => {\n      console.log(ob);\n      this.props.setKfOb(ob);\n      this.props.openKeySelectPopup();\n    };\n\n    this.handleFieldAdd = () => {\n      this.props.openSelectPopup();\n    };\n\n    this.handleGridData = () => {\n      apiProvider.delAll('rules').then(this.props.data.forEach(item => {\n        this.props.addf(item);\n      })) // .then(this.props.revRe(true))\n      .then(console.log(this.props.data)) //여기가 존나 잘못됐다\n      .then(this.props.startHis(true));\n      console.log(this.props.data);\n    };\n\n    this.handleSaveNewVer = () => {\n      console.log(this.props.version);\n      const temp = this.state.columns.slice();\n      temp.splice(0, 1);\n      temp.splice(-1, 1);\n      console.log(temp.map(({\n        Header\n      }) => Header));\n      const header = {\n        ver: this.props.version,\n        type: \"live\",\n        header: temp.map(({\n          Header\n        }) => Header)\n      }; // apiProvider.insertHead(header).then()\n\n      apiProvider.deActiveHead().then(() => apiProvider.insertHead(header).then(() => this.handleGridData())); // this.props.insertHead(header)\n      // this.handleGridData()\n    };\n\n    this.handleSaveSameVer = version => {\n      this.props.activeHead(version);\n      apiProvider.activeHead(version).then(() => this.handleGridData()); // this.handleGridData()\n    };\n\n    this.handleSave = () => {\n      // const temp = this.state.columns\n      // temp.splice(0, 1)\n      // temp.splice(-1, 1)\n      //밑에 조건 둘 중 무조건 하나만 실행됨. 그래야함..\n      if (this.props.columns.length != this.state.columns.length - 2) this.props.openSave();else if (this.props.versionTmp !== \"\") this.handleSaveSameVer(this.props.versionTmp);else this.handleGridData();\n    };\n\n    this.handleDelete = () => {\n      console.log(Object.keys(this.state.selected));\n      Object.keys(this.state.selected).forEach(i => this.props.delTmp(i));\n      this.setState(state => {\n        return { ...state,\n          selected: {}\n        };\n      });\n    };\n\n    this.handleAdd = () => {\n      const addTemp = this.state.columns.slice();\n      addTemp.splice(-1, 1);\n      addTemp.splice(0, 1);\n      const tp = {};\n      addTemp.forEach(({\n        accessor\n      }) => {\n        tp[accessor] = \"\";\n      });\n      tp.id = this.props.data.length + 1;\n      console.log(this.props.data.length);\n      this.setState(state => {\n        return { ...state,\n          editing: tp,\n          adding: true\n        };\n      });\n      console.log(tp);\n      this.props.addTmp([tp, ...this.props.data]);\n    };\n\n    this.handleClickPopUp = (columnId, data) => {\n      switch (columnId) {\n        case \"keyField\":\n          return this.handleKeyFieldSelect(data);\n\n        case \"confirms\":\n          return this.handleConFieldSelect(data);\n\n        default:\n          return;\n      }\n    };\n  }\n\n  componentDidMount() {\n    //for test\n    this.resetColumn();\n    this.props.handleData();\n  }\n\n  toggleRow(id) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[id] = !this.state.selected[id];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n    console.log(this.state.selected);\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n    console.log(this.state.selected);\n\n    if (this.state.selectAll === 0) {\n      this.props.data.forEach(x => {\n        newSelected[x.id] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => this.props.revRe(true),\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seperate-bar-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            this.handleFieldAdd();\n          },\n          children: \"Field Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => this.props.openPop(true),\n          children: \"\\uBC30\\uD3EC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Fixed\",\n          children: /*#__PURE__*/_jsxDEV(FormProvider, {\n            form: \"inline\",\n            onSubmit: this.handleSubmit,\n            onSubmitSuccess: () => this.setState({\n              editing: null\n            }),\n            initialValues: this.state.editing,\n            enableReinitialize: true,\n            children: formProps => {\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formProps.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  getTdProps: (state, rowInfo, column) => ({\n                    onClick: () => rowInfo !== undefined && this.state.editing ? this.handleClickPopUp(column.id, rowInfo.original) : undefined\n                  }),\n                  columns: this.state.columns,\n                  data: this.props.data // PaginationComponent={Pagination}\n                  ,\n                  pageSizeOptions: [5, 10, 500, 1000],\n                  defaultPageSize: 10,\n                  sorted: [{\n                    id: 'id'\n                  }] // defaultPageSize={10}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 41\n                }, this), this.props.selectKPop && /*#__PURE__*/_jsxDEV(SelectKeyFieldPopup, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 67\n                }, this), this.props.selectCPop && /*#__PURE__*/_jsxDEV(SelectConfirmsPopup, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 37\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  version: state.fetchAPI.headVersion,\n  versionTmp: state.fetchAPI.headVersionTmp,\n  selectKPop: state.fetchAPI.openKeyField,\n  selectCPop: state.fetchAPI.openConField,\n  kfOb: state.fetchAPI.keyField,\n  data: state.fetchAPI.data,\n  refre: state.fetchAPI.refre,\n  add: state.fetchAPI.ad,\n  hflag: state.fetchAPI.hflag,\n  newField: state.fetchAPI.addedField,\n  header: state.fetchAPI.header,\n  headRestore: state.fetchAPI.headRestore,\n  his: state.fetchAPI.startHistory\n}), dispatch => {\n  return bindActionCreators({\n    setKfOb: keyFieldSelect,\n    addTmp: addTmp,\n    revRe: revRe,\n    openPop: openPop,\n    delTmp: deleteTmp,\n    currEd: currEd,\n    hisFlag: hisFlag,\n    addedField: addedField,\n    setHead: selectHead,\n    resHead: restoreHead,\n    saveVer: saveVersion,\n    restoreVer: restoreVersion,\n    startHis: startHis\n  }, dispatch);\n})(GridTableLDR);","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/fronted_react_final/src/components/table/gridTableLDR.js"],"names":["React","set","Field","Table","BS","initialData","FormProvider","avatarColumnProps","ActionsCell","HighlightCell","GridFilters","useSelector","connect","fetchAPI","addedField","currEd","deleteTmp","getAllR","hisFlag","keyFieldSelect","openSelectKeyFieldPop","restoreHead","restoreVersion","saveVersion","selectHead","startHis","bindActionCreators","addTmp","revRe","openPop","Pagination","apiProvider","SelectKeyFieldPopup","SelectConfirmsPopup","GridTableLDR","Component","state","editing","selected","selectAll","adding","columns","selectEdit","selectList","typeList","groupList","getSelect","type","curr","v","filter","i","resetColumn","setState","id","accessor","Cell","original","toggleRow","Header","x","input","indeterminate","toggleSelectAll","sortable","width","concat","props","slice","map","item","editableColumnProps","maxWidth","filterable","getProps","getActionProps","componentDidUpdate","prevProps","ver","version","resHead","headRestore","cond","refre","nField","newField","col","header","his","history","desc","user","released","value","field","data","insert","then","handleData","console","log","restoreVer","handleHeadVer","nCol","splice","handleSaveNewVer","selectableComponent","rest","result","Object","keys","reduce","prev","current","toLowerCase","children","index","editableComponent","undefined","isSelectField","indexOf","fieldProps","component","column","handleCellClick","gridState","rowProps","mode","actions","onEdit","onCancel","delTmp","length","handleSubmit","values","handleConFieldSelect","ob","setKfOb","openConSelectPopup","handleKeyFieldSelect","openKeySelectPopup","handleFieldAdd","openSelectPopup","handleGridData","delAll","forEach","addf","temp","deActiveHead","insertHead","handleSaveSameVer","activeHead","handleSave","openSave","versionTmp","handleDelete","handleAdd","addTemp","tp","handleClickPopUp","columnId","componentDidMount","newSelected","assign","render","formProps","rowInfo","onClick","selectKPop","selectCPop","headVersion","headVersionTmp","openKeyField","openConField","kfOb","keyField","add","ad","hflag","startHistory","dispatch","setHead","saveVer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport set from \"lodash/fp/set\"; //얘는 지우고\nimport {Field} from \"redux-form\";\n// import Table from \"react-table\";\nimport Table from \"react-table\"\nimport * as BS from \"react-bootstrap\";\nimport initialData from \"./dataFactory\";\nimport FormProvider from \"./FormProvider\";\nimport {avatarColumnProps} from \"./AvatarCell\";\nimport ActionsCell from \"./ActionsCell\";\nimport HighlightCell from \"./HighlightCell\";\nimport GridFilters from \"./GridFilters\";\nimport {useSelector} from \"react-redux\";\nimport {connect} from \"react-redux\"\nimport fetchAPI from \"../../services/Redux/reducers/fetchAPI\";\nimport {\n    addedField,\n    currEd,\n    deleteTmp,\n    getAllR,\n    hisFlag,\n    keyFieldSelect,\n    openSelectKeyFieldPop, restoreHead, restoreVersion, saveVersion, selectHead, startHis\n} from \"../../services/Redux/actions\";\nimport {bindActionCreators} from 'redux';\nimport {addTmp, revRe, openPop} from \"../../services/Redux/actions\";\nimport Pagination from \"./Pagination\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport SelectKeyFieldPopup from \"../popup/SelectKeyFieldPopup\";\nimport SelectConfirmsPopup from \"../popup/SelectConfirmsPopup\";\n\n\n\nclass GridTableLDR extends React.Component {\n    state = {editing: null, selected: {}, selectAll: 0, adding: false, columns: [], selectEdit: false};\n\n    selectList = {\n        typeList: [\"String\", \"Numeric\", \"IP\"],\n        groupList: [\"Required\", \"Additional\"]\n    }\n\n    getSelect = (type, curr) => {\n        const v = this.selectList[type].filter(i => i !== curr)\n        return v\n    }\n\n    resetColumn = () => {\n        this.setState((state) => {\n            return {\n                ...state, columns:\n                    [{\n                        columns: [\n                            {\n                                id: \"checkbox\",\n                                accessor: \"\",\n                                Cell: ({original}) => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selected[original.id] === true}\n                                            onChange={() => this.toggleRow(original.id)}\n                                        />\n                                    );\n                                },\n                                Header: x => {\n                                    return (\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"checkbox\"\n                                            checked={this.state.selectAll === 1}\n                                            ref={input => {\n                                                if (input) {\n                                                    input.indeterminate = this.state.selectAll === 2;\n                                                }\n                                            }}\n                                            onChange={() => this.toggleSelectAll()}\n                                        />\n                                    );\n                                },\n                                sortable: false,\n                                width: 45\n                            },\n                        ]\n                    }].concat(\n                        this.props.columns.slice().map((item) => {\n                            return {...item, ...this.editableColumnProps}\n                        })\n                    )\n                        .concat(\n                            {\n                                Header: \"\",\n                                maxWidth: 90,\n                                filterable: false,\n                                getProps: this.getActionProps,\n                                Cell: ActionsCell\n                            }\n                        )\n            }\n        })\n    }\n\n    componentDidMount() {\n//for test\n        this.resetColumn()\n        this.props.handleData()\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const ver = (prevProps.version !== this.props.version)\n        const resHead = (prevProps.headRestore !== this.props.headRestore)\n        const cond = (prevProps.refre !== this.props.refre) //addtmp 바꾸ㅕㅅ을때\n        const nField = (prevProps.newField !== this.props.newField)\n        const col = (prevProps.header !== this.props.header)\n        const his = (prevProps.his !== this.props.his)\n        if(this.props.his && his){\n            const history = {\n                id: \"1\",\n                desc: \"temp\",\n                user: \"admin\",\n                released: \"false\",\n                value: {field: this.props.data} //props 수정이 덜 되어서..\n            }\n            apiProvider.insert('history/livedetectrule', history).then(() => {\n                this.props.hisFlag(true)\n                this.props.startHis(false)\n            })\n        }\n        if(col){\n            this.resetColumn()\n        }\n        if(cond) {\n            // this.props.handleHead()\n            this.resetColumn()\n            this.props.handleData() //이거 없어도 될거같은데\n        }\n        if (resHead && this.props.headRestore) { //restore 버튼\n            console.log(this.props.data[0].ver)\n            this.props.restoreVer(this.props.data[0].ver)\n            this.props.handleHeadVer(this.props.data[0].ver)\n            this.props.resHead(false)\n        }\n        if (nField) {\n            const nCol = this.state.columns\n            nCol.splice(-1, 0, {\n                Header: this.props.newField,\n                accessor: this.props.newField, ...this.editableColumnProps\n            })\n            this.setState((state) => {\n                return {\n                    ...state, columns: nCol\n                }\n            })\n        }\n        if(ver){\n            console.log(\"hi?\")\n            this.handleSaveNewVer()\n        }\n    }\n\n\n\n    selectableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        const Component = editing ? 'select' : 'p';\n        const children = //여기 value 에 직접 넣을 수 있으면 좋을텐데.\n            (!editing && <HighlightCell value={value} {...rest} />) || <React.Fragment>\n                <option>{value}</option>\n                {this.getSelect(\"typeList\", value).map(\n                    (item, index) => (\n                        <option key={index} value={item}>{item}</option>\n                    )\n                )}\n            </React.Fragment>;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n\n    editableComponent = ({input, editing, value, ...rest}) => {\n\n        const result = Object.keys(rest).reduce((prev, current) =>\n            ({...prev, [current.toLowerCase()]: rest[current]}), {})\n        //input안에 name있음 이거 가지고 action넣으면 되지 않을까\n        const Component = editing ? 'input' : 'p';\n        const children =\n            (!editing && <HighlightCell value={value} {...rest} />) || undefined;\n        return <Component {...input} {...result} children={children}/>;\n    };\n\n    isSelectField = (col) => [\"type\", \"group\"].indexOf(col) !== -1\n\n    editableColumnProps = {\n        ...GridFilters,\n        Cell: (props) => {\n            const editing = this.state.editing === props.original;\n            const fieldProps = {\n                component: this.isSelectField(props.column.id) ? this.selectableComponent : this.editableComponent,\n                editing,\n                props\n            };\n            return <Field name={props.column.id} {...fieldProps} />;\n\n        }\n    };\n\n    handleCellClick = (data) => {\n        // this.props.handleRow(data)\n    }\n\n    getActionProps = (gridState, rowProps) =>\n        (rowProps && {\n            mode: this.state.editing === rowProps.original ? (this.state.adding ? \"add\" : \"edit\") : \"view\",\n\n            actions: {\n                onEdit: () => {\n                    !this.state.adding && this.setState({editing: rowProps.original, adding: false})\n                },\n                onCancel: () => {\n                    this.setState({editing: null, adding: false});\n                    this.state.adding && this.props.delTmp(this.props.data.length)\n                }\n            }\n        }) ||\n        {};\n\n    toggleRow(id) {\n        const newSelected = Object.assign({}, this.state.selected);\n        newSelected[id] = !this.state.selected[id];\n        this.setState({\n            selected: newSelected,\n            selectAll: 2\n        });\n        console.log(this.state.selected)\n    }\n\n    toggleSelectAll() {\n        let newSelected = {};\n        console.log(this.state.selected)\n        if (this.state.selectAll === 0) {\n            this.props.data.forEach(x => {\n                newSelected[x.id] = true;\n            });\n        }\n\n        this.setState({\n            selected: newSelected,\n            selectAll: this.state.selectAll === 0 ? 1 : 0\n        });\n    }\n\n    handleSubmit = (values) => {\n        console.log(\"why not cancel?\") //TODO::cancel이 일로가는구나 버튼이 작아서 잘리네 잘 눌러야함..\n        this.setState((state) => {\n            this.props.addTmp(this.props.data.map((item) => {\n                return item.id === values.id ? values : item\n            }))\n\n            return state.adding ? {...state, adding: false} : {...state}\n\n        });\n    };\n\n    handleConFieldSelect=(ob)=>{\n        this.props.setKfOb(ob) //TODO:: state 분리하기 -> setCfOb 로 해야겠지\n        this.props.openConSelectPopup()\n    }\n    handleKeyFieldSelect =(ob) => {\n        console.log(ob)\n        this.props.setKfOb(ob)\n        this.props.openKeySelectPopup()\n    }\n\n    handleFieldAdd = () => {\n        this.props.openSelectPopup()\n    }\n\n    handleGridData = () => {\n        apiProvider.delAll('rules').then(\n            this.props.data.forEach((item) => {\n                this.props.addf(item)\n            })\n        )\n            // .then(this.props.revRe(true))\n            .then(console.log(this.props.data)) //여기가 존나 잘못됐다\n            .then(this.props.startHis(true))\n\n        console.log(this.props.data)\n    }\n\n    handleSaveNewVer = () => {\n        console.log(this.props.version)\n        const temp = this.state.columns.slice()\n        temp.splice(0, 1)\n        temp.splice(-1, 1)\n        console.log(temp.map(({Header})=>Header))\n        const header = {\n            ver: this.props.version,\n            type: \"live\",\n            header: temp.map(({Header})=>Header)\n        }\n        // apiProvider.insertHead(header).then()\n        apiProvider.deActiveHead().then(\n            ()=>apiProvider.insertHead(header).then(()=>this.handleGridData())\n        )\n        // this.props.insertHead(header)\n        // this.handleGridData()\n    }\n\n    handleSaveSameVer = (version) => {\n        this.props.activeHead(version)\n        apiProvider.activeHead(version).then(\n            ()=>this.handleGridData()\n        )\n        // this.handleGridData()\n    }\n    //체크해야 되는게 291라인과 298라인 아닌가?\n    handleSave = () => {\n        // const temp = this.state.columns\n        // temp.splice(0, 1)\n        // temp.splice(-1, 1)\n        //밑에 조건 둘 중 무조건 하나만 실행됨. 그래야함..\n        if (this.props.columns.length != this.state.columns.length -2 ) this.props.openSave()\n        else if(this.props.versionTmp !== \"\") this.handleSaveSameVer(this.props.versionTmp)\n        else this.handleGridData()\n\n    }\n\n    handleDelete = () => {\n        console.log(Object.keys(this.state.selected))\n        Object.keys(this.state.selected).forEach((i) =>\n            this.props.delTmp(i)\n        )\n        this.setState((state) => {\n            return {...state, selected: {}}\n        })\n\n    }\n\n    //TODO::add 여러번 하게하면 안됨. + 자동으로 index 생성되게 해야되는데 + livedetectrule add row가 이상한곳에 생김. 왠진 모르겠는데 해결됨.\n    handleAdd = () => {\n        const addTemp = this.state.columns.slice()\n        addTemp.splice(-1, 1)\n        addTemp.splice(0, 1)\n        const tp = {};\n        addTemp.forEach(({accessor}) => {\n            tp[accessor] = \"\"\n        })\n        tp.id = this.props.data.length + 1\n        console.log(this.props.data.length)\n        this.setState((state) => {\n            return {...state, editing: tp, adding: true}\n        })\n        console.log(tp)\n        this.props.addTmp([tp, ...this.props.data])\n    }\n\n\n    handleClickPopUp = (columnId, data) => {\n        switch (columnId) {\n            case \"keyField\" :\n                return this.handleKeyFieldSelect(data)\n            case \"confirms\" :\n                return this.handleConFieldSelect(data)\n            default:\n                return\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"btns\">\n                    <button className=\"btn\" onClick={this.handleAdd}>\n                        Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleDelete}>\n                        Delete\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.revRe(true)}>\n                        Refresh\n                    </button>\n\n                    <div className=\"seperate-bar-100\"/>\n\n                    <button className=\"btn\" onClick={() => {\n                        this.handleFieldAdd()\n                    }}>\n                        Field Add\n                    </button>\n                    <button className=\"btn\" onClick={this.handleSave}>\n                        Save\n                    </button>\n                    <button className=\"btn\" onClick={() => this.props.openPop(true)}>\n                        배포\n                    </button>\n                </div>\n                <div className=\"table-wrapper\">\n                    {/*<div className=\"table-total-count\" style={{ fontSize: '12px' }}>*/}\n                    {/*  Total:*/}\n                    {/*</div>*/}\n                    <div className=\"Fixed\">\n\n                        <FormProvider\n                            form=\"inline\"\n                            onSubmit={this.handleSubmit}\n                            onSubmitSuccess={() => this.setState({editing: null})}\n                            initialValues={this.state.editing}\n                            enableReinitialize\n                        >\n                            {(formProps) => {\n                                return (\n                                    <form onSubmit={formProps.handleSubmit}>\n                                        <Table\n                                            getTdProps={(state, rowInfo, column) => ({\n                                                onClick: () => (rowInfo !== undefined && this.state.editing) ? this.handleClickPopUp(column.id, rowInfo.original) : undefined\n                                            })}\n                                            columns={\n                                                this.state.columns\n                                            }\n                                            data={this.props.data}\n                                            // PaginationComponent={Pagination}\n                                            pageSizeOptions={[5, 10, 500, 1000]}\n                                            defaultPageSize={10}\n                                            sorted={[{id: 'id'}]}\n\n                                            // defaultPageSize={10}\n                                        />\n                                        {this.props.selectKPop && <SelectKeyFieldPopup></SelectKeyFieldPopup>}\n                                        {this.props.selectCPop && <SelectConfirmsPopup></SelectConfirmsPopup>}\n                                    </form>\n                                );\n                            }}\n                        </FormProvider>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        version: state.fetchAPI.headVersion,\n        versionTmp: state.fetchAPI.headVersionTmp,\n        selectKPop: state.fetchAPI.openKeyField,\n        selectCPop: state.fetchAPI.openConField,\n        kfOb: state.fetchAPI.keyField,\n        data: state.fetchAPI.data,\n        refre: state.fetchAPI.refre,\n        add: state.fetchAPI.ad,\n        hflag: state.fetchAPI.hflag,\n        newField: state.fetchAPI.addedField,\n        header: state.fetchAPI.header,\n        headRestore: state.fetchAPI.headRestore,\n        his: state.fetchAPI.startHistory\n    }),\n    dispatch => {\n        return bindActionCreators(\n            {\n                setKfOb: keyFieldSelect,\n                addTmp: addTmp,\n                revRe: revRe,\n                openPop: openPop,\n                delTmp: deleteTmp,\n                currEd: currEd,\n                hisFlag: hisFlag,\n                addedField: addedField,\n                setHead: selectHead,\n                resHead: restoreHead,\n                saveVer: saveVersion,\n                restoreVer: restoreVersion,\n                startHis: startHis\n            },\n            dispatch\n        )\n    }\n)(GridTableLDR)"]},"metadata":{},"sourceType":"module"}
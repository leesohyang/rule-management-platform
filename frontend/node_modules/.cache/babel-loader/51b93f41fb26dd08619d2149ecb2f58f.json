{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/Relation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport { apiProvider } from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { revAd, revRe, revOp, clickedOp, currType } from \"../../services/Redux/actions\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport RelForm from \"../Asset/RelForm\";\nimport RelFormP from \"./RelsForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {// marginLeft: theme.spacing(30),\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst Relation = () => {\n  _s();\n\n  const refresh2 = useSelector(state => state.fetchAPI.refre);\n  const add2 = useSelector(state => state.fetchAPI.ad);\n  const data2 = useSelector(state => state.fetchAPI.data);\n  const isOpen = useSelector(state => state.SlidePop.isOpen);\n  const clickedData = useSelector(state => state.SlidePop.clickedData);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    clickedTab: '',\n    title: 'Relation'\n  });\n  useEffect(() => {\n    dispatch(currType(\"relation\"));\n    dispatch(apiProvider.getTemp(\"relation\"));\n  }, []);\n  const classes = useStyles(); //여기서부터 relation crud로 바꾸고\n\n  const addOrEdit = (equip, resetForm) => {\n    // dispatch(revRe(false))\n    apiProvider.insert(\"asset\", equip).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const editOrDelete = id => {\n    apiProvider.del(\"link\", id).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const handleData = () => {\n    dispatch(apiProvider.getNodes());\n  };\n\n  const handleCellClicked = (e, row) => {\n    apiProvider.getRow(\"link\", row.id).then(data => dispatch(clickedOp(data.data, true)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.menuButton,\n      children: /*#__PURE__*/_jsxDEV(TabletoolbarRel, {\n        title: state.title,\n        adde: addOrEdit,\n        delete: editOrDelete,\n        handleData: handleData,\n        handleCell: handleCellClicked,\n        children: /*#__PURE__*/_jsxDEV(RelFormP, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Relation, \"DnccEOqz3+QNTkz7svt2UOP9TZc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useStyles];\n});\n\n_c = Relation;\nexport default _c2 = /*#__PURE__*/React.memo(Relation);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Relation\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/Relation.js"],"names":["React","useState","useRef","useEffect","SlideTmp","apiProvider","makeStyles","axios","useDispatch","useSelector","revAd","revRe","revOp","clickedOp","currType","TabletoolbarRel","RelForm","RelFormP","useStyles","theme","root","flexGrow","menuButton","title","Relation","refresh2","state","fetchAPI","refre","add2","ad","data2","data","isOpen","SlidePop","clickedData","dispatch","setState","clickedTab","getTemp","classes","addOrEdit","equip","resetForm","insert","then","editOrDelete","id","del","handleData","getNodes","handleCellClicked","e","row","getRow","memo"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"../Asset/AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"../../styles.css\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType} from \"../../services/Redux/actions\";\nimport TabletoolbarRel from \"../../components/slidemine\";\nimport RelForm from \"../Asset/RelForm\";\nimport RelFormP from \"./RelsForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst Relation = () => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        clickedTab: '',\n        title: 'Relation'\n    });\n\n\n    useEffect(()=>{\n        dispatch(currType(\"relation\"))\n        dispatch(apiProvider.getTemp(\"relation\"))\n    }, [])\n\n    const classes = useStyles();\n\n//여기서부터 relation crud로 바꾸고\n    const addOrEdit = (equip, resetForm) => {\n        // dispatch(revRe(false))\n        apiProvider.insert(\"asset\", equip).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"link\", id).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const handleData = () => {\n        dispatch(apiProvider.getNodes())\n    }\n\n    const handleCellClicked = (e, row) => {\n        apiProvider.getRow(\"link\", row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n\n    }\n\n    return (\n        <div>\n            <main className={classes.menuButton}>\n                <TabletoolbarRel title={state.title} adde={addOrEdit} delete={editOrDelete} handleData={handleData} handleCell={handleCellClicked}>\n                    <RelFormP></RelFormP>\n                </TabletoolbarRel>\n            </main>\n\n        </div>\n    );\n};\n\n\nexport default React.memo(Relation);"]},"metadata":{},"sourceType":"module"}
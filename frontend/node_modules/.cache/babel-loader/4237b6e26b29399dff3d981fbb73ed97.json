{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/pages/Asset/Asset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SlideTmp from \"./AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"./AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\nimport { apiProvider } from \"../../services/Provider\";\nimport \"./style.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { revAd, revRe, revOp, clickedOp, currType, getAllR, openSelectPop } from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport MainContents from \"../../components/main/MainContents\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {// marginLeft: theme.spacing(30),\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst Asset = () => {\n  _s();\n\n  const refresh2 = useSelector(state => state.fetchAPI.refre);\n  const add2 = useSelector(state => state.fetchAPI.ad);\n  const data2 = useSelector(state => state.fetchAPI.data);\n  const openPop = useSelector(state => state.fetchAPI.open);\n  const selectPop = useSelector(state => state.fetchAPI.openSelect);\n  const isOpen = useSelector(state => state.SlidePop.isOpen);\n  const clickedData = useSelector(state => state.SlidePop.clickedData); //TODO::popup을 따로 빼야하나?\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose1 = () => {\n    setAnchorEl(null); // setOpen(true)\n  };\n\n  const handleClickOpen = () => {\n    setAnchorEl(null);\n    setOpen(true);\n    console.log(\"popup open\");\n  };\n\n  const handleClose = () => {\n    setOpen(false); // props.onaddChange();\n    //\n\n    dispatch(revAd(true));\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(currType(\"field\")); //이거 지금 안써서.. 요 useEffect 지워야할듯.\n\n    dispatch(apiProvider.getTemp(\"field\"));\n    handleData();\n  }, []);\n  const classes = useStyles();\n\n  const handleUpdate = data => {\n    apiProvider.update(\"field\", data).then(() => dispatch(revRe(true)));\n  };\n\n  const addOrEdit = data => {\n    // dispatch(revRe(false))\n    apiProvider.insert(\"field\", data).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const editOrDelete = id => {\n    apiProvider.del(\"field\", id).then(() => {\n      dispatch(revRe(true));\n    });\n  };\n\n  const deleteAll = () => {\n    apiProvider.delAll(\"field\");\n  };\n\n  const handleData = () => {\n    dispatch(apiProvider.getAllRedux(\"field\"));\n  };\n\n  const handleDataH = () => {\n    dispatch(apiProvider.getAll(\"history\"));\n  };\n\n  const handleCellClicked = row => {// apiProvider.getRow(\"field\", row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n  };\n\n  const openSelectPopup = () => {\n    dispatch(openSelectPop(true));\n  }; //TODO:: Field field table 맹글기\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component component-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"component__title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header__title\",\n          children: \" Field \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"binder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridTable, {\n        handleRow: handleCellClicked,\n        handleData: handleData,\n        addf: addOrEdit,\n        delete: editOrDelete,\n        update: handleUpdate,\n        columns: [{\n          Header: \"ID\",\n          accessor: \"fieldId\"\n        }, {\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Type\",\n          accessor: \"type\"\n        }, {\n          Header: \"Group\",\n          accessor: \"group\"\n        }, {\n          Header: \"Desc\",\n          accessor: \"desc\"\n        }] // openSelectPopup={openSelectPopup}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SlideTmp, {\n        tablist: [\"Details\", \"Relations\"],\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component component-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"component__title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header__title\",\n          children: \" History \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"binder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridTableH, {\n        name: \"field\",\n        handleRow: handleCellClicked,\n        handleData: handleDataH,\n        addf: addOrEdit,\n        delete: editOrDelete,\n        update: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SlideTmp, {\n        tablist: [\"Details\", \"Relations\"],\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), openPop && /*#__PURE__*/_jsxDEV(ReleasePopup, {\n        addf: addOrEdit,\n        deleteAll: deleteAll,\n        name: \"history\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Asset, \"TaYlCbJNUfta67cNi8ciiZzZlrQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useStyles];\n});\n\n_c = Asset;\nexport default _c2 = /*#__PURE__*/React.memo(Asset);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Asset\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/pages/Asset/Asset.js"],"names":["React","useState","useRef","useEffect","SlideTmp","AssetAddForm","TabletoolbarTmp","apiProvider","makeStyles","axios","useDispatch","useSelector","revAd","revRe","revOp","clickedOp","currType","getAllR","openSelectPop","ReleasePopup","GridTable","MainContents","GridTableH","SelectFieldPopup","useStyles","theme","root","flexGrow","menuButton","title","Asset","refresh2","state","fetchAPI","refre","add2","ad","data2","data","openPop","open","selectPop","openSelect","isOpen","SlidePop","clickedData","anchorEl","setAnchorEl","setOpen","handleClick","event","currentTarget","handleClose1","handleClickOpen","console","log","handleClose","dispatch","getTemp","handleData","classes","handleUpdate","update","then","addOrEdit","insert","editOrDelete","id","del","deleteAll","delAll","getAllRedux","handleDataH","getAll","handleCellClicked","row","openSelectPopup","Header","accessor","memo"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport SlideTmp from \"./AssetSlide\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport AssetAddForm from \"./AssetAddForm\";\nimport TabletoolbarTmp from \"../../components/tmpmine\";\nimport {apiProvider} from \"../../services/Provider\";\nimport \"./style.scss\"\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {revAd, revRe, revOp, clickedOp, currType, getAllR, openSelectPop} from \"../../services/Redux/actions\";\nimport ReleasePopup from \"../../components/popup/ReleasePopup\";\nimport GridTable from \"../../components/table/gridTable\";\nimport \"react-table/react-table.css\";\nimport MainContents from \"../../components/main/MainContents\";\nimport GridTableH from \"../../components/table/gridTableH\";\nimport SelectFieldPopup from \"../../components/popup/SelectFieldPopup\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        // marginLeft: theme.spacing(30),\n    },\n    title: {\n        flexGrow: 1,\n    },\n\n}));\n\nconst Asset = () => {\n\n    const refresh2 = useSelector(state => state.fetchAPI.refre);\n    const add2 = useSelector(state => state.fetchAPI.ad);\n    const data2 = useSelector(state => state.fetchAPI.data);\n    const openPop = useSelector(state=>state.fetchAPI.open)\n    const selectPop = useSelector(state=>state.fetchAPI.openSelect)\n    const isOpen = useSelector(state => state.SlidePop.isOpen)\n    const clickedData = useSelector(state => state.SlidePop.clickedData)\n    //TODO::popup을 따로 빼야하나?\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose1 = () => {\n        setAnchorEl(null);\n        // setOpen(true)\n    };\n    const handleClickOpen = () => {\n        setAnchorEl(null);\n        setOpen(true);\n        console.log(\"popup open\")\n\n    };\n    const handleClose = () => {\n        setOpen(false);\n        // props.onaddChange();\n        //\n        dispatch(revAd(true))\n    };\n\n\n    const dispatch = useDispatch();\n\n\n    useEffect(()=>{\n        dispatch(currType(\"field\")) //이거 지금 안써서.. 요 useEffect 지워야할듯.\n        dispatch(apiProvider.getTemp(\"field\"))\n\n        handleData()\n    }, [])\n\n    const classes = useStyles();\n\n\n    const handleUpdate = (data) => {\n        apiProvider.update(\"field\", data).then(()=>dispatch(revRe(true)))\n    }\n    const addOrEdit = (data) => {\n        // dispatch(revRe(false))\n        apiProvider.insert(\"field\", data).then(()=>{dispatch(revRe(true))})\n\n    }\n\n    const editOrDelete = (id) => {\n        apiProvider.del(\"field\", id).then(()=>{dispatch(revRe(true))})\n    }\n    const deleteAll = () => {\n        apiProvider.delAll(\"field\")\n    }\n\n    const handleData = () => {\n        dispatch(apiProvider.getAllRedux(\"field\"))\n    }\n\n    const handleDataH = () => {\n        dispatch(apiProvider.getAll(\"history\"))\n    }\n    const handleCellClicked = (row) => {\n        // apiProvider.getRow(\"field\", row.id).then((data)=>dispatch(clickedOp(data.data, true)))\n\n    }\n    const openSelectPopup = () => {\n        dispatch(openSelectPop(true))\n    }\n    //TODO:: Field field table 맹글기\n    return (\n        <React.Fragment>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> Field </span>\n                    <div className=\"binder\" />\n                </div>\n                {/*<MainContents />*/}\n\n                <GridTable\n                    handleRow={handleCellClicked}\n                    handleData={handleData}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    update={handleUpdate}\n                    columns = {\n                        [\n                        { Header: \"ID\", accessor: \"fieldId\" },\n                        { Header: \"Name\", accessor: \"name\" },\n                        { Header: \"Type\", accessor: \"type\" },\n                        { Header: \"Group\", accessor: \"group\" },\n                        { Header: \"Desc\", accessor: \"desc\" },\n                        ]\n                    }\n                    // openSelectPopup={openSelectPopup}\n                ></GridTable>\n\n\n\n                <SlideTmp\n                    tablist = {[\"Details\", \"Relations\"]}\n                    handleUpdate={handleUpdate}\n                >\n                </SlideTmp>\n\n\n            </div>\n\n            <div className=\"component component-list\">\n                <div className=\"component__title\"></div>\n                <div className=\"header-bar\">\n                    <span className=\"header__title\"> History </span>\n                    <div className=\"binder\" />\n                </div>\n\n                <GridTableH\n                    name=\"field\"\n                    handleRow={handleCellClicked}\n                    handleData={handleDataH}\n                    addf={addOrEdit}\n                    delete={editOrDelete}\n                    update={handleUpdate}\n                ></GridTableH>\n\n\n\n                <SlideTmp\n                    tablist = {[\"Details\", \"Relations\"]}\n                    handleUpdate={handleUpdate}\n                >\n                </SlideTmp>\n\n                { openPop && <ReleasePopup addf={addOrEdit} deleteAll={deleteAll} name=\"history\"> </ReleasePopup>}\n                {/*{ selectPop && <SelectFieldPopup> </SelectFieldPopup>}*/}\n\n            </div>\n\n\n\n\n\n        </React.Fragment>\n    );\n};\n\n\nexport default React.memo(Asset);"]},"metadata":{},"sourceType":"module"}
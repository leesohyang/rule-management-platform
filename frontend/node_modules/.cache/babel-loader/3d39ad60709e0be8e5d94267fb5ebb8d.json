{"ast":null,"code":"var _jsxFileName = \"/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/RelsForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { apiProvider } from \"../../services/Provider\";\nimport MultiSelect from \"../../components/controls/MultiSelect\";\nimport { revRe, selectedOp } from \"../../services/Redux/actions\";\nimport RelForm from \"../Asset/RelForm\";\nimport NodeSelect from \"../../components/NodeSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n})); //RelForm 컴포넌트를 두개 넣으면 되잖아?\n\nfunction RelFormP(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //clickedData가 있으면 그 데이터로 from node 고정. 없으면 ㄴㄴ\n  const data = useSelector(state => state.SlidePop.clickedData);\n  const classes = useStyles(); // const [cat, setCat] = React.useState('');\n\n  const entities = useSelector(state => state.SlidePop.entities);\n  const entityFrom = useSelector(state => state.SlidePop.entityFrom);\n  const selectedFrom = useSelector(state => state.SlidePop.selectedDataF);\n  const selected = useSelector(state => state.SlidePop.selectedData);\n  const [state, setState] = useState({\n    relation: '',\n    fromNodeID: '',\n    toNodeID: ''\n  });\n  const dispatch = useDispatch();\n  const validate = {}; //todo::validation만들기\n  // todo:: 새 줄 추가.. 도 만들어야함.\n\n  function useEffectSkipFirst(fn, arr) {\n    _s();\n\n    const isFirst = React.useRef(true);\n    useEffect(() => {\n      if (isFirst.current) {\n        isFirst.current = false;\n        return;\n      }\n\n      return fn();\n    }, arr);\n  }\n\n  _s(useEffectSkipFirst, \"x0DIufxRLPW/5DynbDxfl2fdtNU=\");\n\n  useEffectSkipFirst(() => {\n    //DetailRel.js 에 add function 가져다써야함.\n    console.log(state);\n    apiProvider.insertLink(state).then(() => {\n      dispatch(revRe(true));\n      dispatch(selectedOp([]));\n    });\n  }, [state]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //name 중복체크 하기\n\n    const fromNode = entityFrom.filter(item => selectedFrom.indexOf(item.name) >= 0)[0].id;\n    const ob = entities.filter(item => selected.indexOf(item.name) >= 0).map(i => i.id).map(item => ({\n      relation: \"Contain\",\n      fromNodeID: fromNode,\n      toNodeID: item\n    }));\n    setState(ob);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(NodeSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NodeSelect, {\n      type: \"Multi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n        type: \"submit\",\n        text: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(RelFormP, \"rZEL68xFuygov5+uiltpaX3uIOY=\", false, function () {\n  return [useSelector, useStyles, useSelector, useSelector, useSelector, useSelector, useDispatch, useEffectSkipFirst];\n});\n\n_c = RelFormP;\nexport default _c2 = /*#__PURE__*/React.memo(RelFormP);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RelFormP\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/leesohyang/WebstormProjects/tmp/src/pages/Relation/RelsForm.js"],"names":["React","useState","useEffect","Grid","useForm","Form","Controls","Input","Select","makeStyles","Typography","axios","useDispatch","useSelector","apiProvider","MultiSelect","revRe","selectedOp","RelForm","NodeSelect","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","RelFormP","props","data","state","SlidePop","clickedData","classes","entities","entityFrom","selectedFrom","selectedDataF","selected","selectedData","setState","relation","fromNodeID","toNodeID","dispatch","validate","useEffectSkipFirst","fn","arr","isFirst","useRef","current","console","log","insertLink","then","handleSubmit","e","preventDefault","fromNode","filter","item","indexOf","name","id","ob","map","i","memo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Grid, } from '@material-ui/core';\nimport {useForm, Form} from \"../../components/useForm\"\nimport Controls from \"../../components/controls/Controls\";\nimport Input from \"../../components/controls/Input\";\nimport Select from \"../../components/controls/Select\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {apiProvider} from \"../../services/Provider\";\nimport MultiSelect from \"../../components/controls/MultiSelect\";\nimport {revRe, selectedOp} from \"../../services/Redux/actions\";\nimport RelForm from \"../Asset/RelForm\";\nimport NodeSelect from \"../../components/NodeSelect\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n//RelForm 컴포넌트를 두개 넣으면 되잖아?\nfunction RelFormP(props) {\n    //clickedData가 있으면 그 데이터로 from node 고정. 없으면 ㄴㄴ\n\n    const data = useSelector(state => state.SlidePop.clickedData)\n    const classes = useStyles();\n    // const [cat, setCat] = React.useState('');\n\n    const entities = useSelector(state=>state.SlidePop.entities)\n    const entityFrom = useSelector(state=>state.SlidePop.entityFrom)\n    const selectedFrom = useSelector(state=>state.SlidePop.selectedDataF)\n    const selected = useSelector(state=>state.SlidePop.selectedData)\n\n    const [state, setState] = useState({\n        relation:'',\n        fromNodeID:'',\n        toNodeID:''\n    })\n    const dispatch = useDispatch();\n\n    const validate = {} //todo::validation만들기\n\n    // todo:: 새 줄 추가.. 도 만들어야함.\n    function useEffectSkipFirst(fn, arr){\n        const isFirst = React.useRef(true);\n\n        useEffect(()=>{\n            if(isFirst.current){\n                isFirst.current = false;\n                return;\n            }\n            return fn();\n        }, arr);\n    }\n\n    useEffectSkipFirst(()=>{\n        //DetailRel.js 에 add function 가져다써야함.\n        console.log(state)\n        apiProvider.insertLink(state).then(()=>{dispatch(revRe(true));dispatch(selectedOp([]))})\n    }, [state])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        //name 중복체크 하기\n        const fromNode = entityFrom.filter((item)=>selectedFrom.indexOf(item.name) >= 0)[0].id\n        const ob = entities.filter((item)=>selected.indexOf(item.name) >= 0).map((i)=>(i.id)).map((item)=>(\n            {relation:\"Contain\", fromNodeID:fromNode, toNodeID:item}\n        ))\n        setState(ob)\n\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <NodeSelect></NodeSelect>\n            <NodeSelect type=\"Multi\"></NodeSelect>\n            <div>\n                <Controls.Button\n                    type=\"submit\"\n                    text=\"Submit\"\n                />\n            </div>\n\n        </Form>\n        )\n}\n\nexport default React.memo(RelFormP)"]},"metadata":{},"sourceType":"module"}